{
	"info": {
		"_postman_id": "f15f3296-9253-4801-816a-34b859001fc8",
		"name": "OpenAPI v2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "api/v2",
			"item": [
				{
					"name": "companies",
					"item": [
						{
							"name": "pallet-types",
							"item": [
								{
									"name": "Получение списка доступных типов паллет по id ТК от ГО + схема",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var schema = {\r",
													"    \"type\": \"array\",\r",
													"    \"uniqueItems\": true,\r",
													"    \"items\": [{\r",
													"        type: \"object\",\r",
													"        properties:{\r",
													"         \"id\": {\r",
													"            \"type\":\"string\"\r",
													"             },\r",
													"         \"name\": {\r",
													"             \"type\":\"string\"\r",
													"             }\r",
													"        },\r",
													"        \"required\": [\"id\", \"name\"],\r",
													"        \"additionalProperties\": false\r",
													"    }]\r",
													"};\r",
													"\r",
													"const palletId = \"Euro\";\r",
													"const palletName = \"Евро\";\r",
													"\r",
													"jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Проверка схемы\", function () {\r",
													"    pm.expect(tv4.validate(jsonData, schema, false, true)).to.be.true;\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка на конкретный тип паллет\", function () { \r",
													"    palletNode = jsonData.find(x => x.id === palletId);\r",
													"    pm.expect(palletNode.name).to.eql(palletName);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{goTestoviyOT}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/companies/pallet-types/5b06c5b70c7e6f6764d50d0f",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"companies",
												"pallet-types",
												"5b06c5b70c7e6f6764d50d0f"
											]
										}
									},
									"response": []
								},
								{
									"name": "Получение списка доступных типов паллет по id ТК от ТК",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const palletId = \"High\";\r",
													"const palletName = \"Высокие\";\r",
													"\r",
													"jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Проверка на конкретный тип паллет\", function () { \r",
													"    palletNode = jsonData.find(x => x.id === palletId);\r",
													"    pm.expect(palletNode.name).to.eql(palletName);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tkFmOT}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/companies/pallet-types/5b06c5b70c7e6f6764d50d0f",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"companies",
												"pallet-types",
												"5b06c5b70c7e6f6764d50d0f"
											]
										}
									},
									"response": []
								},
								{
									"name": "Получение списка доступных типов паллет по id ТК от TC",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const palletId = \"Euro\";\r",
													"const palletName = \"Евро\";\r",
													"\r",
													"jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Проверка на конкретный тип паллет\", function () { \r",
													"    palletNode = jsonData.find(x => x.id === palletId);\r",
													"    pm.expect(palletNode.name).to.eql(palletName);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tsTanderOT}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/companies/pallet-types/5b06c5b70c7e6f6764d50d0f",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"companies",
												"pallet-types",
												"5b06c5b70c7e6f6764d50d0f"
											]
										}
									},
									"response": []
								},
								{
									"name": "Получение списка доступных типов паллет по foreignId ТК",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const palletId = \"Oversized\";\r",
													"const palletName = \"Негабаритные\";\r",
													"\r",
													"jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Проверка на конкретный тип паллет\", function () { \r",
													"    palletNode = jsonData.find(x => x.id === palletId);\r",
													"    pm.expect(palletNode.name).to.eql(palletName);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{goTestoviyOT}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/companies/pallet-types/foreign-id/4",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"companies",
												"pallet-types",
												"foreign-id",
												"4"
											]
										}
									},
									"response": []
								},
								{
									"name": "Получение списка доступных типов паллет по ИНН ТК",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"const palletId = \"Euro\";\r",
													"const palletName = \"Евро\";\r",
													"\r",
													"jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Проверка на конкретный тип паллет\", function () { \r",
													"    palletNode = jsonData.find(x => x.id === palletId);\r",
													"    pm.expect(palletNode.name).to.eql(palletName);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{goTestoviyOT}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/companies/pallet-types/inn/1",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"companies",
												"pallet-types",
												"inn",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "Получение списка доступных типов паллет по id ГО возвращает ошибку",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Проверка формулировки ошибки\", function () { \r",
													"    pm.expect(jsonData.error).to.eql(\"Перевозчик не найден\");\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что в теле ответа код 400\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tsTanderOT}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/companies/pallet-types/5b9215a97fc43222b0595e69",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"companies",
												"pallet-types",
												"5b9215a97fc43222b0595e69"
											]
										}
									},
									"response": []
								},
								{
									"name": "Получение списка доступных типов паллет по foreignId ТК от ТС возвращает пустой массив",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Проверка, что массив пустой\", function () {\r",
													"    pm.expect(jsonData).be.an(\"array\").that.is.empty;\r",
													"}); \r",
													"\r",
													"pm.test(\"Проверка, что код ответа 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tsTanderOT}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/companies/pallet-types/foreign-id/4",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"companies",
												"pallet-types",
												"foreign-id",
												"4"
											]
										}
									},
									"response": []
								},
								{
									"name": "Получение списка доступных типов паллет c невалидным токеном  возвращает ошибку",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Проверка, что в теле ответа код 400\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{badOT}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/companies/pallet-types/foreign-id/4",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"companies",
												"pallet-types",
												"foreign-id",
												"4"
											]
										}
									},
									"response": []
								},
								{
									"name": "Получение списка доступных типов паллет без авторизации возвращает ошибку",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка, что ответ не содержит тело\", function () {\r",
													"    pm.response.to.not.be.withBody;\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/companies/pallet-types/foreign-id/4",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"companies",
												"pallet-types",
												"foreign-id",
												"4"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Получение списка компаний ТК от ГО + схема",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var schema = {\r",
											"    \"type\": \"array\",\r",
											"    \"uniqueItems\": true,\r",
											"    \"items\": [{\r",
											"        type: \"object\",\r",
											"        properties:{\r",
											"         \"id\": {\r",
											"            \"type\":\"string\"\r",
											"             },\r",
											"         \"foreignIds\": {\r",
											"             \"type\":\"array\",\r",
											"             \"items\": {\"type\": \"string\"} \r",
											"             },\r",
											"         \"name\": {\r",
											"             \"type\":\"string\"\r",
											"             },\r",
											"         \"inn\": {\r",
											"             \"type\": \"string\"\r",
											"             },\r",
											"         \"type\": {\r",
											"             \"type\":\"string\"\r",
											"             }\r",
											"        },\r",
											"        \"required\": [\"id\", \"name\", \"type\", \"foreignIds\"],\r",
											"        \"additionalProperties\": false\r",
											"    }]\r",
											"};\r",
											"\r",
											"const companyName = \"FM Logistic\";\r",
											"const companyNameNoIds = \"Gardarika-Tsentr\";\r",
											"const idCompany = \"5b06c5b70c7e6f6764d50d0f\";\r",
											"const idsCompany = \"4\";\r",
											"const typeCompany =\"Carrier\";\r",
											"\r",
											"jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Проверка схемы\", function () {\r",
											"    pm.expect(tv4.validate(jsonData, schema, false, true)).to.be.true;\r",
											"});\r",
											"\r",
											"pm.test(\"Проверка на конкретную компанию\", function () { \r",
											"    _isContains = eval(pm.globals.get(\"_isContains\"));\r",
											"    pm.expect(_isContains(jsonData, \"name\", companyName)).to.have.true; \r",
											"});\r",
											"\r",
											"pm.test(\"Проверка, что в ответе только ТК\", function () {\r",
											"     _.each(jsonData, (item) => {\r",
											"    pm.expect(item.type).to.eql(typeCompany)});\r",
											"});\r",
											"\r",
											"pm.test(\"Проверка на конкретный ForeignID\", function () {\r",
											"    companyNode = jsonData.find(x => x.name === companyName);\r",
											"    pm.expect(companyNode.foreignIds).to.have.ordered.members([idsCompany]);\r",
											"});\r",
											"\r",
											"pm.test(\"Проверка, что ForeignID может отсутствовать\", function () {\r",
											"    companyNode = jsonData.find(x => x.name === companyNameNoIds);\r",
											"    pm.expect(companyNode.foreignIds).to.be.an('array').that.is.empty;\r",
											"});   \r",
											"\r",
											"pm.test(\"Проверка, что код ответа 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{goTestoviyOT}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/companies?type=Carrier",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"companies"
									],
									"query": [
										{
											"key": "type",
											"value": "Carrier"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение списка компаний ТК от TK",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"jsonData = pm.response.json();\r",
											"\r",
											"const companyName = \"FM Logistic\";\r",
											"const idCompany = \"5b06c5b70c7e6f6764d50d0f\";\r",
											"const typeCompany =\"Carrier\";\r",
											"\r",
											"pm.test(\"Проверка на конкретную компанию\", function () {\r",
											"   \r",
											"    _isContains = eval(pm.globals.get(\"_isContains\"));\r",
											"    pm.expect(_isContains(jsonData, \"name\" ,companyName)).to.have.true;\r",
											"\r",
											"    companyNode = jsonData.find(x => x.id === idCompany);\r",
											"    pm.expect(companyNode.name).to.eql(companyName);\r",
											"    \r",
											"});\r",
											"\r",
											"pm.test(\"Проверка, что в ответе только ТК\", function () {\r",
											"     _.each(jsonData, (item) => {\r",
											"    pm.expect(item.type).to.eql(typeCompany)});\r",
											"});\r",
											"\r",
											"pm.test(\"Проверка, что ForeignID отсутствует\", function () {\r",
											"    companyNode = jsonData.find(x => x.name === companyName);\r",
											"    pm.expect(companyNode.foreignIds).to.be.an('array').that.is.empty;\r",
											"});   \r",
											"\r",
											"pm.test(\"Проверка, что код ответа 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tkFmOT}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/companies?type=Carrier",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"companies"
									],
									"query": [
										{
											"key": "type",
											"value": "Carrier"
										},
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение списка компаний ТС",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"jsonData = pm.response.json();\r",
											"\r",
											"const companyName = \"АО «Тандер»\";\r",
											"const companyNameNoIds = \"Ozon\";\r",
											"const idCompany = \"5b06c5b70c7e6f6764d50d0e\";\r",
											"const idsCompany = \"61\";\r",
											"const typeCompany =\"Client\";\r",
											"\r",
											"pm.test(\"Проверка на конкретную компанию\", function () {\r",
											"   \r",
											"    _isContains = eval(pm.globals.get(\"_isContains\"));\r",
											"    pm.expect(_isContains(jsonData, \"name\" ,companyName)).to.have.true;\r",
											"\r",
											"    companyNode = jsonData.find(x => x.id === idCompany);\r",
											"    pm.expect(companyNode.name).to.eql(companyName);\r",
											"    \r",
											"});\r",
											"\r",
											"pm.test(\"Проверка, что в ответе только ТС\", function () {\r",
											"     _.each(jsonData, (item) => {\r",
											"    pm.expect(item.type).to.eql(typeCompany)});\r",
											"});\r",
											"\r",
											"pm.test(\"Проверка на конкретный ForeignID\", function () {\r",
											"    companyNode = jsonData.find(x => x.name === companyName);\r",
											"    pm.expect(companyNode.foreignIds).to.include(idsCompany);\r",
											"});\r",
											"\r",
											"pm.test(\"Проверка, что ForeignID может отсутствовать\", function () {\r",
											"    companyNode = jsonData.find(x => x.name === companyNameNoIds);\r",
											"    pm.expect(companyNode.foreignIds).to.be.an('array').that.is.empty;\r",
											"});   \r",
											"\r",
											"pm.test(\"Проверка, что код ответа 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{goTestoviyOT}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/companies?type=Client",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"companies"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "type",
											"value": "Client"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение списка компаний ГО от ГО",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"jsonData = pm.response.json();\r",
											"\r",
											"const companyName = \"ООО \\\"ДЖОНСОН & ДЖОНСОН\\\"\";\r",
											"const companyNameNoIds = \"Ozon\";\r",
											"const idCompany = \"5b06c5b70c7e6f6764d50d13\";\r",
											"const idsCompany = \"1959\";\r",
											"const typeCompany =\"Consignor\";\r",
											"\r",
											"pm.test(\"Проверка на конкретную компанию\", function () {\r",
											"   \r",
											"    _isContains = eval(pm.globals.get(\"_isContains\"));\r",
											"    pm.expect(_isContains(jsonData, \"name\" , companyName)).to.have.true;\r",
											"\r",
											"    companyNode = jsonData.find(x => x.id === idCompany);\r",
											"    pm.expect(companyNode.name).to.eql(companyName);\r",
											"    \r",
											"});\r",
											"\r",
											"pm.test(\"Проверка, что в ответе только ГО\", function () {\r",
											"     _.each(jsonData, (item) => {\r",
											"    pm.expect(item.type).to.eql(typeCompany)});\r",
											"});\r",
											"\r",
											"pm.test(\"Проверка на конкретный ForeignID\", function () {\r",
											"    companyNode = jsonData.find(x => x.name === companyName);\r",
											"    pm.expect(companyNode.foreignIds).to.have.ordered.members([idsCompany]);\r",
											"    pm.expect(companyNode.foreignIds).to.include(idsCompany);\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Проверка, что код ответа 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{goTestoviyOT}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/companies?type=Consignor",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"companies"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "type",
											"value": "Consignor"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение данных компании ГО по ID + схема",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var schema = {\r",
											"    \"type\": \"object\",\r",
											"    \"uniqueItems\": true,\r",
											"    \"properties\": {\r",
											"        \"id\": {\"type\":\"string\"},\r",
											"        \"foreignIds\": {\r",
											"             \"type\":\"array\",\r",
											"             \"items\": {\"type\": \"string\"} \r",
											"             },\r",
											"        \"name\": {\"type\":\"string\"},\r",
											"        \"inn\": {\"type\": \"string\"},\r",
											"        \"type\": {\"type\":\"string\"}\r",
											"        },\r",
											"        \"required\": [\"id\", \"name\", \"type\", \"foreignIds\"],\r",
											"        \"additionalProperties\": false\r",
											"};\r",
											"\r",
											"jsonData = pm.response.json();\r",
											"\r",
											"const companyName = \"Pooling\";\r",
											"const idsCompany = \"TestPooling\";\r",
											"\r",
											"\r",
											"pm.test(\"Проверка схемы\", function () {\r",
											"    pm.expect(tv4.validate(jsonData, schema, false, true)).to.be.true;\r",
											"});\r",
											"\r",
											"pm.test(\"Проверка на конкретную компанию\", function () {\r",
											"    pm.expect(jsonData.name).to.eql(companyName);\r",
											"});\r",
											"\r",
											"pm.test(\"Проверка на конкретный ForeignID\", function () {\r",
											"    pm.expect(jsonData.foreignIds).to.include(idsCompany);\r",
											"});\r",
											"\r",
											"pm.test(\"Проверка, что код ответа 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{goPoolingOT}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/companies/5c90e42feea25211d0eb68aa",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"companies",
										"5c90e42feea25211d0eb68aa"
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение данных компании ТК по ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"jsonData = pm.response.json();\r",
											"\r",
											"const companyName = \"Итеко\";\r",
											"const companyType = \"Carrier\";\r",
											"\r",
											"pm.test(\"Проверка на конкретную компанию\", function () {\r",
											"    pm.expect(jsonData.name).to.eql(companyName);\r",
											"});\r",
											"\r",
											"pm.test(\"Проверка, что компания соответствует типу\", function () {\r",
											"    pm.expect(jsonData.type).to.eql(companyType);\r",
											"});\r",
											"\r",
											"pm.test(\"Проверка, что код ответа 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tkFmOT}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/companies/5bbfc399cee38529ac596891",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"companies",
										"5bbfc399cee38529ac596891"
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение данных компании ТС по ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"jsonData = pm.response.json();\r",
											"\r",
											"const companyName = \"X5 Retail Group\";\r",
											"const companyType = \"Client\";\r",
											"\r",
											"pm.test(\"Проверка на конкретную компанию\", function () {\r",
											"    pm.expect(jsonData.name).to.eql(companyName);\r",
											"});\r",
											"\r",
											"pm.test(\"Проверка, что компания соответствует типу\", function () {\r",
											"    pm.expect(jsonData.type).to.eql(companyType);\r",
											"});\r",
											"\r",
											"pm.test(\"Проверка, что код ответа 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tsTanderOT}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/companies/5b7c27eed9fd553724033b20",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"companies",
										"5b7c27eed9fd553724033b20"
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение информации о своей компании",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"jsonData = pm.response.json();\r",
											"\r",
											"const companyName = \"ООО \\\"ДЖОНСОН & ДЖОНСОН\\\"\";\r",
											"const companyInn = \"7725216105\";\r",
											"\r",
											"pm.test(\"Проверка на конкретную компанию\", function () {\r",
											"    pm.expect(jsonData.name).to.eql(companyName);\r",
											"});\r",
											"\r",
											"pm.test(\"Проверка, что ИНН соответствует компании\", function () {\r",
											"    pm.expect(jsonData.inn).to.eql(companyInn);\r",
											"});\r",
											"\r",
											"pm.test(\"Проверка, что код ответа 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{goTestoviyOT}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/companies/my",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"companies",
										"my"
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение данных компании TC по foreignId ГО",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"jsonData = pm.response.json();\r",
											"\r",
											"const companyName = \"АО «Тандер»\";\r",
											"const idsCompany = \"66\";\r",
											"\r",
											"pm.test(\"Проверка на конкретную компанию\", function () {\r",
											"    pm.expect(jsonData.name).to.eql(companyName);\r",
											"});\r",
											"\r",
											"pm.test(\"Проверка на конкретный ForeignID\", function () {\r",
											"    pm.expect(jsonData.foreignIds).to.include(idsCompany);\r",
											"});\r",
											"\r",
											"pm.test(\"Проверка, что код ответа 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{goTestoviyOT}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/companies/foreign-id/66",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"companies",
										"foreign-id",
										"66"
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение данных компании TK по foreignId ГО",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"jsonData = pm.response.json();\r",
											"\r",
											"const companyName = \"FM Logistic\";\r",
											"const idsCompany = \"4\";\r",
											"\r",
											"pm.test(\"Проверка на конкретную компанию\", function () {\r",
											"    pm.expect(jsonData.name).to.eql(companyName);\r",
											"});\r",
											"\r",
											"pm.test(\"Проверка на конкретный ForeignID\", function () {\r",
											"    pm.expect(jsonData.foreignIds).to.include(idsCompany);\r",
											"});\r",
											"\r",
											"pm.test(\"Проверка, что код ответа 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{goTestoviyOT}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/companies/foreign-id/4",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"companies",
										"foreign-id",
										"4"
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение списка всех компаний от ГО",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"jsonData = pm.response.json();\r",
											"\r",
											"const companyName = \"FM Logistic\";\r",
											"const companyName2 = \"АО «Тандер»\";\r",
											"const companyName3 = \"ООО \\\"ДЖОНСОН & ДЖОНСОН\\\"\";\r",
											"const companyNameNoIds = \"Gardarika-Tsentr\";\r",
											"const idCompany = \"5b06c5b70c7e6f6764d50d0f\";\r",
											"const idCompany2 = \"5b06c5b70c7e6f6764d50d0e\";\r",
											"const idsCompany = \"4\";\r",
											"const typeCompany =\"Consignor\";\r",
											"\r",
											"pm.test(\"Проверка на конкретную компанию\", function () {\r",
											"   \r",
											"    _isContains = eval(pm.globals.get(\"_isContains\"));\r",
											"    pm.expect(_isContains(jsonData, \"name\", companyName)).to.have.true;\r",
											"    pm.expect(_isContains(jsonData, \"name\", companyName2)).to.have.true;\r",
											"\r",
											"    companyNode = jsonData.find(x => x.id === idCompany);\r",
											"    pm.expect(companyNode.name).to.eql(companyName);\r",
											"\r",
											"    companyNode = jsonData.find(x => x.id === idCompany2);\r",
											"    pm.expect(companyNode.name).to.eql(companyName2);\r",
											"    \r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"Проверка на конкретный ForeignID\", function () {\r",
											"    companyNode = jsonData.find(x => x.name === companyName);\r",
											"    pm.expect(companyNode.foreignIds).to.have.ordered.members([idsCompany]);\r",
											"    pm.expect(companyNode.foreignIds).to.include(idsCompany);\r",
											"});\r",
											"\r",
											"pm.test(\"Проверка, что ForeignID может отсутствовать\", function () {\r",
											"    companyNode = jsonData.find(x => x.name === companyNameNoIds);\r",
											"    pm.expect(companyNode.foreignIds).to.be.an('array').that.is.empty;\r",
											"});   \r",
											"\r",
											"pm.test(\"Проверка, что код ответа 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{goTestoviyOT}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/companies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"companies"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение списка всех компаний от ТК",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"jsonData = pm.response.json();\r",
											"\r",
											"const companyName = \"FM Logistic\";\r",
											"const companyName2 = \"АО «Тандер»\";\r",
											"const companyNameNoIds = \"Gardarika-Tsentr\";\r",
											"const idCompany = \"5b06c5b70c7e6f6764d50d0f\";\r",
											"const idCompany2 = \"5b06c5b70c7e6f6764d50d0e\";\r",
											"const typeCompany =\"Consignor\";\r",
											"\r",
											"pm.test(\"Проверка на конкретную компанию\", function () {\r",
											"   \r",
											"    _isContains = eval(pm.globals.get(\"_isContains\"));\r",
											"    pm.expect(_isContains(jsonData, \"name\", companyName)).to.have.true;\r",
											"    pm.expect(_isContains(jsonData, \"name\", companyName2)).to.have.true;\r",
											"\r",
											"    companyNode = jsonData.find(x => x.id === idCompany);\r",
											"    pm.expect(companyNode.name).to.eql(companyName);\r",
											"\r",
											"    companyNode = jsonData.find(x => x.id === idCompany2);\r",
											"    pm.expect(companyNode.name).to.eql(companyName2);   \r",
											"});\r",
											"\r",
											"pm.test(\"Проверка, что ForeignID отсутствует\", function () {\r",
											"    companyNode = jsonData.find(x => x.name === companyNameNoIds);\r",
											"    pm.expect(companyNode.foreignIds).to.be.an('array').that.is.empty;\r",
											"});   \r",
											"\r",
											"pm.test(\"Проверка, что код ответа 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tkFmOT}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/companies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"companies"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение списка ГО от ТК возвращает не пустой массив",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Проверка, что массив не пустой\", function () {\r",
											"    pm.expect(jsonData).be.an(\"array\").not.to.be.empty;\r",
											"}); \r",
											"\r",
											"pm.test(\"Проверка, что код ответа 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tkFmOT}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/companies?type=Consignor",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"companies"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "type",
											"value": "Consignor"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение списка ГО от ТС возвращает не пустой массив",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Проверка, что массив не пустой\", function () {\r",
											"    pm.expect(jsonData).be.an(\"array\").not.to.be.empty;\r",
											"}); \r",
											"\r",
											"pm.test(\"Проверка, что код ответа 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tsTanderOT}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/companies?type=Consignor",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"companies"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										},
										{
											"key": "type",
											"value": "Consignor"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение данных компании ГО по ID",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"jsonData = pm.response.json();\r",
											"\r",
											"const companyName = \"Pooling\";\r",
											"\r",
											"pm.test(\"Проверка, что код ответа 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Проверка на конкретную компанию\", function () {\r",
											"    pm.expect(jsonData.name).to.eql(companyName);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{goTestoviyOT}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/companies/5c90e42feea25211d0eb68aa",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"companies",
										"5c90e42feea25211d0eb68aa"
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение данных компании ГО по foreignId ТК",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"jsonData = pm.response.json();\r",
											"\r",
											"const companyName = \"ООО \\\"ДЖОНСОН & ДЖОНСОН\\\"\";\r",
											"\r",
											"pm.test(\"Проверка, что код ответа 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Проверка на конкретную компанию\", function () {\r",
											"    pm.expect(jsonData.name).to.eql(companyName);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tkFmOT}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/companies/foreign-id/ДЖОНСОНИДЖОНСОН",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"companies",
										"foreign-id",
										"ДЖОНСОНИДЖОНСОН"
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение данных компании ГО по foreignId ГО",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"jsonData = pm.response.json();\r",
											"\r",
											"const companyName = \"ООО \\\"ДЖОНСОН & ДЖОНСОН\\\"\";\r",
											"\r",
											"pm.test(\"Проверка, что код ответа 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Проверка на конкретную компанию\", function () {\r",
											"    pm.expect(jsonData.name).to.eql(companyName);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{goPoolingOT}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/companies/foreign-id/42",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"companies",
										"foreign-id",
										"42"
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение списока компаний без авторизации возвращает ошибку",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка, что ответ не содержит тело\", function () {\r",
											"    pm.response.to.not.be.withBody;\r",
											"});\r",
											"\r",
											"pm.test(\"Проверка, что код ответа 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/companies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"companies"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение списока компаний c невалидным токеном  возвращает ошибку",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Проверка, что в теле ответа код 400\", function () {\r",
											"    pm.expect(jsonData.status).to.eql(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Проверка, что код ответа 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{badOT}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/companies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"companies"
									],
									"query": [
										{
											"key": "",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "definitions",
					"item": [
						{
							"name": "Получение списка грузоподъемностей + схема",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var schema = {\r",
											"    \"type\": \"array\",\r",
											"    \"uniqueItems\": true,\r",
											"    \"minItems\": 8,\r",
											"    \"maxItems\": 8,\r",
											"    \"uniqueItems\": true,\r",
											"    \"items\": [{\r",
											"        type: \"object\",\r",
											"        properties:{\r",
											"         \"id\": {\r",
											"            \"type\":\"string\"\r",
											"             },\r",
											"         \"name\": {\r",
											"             \"type\":\"string\"\r",
											"             }\r",
											"        },\r",
											"        \"required\": [\"id\", \"name\"],\r",
											"        \"additionalProperties\": false\r",
											"    }]\r",
											"};\r",
											"\r",
											"const capacityId = \"t1_5\";\r",
											"const capacityName = \"1,5т\";\r",
											"\r",
											"jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Проверка схемы\", function () {\r",
											"    pm.expect(tv4.validate(jsonData, schema, false, true)).to.be.true;\r",
											"});\r",
											"\r",
											"pm.test(\"Проверка на конкретный тип грузоподъемности\", function () { \r",
											"    capacityNode = jsonData.find(x => x.id === capacityId);\r",
											"    pm.expect(capacityNode.name).to.eql(capacityName);\r",
											"});\r",
											"\r",
											"pm.test(\"Проверка, что код ответа 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{goPoolingOT}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/definitions/car-capacity-types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"definitions",
										"car-capacity-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение списка грузоподъемностей без авторизации возвращает ошибку",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка, что ответ не содержит тело\", function () {\r",
											"    pm.response.to.not.be.withBody;\r",
											"});\r",
											"\r",
											"pm.test(\"Проверка, что код ответа 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/definitions/car-capacity-types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"definitions",
										"car-capacity-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение списка типов кузова + схема",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var schema = {\r",
											"    \"type\": \"array\",\r",
											"    \"uniqueItems\": true,\r",
											"    \"minItems\": 3,\r",
											"    \"maxItems\": 3,\r",
											"    \"items\": [{\r",
											"        type: \"object\",\r",
											"        properties:{\r",
											"         \"id\": {\r",
											"            \"type\":\"string\"\r",
											"             },\r",
											"         \"name\": {\r",
											"             \"type\":\"string\"\r",
											"             }\r",
											"        },\r",
											"        \"required\": [\"id\", \"name\"],\r",
											"        \"additionalProperties\": false\r",
											"    }],\r",
											"};\r",
											"\r",
											"const carId = \"Tent\";\r",
											"const carName = \"Тент\";\r",
											"\r",
											"jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Проверка схемы\", function () {\r",
											"    pm.expect(tv4.validate(jsonData, schema, false, true)).to.be.true;\r",
											"});\r",
											"\r",
											"pm.test(\"Проверка на конкретный тип кузова\", function () { \r",
											"    carNode = jsonData.find(x => x.id === carId);\r",
											"    pm.expect(carNode.name).to.eql(carName);\r",
											"});\r",
											"\r",
											"pm.test(\"Проверка, что код ответа 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{goPoolingOT}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/definitions/car-types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"definitions",
										"car-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение списка типов кузова без авторизации возвращает ошибку",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка, что ответ не содержит тело\", function () {\r",
											"    pm.response.to.not.be.withBody;\r",
											"});\r",
											"\r",
											"pm.test(\"Проверка, что код ответа 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/definitions/car-types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"definitions",
										"car-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение списка типов компаний + схема",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var schema = {\r",
											"    \"type\": \"array\",\r",
											"    \"uniqueItems\": true,\r",
											"    \"minItems\": 3,\r",
											"    \"maxItems\": 3,\r",
											"    \"uniqueItems\": true,\r",
											"    \"items\": [{\r",
											"        type: \"object\",\r",
											"        properties:{\r",
											"         \"id\": {\r",
											"            \"type\":\"string\"\r",
											"             },\r",
											"         \"name\": {\r",
											"             \"type\":\"string\"\r",
											"             }\r",
											"        },\r",
											"        \"required\": [\"id\", \"name\"],\r",
											"        \"additionalProperties\": false\r",
											"    }]\r",
											"};\r",
											"\r",
											"const companytypeId = \"Client\";\r",
											"const companytypeName = \"Торговая сеть\";\r",
											"\r",
											"jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Проверка схемы\", function () {\r",
											"    pm.expect(tv4.validate(jsonData, schema, false, true)).to.be.true;\r",
											"});\r",
											"\r",
											"pm.test(\"Проверка на конкретный тип компании\", function () { \r",
											"    companytypeNode = jsonData.find(x => x.id === companytypeId);\r",
											"    pm.expect(companytypeNode.name).to.eql(companytypeName);\r",
											"});\r",
											"\r",
											"pm.test(\"Проверка, что код ответа 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{goPoolingOT}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/definitions/company-types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"definitions",
										"company-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение списка типов компаний без авторизации возвращает ошибку",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка, что ответ не содержит тело\", function () {\r",
											"    pm.response.to.not.be.withBody;\r",
											"});\r",
											"\r",
											"pm.test(\"Проверка, что код ответа 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/definitions/company-types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"definitions",
										"company-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение списка типов заказа + схема",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var schema = {\r",
											"    \"type\": \"array\",\r",
											"    \"uniqueItems\": true,\r",
											"    \"minItems\": 10,\r",
											"    \"maxItems\": 10,\r",
											"    \"uniqueItems\": true,\r",
											"    \"items\": [{\r",
											"        type: \"object\",\r",
											"        properties:{\r",
											"         \"id\": {\r",
											"            \"type\":\"string\"\r",
											"             },\r",
											"         \"name\": {\r",
											"             \"type\":\"string\"\r",
											"             }\r",
											"        },\r",
											"        \"required\": [\"id\", \"name\"],\r",
											"        \"additionalProperties\": false\r",
											"    }]\r",
											"};\r",
											"\r",
											"const orderId = \"Stock\";\r",
											"const orderName = \"СТОК\";\r",
											"\r",
											"jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Проверка схемы\", function () {\r",
											"    pm.expect(tv4.validate(jsonData, schema, false, true)).to.be.true;\r",
											"});\r",
											"\r",
											"pm.test(\"Проверка на конкретный тип заказа\", function () { \r",
											"    orderNode = jsonData.find(x => x.id === orderId);\r",
											"    pm.expect(orderNode.name).to.eql(orderName);\r",
											"});\r",
											"\r",
											"pm.test(\"Проверка, что код ответа 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{goPoolingOT}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/definitions/order-types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"definitions",
										"order-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение списка типов заказа без авторизации возвращает ошибку",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка, что ответ не содержит тело\", function () {\r",
											"    pm.response.to.not.be.withBody;\r",
											"});\r",
											"\r",
											"pm.test(\"Проверка, что код ответа 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/definitions/order-types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"definitions",
										"order-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение списка типов паллет + схема",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var schema = {\r",
											"    \"type\": \"array\",\r",
											"    \"uniqueItems\": true,\r",
											"    \"minItems\": 5,\r",
											"    \"maxItems\": 5,\r",
											"    \"uniqueItems\": true,\r",
											"    \"items\": [{\r",
											"        type: \"object\",\r",
											"        properties:{\r",
											"         \"id\": {\r",
											"            \"type\":\"string\"\r",
											"             },\r",
											"         \"name\": {\r",
											"             \"type\":\"string\"\r",
											"             }\r",
											"        },\r",
											"        \"required\": [\"id\", \"name\"],\r",
											"        \"additionalProperties\": false\r",
											"    }]\r",
											"};\r",
											"\r",
											"const palletId = \"Mixed\";\r",
											"const palletName = \"Смешанные\";\r",
											"\r",
											"jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Проверка схемы\", function () {\r",
											"    pm.expect(tv4.validate(jsonData, schema, false, true)).to.be.true;\r",
											"});\r",
											"\r",
											"pm.test(\"Проверка на конкретный тип паллет\", function () { \r",
											"    palletNode = jsonData.find(x => x.id === palletId);\r",
											"    pm.expect(palletNode.name).to.eql(palletName);\r",
											"});\r",
											"\r",
											"pm.test(\"Проверка, что код ответа 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{goPoolingOT}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/definitions/pallet-types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"definitions",
										"pallet-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение списка типов паллет без авторизации возвращает ошибку",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка, что ответ не содержит тело\", function () {\r",
											"    pm.response.to.not.be.withBody;\r",
											"});\r",
											"\r",
											"pm.test(\"Проверка, что код ответа 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/definitions/pallet-types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"definitions",
										"pallet-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение списка типов грузов + схема",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"jsonData = pm.response.json();",
											"var schema = {",
											"    \"type\": \"array\",",
											"    \"uniqueItems\": true,",
											"    \"minItems\": 6,",
											"    \"maxItems\": 6,",
											"    \"items\": [{",
											"        type: \"object\",",
											"        properties:{",
											"         \"id\": {",
											"            \"type\":\"string\"",
											"             },",
											"         \"name\": {",
											"             \"type\":\"string\"",
											"             }",
											"        },",
											"        \"required\": [\"id\", \"name\"],",
											"        \"additionalProperties\": false",
											"    }],",
											"};",
											"",
											"pm.test(\"Проверка ответа\", function () {",
											"    _isContains = eval(pm.globals.get(\"_isContains\"));",
											"",
											"    pm.expect(_isContains(jsonData, \"id\" ,\"Food\")).to.have.true;",
											"    pm.expect(_isContains(jsonData, \"id\" ,\"NonFood\")).to.be.true;",
											"    pm.expect(_isContains(jsonData, \"id\" ,\"Alco\")).to.be.true;",
											"    pm.expect(_isContains(jsonData, \"id\" ,\"Fresh\")).to.have.true;",
											"    pm.expect(_isContains(jsonData, \"id\" ,\"Freeze\")).to.be.true;",
											"    pm.expect(_isContains(jsonData, \"id\" ,\"Beer\")).to.be.true;",
											"",
											"    productTypesNode = jsonData.find(x => x.id === \"Food\");",
											"    pm.expect(productTypesNode.name).to.eql(\"Food\");",
											"    productTypesNode = jsonData.find(x => x.id === \"Alco\");",
											"    pm.expect(productTypesNode.name).to.eql(\"Alco\");",
											"    productTypesNode = jsonData.find(x => x.id === \"Fresh\");",
											"    pm.expect(productTypesNode.name).to.eql(\"Fresh\");",
											"    productTypesNode = jsonData.find(x => x.id === \"Freeze\");",
											"    pm.expect(productTypesNode.name).to.eql(\"Freeze\"); ",
											"    productTypesNode = jsonData.find(x => x.id === \"Beer\");",
											"    pm.expect(productTypesNode.name).to.eql(\"Beer\");",
											"    productTypesNode = jsonData.find(x => x.id === \"NonFood\");",
											"    pm.expect(productTypesNode.name).to.eql(\"Non-Food\");",
											"});",
											"",
											"pm.test(\"Проверка схемы\", function () {",
											"    pm.expect(tv4.validate(jsonData, schema, false, true)).to.be.true;",
											"});",
											"",
											"pm.test(\"Проверка что статус код 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{goTestoviyOT}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/definitions/product-types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"definitions",
										"product-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение списка типов складов + схема",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"jsonData = pm.response.json();",
											"var schema = {",
											"    \"type\": \"array\",",
											"    \"uniqueItems\": true,",
											"    \"minItems\": 3,",
											"    \"maxItems\": 3,",
											"    \"items\": [{",
											"        type: \"object\",",
											"        properties:{",
											"         \"id\": {",
											"            \"type\":\"string\"",
											"             },",
											"         \"name\": {",
											"             \"type\":\"string\"",
											"             }",
											"        },",
											"        \"required\": [\"id\", \"name\"],",
											"        \"additionalProperties\": false",
											"    }],",
											"};",
											"",
											"pm.test(\"Проверка схемы\", function () {",
											"    pm.expect(tv4.validate(jsonData, schema, false, true)).to.be.true;",
											"});",
											"",
											"pm.test(\"Проверка ответа\", function () { ",
											"    _isContains = eval(pm.globals.get(\"_isContains\"));",
											"",
											"    pm.expect(_isContains(jsonData, \"id\" ,\"Client\")).to.have.true;",
											"    pm.expect(_isContains(jsonData, \"id\" ,\"Carrier\")).to.be.true;",
											"    pm.expect(_isContains(jsonData, \"id\" ,\"Consignor\")).to.be.true;",
											"",
											"    reservationTypesNode = jsonData.find(x => x.id === \"Client\");",
											"    pm.expect(reservationTypesNode.name).to.eql(\"Склад получателя\");",
											"    reservationTypesNode = jsonData.find(x => x.id === \"Carrier\");",
											"    pm.expect(reservationTypesNode.name).to.eql(\"Склад ТК\");",
											"    reservationTypesNode = jsonData.find(x => x.id === \"Consignor\");",
											"    pm.expect(reservationTypesNode.name).to.eql(\"Склад поставщика\");; ",
											"});",
											"",
											"pm.test(\"Проверка что статус код 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{goTestoviyOT}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/definitions/warehouse-types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"definitions",
										"warehouse-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение списка типов доставки + схема",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"jsonData = pm.response.json();",
											"var schema = {",
											"    \"type\": \"array\",",
											"    \"uniqueItems\": true,",
											"    \"minItems\": 4,",
											"    \"maxItems\": 4,",
											"    \"items\": [{",
											"        type: \"object\",",
											"        properties:{",
											"         \"id\": {",
											"            \"type\":\"string\"",
											"             },",
											"         \"name\": {",
											"             \"type\":\"string\"",
											"             }",
											"        },",
											"        \"required\": [\"id\", \"name\"],",
											"        \"additionalProperties\": false",
											"    }],",
											"};",
											"",
											"pm.test(\"Проверка схемы\", function () {",
											"    pm.expect(tv4.validate(jsonData, schema, false, true)).to.be.true;",
											"});",
											"",
											"pm.test(\"Проверка ответа\", function () {",
											"    _isContains = eval(pm.globals.get(\"_isContains\"));",
											"",
											"    pm.expect(_isContains(jsonData, \"id\" ,\"LTL\")).to.have.true;",
											"    pm.expect(_isContains(jsonData, \"id\" ,\"FTL\")).to.be.true;",
											"    pm.expect(_isContains(jsonData, \"id\" ,\"Pooling\")).to.be.true;",
											"    pm.expect(_isContains(jsonData, \"id\" ,\"Supplement\")).to.have.true;",
											"",
											"    reservationTypesNode = jsonData.find(x => x.id === \"LTL\");",
											"    pm.expect(reservationTypesNode.name).to.eql(\"LTL\");",
											"    reservationTypesNode = jsonData.find(x => x.id === \"FTL\");",
											"    pm.expect(reservationTypesNode.name).to.eql(\"FTL\");",
											"    reservationTypesNode = jsonData.find(x => x.id === \"Pooling\");",
											"    pm.expect(reservationTypesNode.name).to.eql(\"Pooling\");",
											"    reservationTypesNode = jsonData.find(x => x.id === \"Supplement\");",
											"    pm.expect(reservationTypesNode.name).to.eql(\"Догруз\"); ",
											"});",
											"",
											"pm.test(\"Проверка что статус код 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{goTestoviyOT}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/definitions/shipping-types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"definitions",
										"shipping-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение списка типов бронирования+ схема",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"jsonData = pm.response.json();",
											"var schema = {",
											"    \"type\": \"array\",",
											"    \"uniqueItems\": true,",
											"    \"minItems\": 6,",
											"    \"maxItems\": 6,",
											"    \"items\": [{",
											"        type: \"object\",",
											"        properties:{",
											"         \"id\": {",
											"            \"type\":\"string\"",
											"             },",
											"         \"name\": {",
											"             \"type\":\"string\"",
											"             }",
											"        },",
											"        \"required\": [\"id\", \"name\"],",
											"        \"additionalProperties\": false",
											"    }],",
											"};",
											"",
											"",
											"",
											"pm.test(\"Проверка схемы\", function () {",
											"    pm.expect(tv4.validate(jsonData, schema, false, true)).to.be.true;",
											"});",
											"",
											"pm.test(\"Проверка ответа\", function () {",
											"    _isContains = eval(pm.globals.get(\"_isContains\"));",
											"",
											"    pm.expect(_isContains(jsonData, \"id\" ,\"Basic\")).to.have.true;",
											"    pm.expect(_isContains(jsonData, \"id\" ,\"MilkRun\")).to.be.true;",
											"    pm.expect(_isContains(jsonData, \"id\" ,\"WithSupplement\")).to.be.true;",
											"    pm.expect(_isContains(jsonData, \"id\" ,\"FirstMile\")).to.have.true;",
											"",
											"    reservationTypesNode = jsonData.find(x => x.id === \"Basic\");",
											"    pm.expect(reservationTypesNode.name).to.eql(\"Basic\");",
											"    reservationTypesNode = jsonData.find(x => x.id === \"MilkRun\");",
											"    pm.expect(reservationTypesNode.name).to.eql(\"MilkRun\");",
											"    reservationTypesNode = jsonData.find(x => x.id === \"WithSupplement\");",
											"    pm.expect(reservationTypesNode.name).to.eql(\"С догрузом\");",
											"    reservationTypesNode = jsonData.find(x => x.id === \"FirstMile\");",
											"    pm.expect(reservationTypesNode.name).to.eql(\"Первая миля\"); ",
											"});",
											"",
											"pm.test(\"Проверка что статус код 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tsTanderOT}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/definitions/reservation-types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"definitions",
										"reservation-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение списка статусов бронирования + схема",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"jsonData = pm.response.json();",
											"var schema = {",
											"    \"type\": \"array\",",
											"    \"uniqueItems\": true,",
											"    \"minItems\": 14,",
											"    \"maxItems\": 14,",
											"    \"items\": [{",
											"        type: \"object\",",
											"        properties:{",
											"         \"id\": {",
											"            \"type\":\"string\"",
											"             },",
											"         \"name\": {",
											"             \"type\":\"string\"",
											"             }",
											"        },",
											"        \"required\": [\"id\", \"name\"],",
											"        \"additionalProperties\": false",
											"    }],",
											"};",
											"",
											"pm.test(\"Проверка схемы\", function () {",
											"    pm.expect(tv4.validate(jsonData, schema, false, true)).to.be.true;",
											"});",
											"",
											"pm.test(\"Проверка ответа\", function () {",
											"     jsonData = pm.response.json();",
											"    _isContains = eval(pm.globals.get(\"_isContains\"));",
											"",
											"    pm.expect(_isContains(jsonData, \"id\" ,\"Draft\")).to.have.true;",
											"    pm.expect(_isContains(jsonData, \"id\" ,\"OnConfirmation\")).to.be.true;",
											"    pm.expect(_isContains(jsonData, \"id\" ,\"InProgress\")).to.be.true;",
											"    pm.expect(_isContains(jsonData, \"id\" ,\"Delivered\")).to.have.true;",
											"    pm.expect(_isContains(jsonData, \"id\" ,\"Canceled\")).to.be.true;",
											"    pm.expect(_isContains(jsonData, \"id\" ,\"CarrierCanceled\")).to.be.true;",
											"    pm.expect(_isContains(jsonData, \"id\" ,\"Deleted\")).to.be.true;",
											"    pm.expect(_isContains(jsonData, \"id\" ,\"ClarificationNeeded\")).to.be.true;",
											"",
											"    pm.expect(_isContains(jsonData, \"id\" ,\"CostConfirmed\")).to.be.true;",
											"    pm.expect(_isContains(jsonData, \"id\" ,\"CostDeclined\")).to.be.true;",
											"    pm.expect(_isContains(jsonData, \"id\" ,\"Invoiced\")).to.be.true;",
											"    pm.expect(_isContains(jsonData, \"id\" ,\"Closed\")).to.be.true;",
											"    pm.expect(_isContains(jsonData, \"id\" ,\"Idled\")).to.be.true;",
											"    pm.expect(_isContains(jsonData, \"id\" ,\"Disrupted\")).to.be.true;",
											"",
											"    reservationStatusesNode = jsonData.find(x => x.id === \"Draft\");",
											"    pm.expect(reservationStatusesNode.name).to.eql(\"Черновик\");",
											"    reservationStatusesNode = jsonData.find(x => x.id === \"OnConfirmation\");",
											"    pm.expect(reservationStatusesNode.name).to.eql(\"На подтверждении в ТК\");",
											"    reservationStatusesNode = jsonData.find(x => x.id === \"InProgress\");",
											"    pm.expect(reservationStatusesNode.name).to.eql(\"Исполняется\");",
											"    reservationStatusesNode = jsonData.find(x => x.id === \"Delivered\");",
											"    pm.expect(reservationStatusesNode.name).to.eql(\"Доставлено\"); ",
											"    reservationStatusesNode = jsonData.find(x => x.id === \"Canceled\");",
											"    pm.expect(reservationStatusesNode.name).to.eql(\"Отменено\");",
											"    reservationStatusesNode = jsonData.find(x => x.id === \"CarrierCanceled\");",
											"    pm.expect(reservationStatusesNode.name).to.eql(\"Отменено ТК\"); ",
											"    reservationStatusesNode = jsonData.find(x => x.id === \"Deleted\");",
											"    pm.expect(reservationStatusesNode.name).to.eql(\"Удалено\");",
											"    reservationStatusesNode = jsonData.find(x => x.id === \"ClarificationNeeded\");",
											"    pm.expect(reservationStatusesNode.name).to.eql(\"Требует уточнения\");",
											"",
											"    reservationStatusesNode = jsonData.find(x => x.id === \"CostConfirmed\");",
											"    pm.expect(reservationStatusesNode.name).to.eql(\"Стоимость согласована\");",
											"        reservationStatusesNode = jsonData.find(x => x.id === \"CostDeclined\");",
											"    pm.expect(reservationStatusesNode.name).to.eql(\"Стоимость не согласована\");",
											"        reservationStatusesNode = jsonData.find(x => x.id === \"Invoiced\");",
											"    pm.expect(reservationStatusesNode.name).to.eql(\"Счёт выставлен\");",
											"        reservationStatusesNode = jsonData.find(x => x.id === \"Closed\");",
											"    pm.expect(reservationStatusesNode.name).to.eql(\"Завершено\");",
											"        reservationStatusesNode = jsonData.find(x => x.id === \"Idled\");",
											"    pm.expect(reservationStatusesNode.name).to.eql(\"Холостая подача\");",
											"        reservationStatusesNode = jsonData.find(x => x.id === \"Disrupted\");",
											"    pm.expect(reservationStatusesNode.name).to.eql(\"Срыв поставки\");",
											"});",
											"",
											"pm.test(\"Проверка что статус код 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tkFmOT}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/definitions/reservation-statuses",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"definitions",
										"reservation-statuses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение списка типов доставки без авторизации",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка что статус код 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"pm.test(\"Проверка что в ответе нет тела\", function () {",
											"    pm.response.to.not.be.withBody;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/definitions/shipping-types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"definitions",
										"shipping-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение списка типов складов без авторизации",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка что статус код 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"pm.test(\"Проверка что в ответе нет тела\", function () {",
											"    pm.response.to.not.be.withBody;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/definitions/warehouse-types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"definitions",
										"warehouse-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение списка типов бронирования без авторизации",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка что статус код 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"pm.test(\"Проверка что в ответе нет тела\", function () {",
											"    pm.response.to.not.be.withBody;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/definitions/reservation-types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"definitions",
										"reservation-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение списка типов грузов без авторизации",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка что статус код 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"pm.test(\"Проверка что в ответе нет тела\", function () {",
											"    pm.response.to.not.be.withBody;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/definitions/product-types",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"definitions",
										"product-types"
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение списка статусов бронирования без авторизации",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка что статус код 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"pm.test(\"Проверка что в ответе нет тела\", function () {",
											"    pm.response.to.not.be.withBody;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/definitions/reservation-statuses",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"definitions",
										"reservation-statuses"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "regions",
					"item": [
						{
							"name": "Получение списка регионов",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/regions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"regions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение региона по id в системе Pooling",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/regions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"regions",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "labore aute sint magna do",
											"description": "(Required) "
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение региона по коду РФ",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/regions/code/:code",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"regions",
										"code",
										":code"
									],
									"variable": [
										{
											"key": "code",
											"value": "labore aute sint magna do",
											"description": "(Required) "
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "reservations",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Просмотр информации о бронировании",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "labore aute sint magna do",
													"description": "(Required) "
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Изменение бронирования",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"loadingPoints\": [\n        {\n            \"dateTime\": {\n                \"from\": \"1988-08-16T06:55:05.389Z\",\n                \"to\": \"1992-01-05T16:13:52.632Z\"\n            },\n            \"orderNumbers\": [\n                \"ex dolor velit aliqua\",\n                \"culpa elit\"\n            ],\n            \"warehouse\": {\n                \"id\": \"000000000000000000000000\",\n                \"foreignId\": \"incididunt ex amet mo\"\n            },\n            \"address\": {\n                \"house\": \"id voluptate\",\n                \"postalCode\": \"Ut exercitation\",\n                \"region\": \"dolore cillum\",\n                \"street\": \"id pariatur\",\n                \"gln\": \"0748557670518\",\n                \"fullAddress\": \"Lorem sunt\",\n                \"area\": \"laboris dolore quis\",\n                \"city\": \"in est sint\",\n                \"cityDistrict\": \"ea dolor eiusmod sit\",\n                \"settlement\": \"in in\",\n                \"block\": \"dolore dolor aliquip\",\n                \"flat\": \"ad labore fugiat\",\n                \"fiasId\": \"\",\n                \"fiasCode\": \"87612070185859006475996\",\n                \"fiasActualityState\": 59874337,\n                \"kladrId\": \"5308125581362\",\n                \"comment\": \"mollit\",\n                \"companyName\": \"magna sint\"\n            }\n        }\n    ],\n    \"orders\": [\n        {\n            \"number\": \"eu pariatur aliquip commodo\",\n            \"waybillNumber\": \"aliquip cupidatat reprehenderit\",\n            \"consignorNumber\": \"et aliquip Duis esse sunt\",\n            \"type\": \"Stock\",\n            \"units\": {\n                \"palletType\": \"Low\",\n                \"positionFrom\": -80110660,\n                \"positionTo\": -67788871,\n                \"pallets\": 63347589,\n                \"boxes\": 31821794,\n                \"weight\": -76779244.07558131,\n                \"cost\": -51187551.68539226,\n                \"volume\": -46247694.66918775,\n                \"length\": 94957620.46536523,\n                \"width\": 81166507.21675605,\n                \"height\": -27637644.74075283\n            }\n        },\n        {\n            \"number\": \"sunt ut eu ea\",\n            \"waybillNumber\": \"consectetur eiusmod quis\",\n            \"consignorNumber\": \"cillum sint dolor\",\n            \"type\": \"RetailAction\",\n            \"units\": {\n                \"palletType\": \"Euro\",\n                \"positionFrom\": 65186659,\n                \"positionTo\": 40087544,\n                \"pallets\": 42277378,\n                \"boxes\": -33347788,\n                \"weight\": 49805749.570556045,\n                \"cost\": 79544134.59206706,\n                \"volume\": 81354742.23200303,\n                \"length\": 69076457.79251385,\n                \"width\": 53197474.11666033,\n                \"height\": 26491214.196688697\n            }\n        }\n    ],\n    \"productType\": \"Food\",\n    \"foreignId\": \"amet\",\n    \"shippingType\": \"FTL\",\n    \"slotId\": \"000000000000000000000000\",\n    \"carrier\": {\n        \"id\": \"000000000000000000000000\",\n        \"foreignId\": \"do anim\"\n    },\n    \"client\": {\n        \"id\": \"000000000000000000000000\",\n        \"foreignId\": \"adipisicing pariatur ut\"\n    },\n    \"carType\": \"Isotherm\",\n    \"carCapacityType\": \"cupidatat in ipsum officia\",\n    \"units\": {\n        \"palletType\": \"High\",\n        \"positionFrom\": -78852709,\n        \"positionTo\": -86560186,\n        \"pallets\": 2151123,\n        \"boxes\": 32664721,\n        \"weight\": 65849251.104266435,\n        \"cost\": 28535429.503333986,\n        \"volume\": -46051010.93385291,\n        \"length\": -78257637.3093034,\n        \"width\": 58353800.760255575,\n        \"height\": -24431805.907494336\n    },\n    \"unloadingPoints\": [\n        {\n            \"dateTime\": {\n                \"from\": \"1954-03-18T21:28:09.632Z\",\n                \"to\": \"1987-11-23T13:01:25.528Z\"\n            },\n            \"orderNumbers\": [\n                \"irure est\",\n                \"in voluptate\"\n            ],\n            \"warehouse\": {\n                \"id\": \"000000000000000000000000\",\n                \"foreignId\": \"mollit esse\"\n            },\n            \"address\": {\n                \"house\": \"et aute quis\",\n                \"postalCode\": \"deserunt Lorem\",\n                \"region\": \"dolore\",\n                \"street\": \"amet Excepteur enim dolor\",\n                \"gln\": \"7830034519005\",\n                \"fullAddress\": \"Ut aliqua nisi dolore fugiat\",\n                \"area\": \"dolore quis nostrud eiusmod\",\n                \"city\": \"sed\",\n                \"cityDistrict\": \"ex Lorem\",\n                \"settlement\": \"non mollit\",\n                \"block\": \"volup\",\n                \"flat\": \"nisi dolore proident\",\n                \"fiasId\": \"\",\n                \"fiasCode\": \"4910561337678479261\",\n                \"fiasActualityState\": -61091262,\n                \"kladrId\": \"0101421036668374274\",\n                \"comment\": \"cillum\",\n                \"companyName\": \"veniam nostrud amet\"\n            }\n        },\n        {\n            \"dateTime\": {\n                \"from\": \"2001-11-20T19:43:59.614Z\",\n                \"to\": \"2006-10-29T14:05:07.834Z\"\n            },\n            \"orderNumbers\": [\n                \"labore deserunt adipisicing\",\n                \"Lorem\"\n            ],\n            \"warehouse\": {\n                \"id\": \"000000000000000000000000\",\n                \"foreignId\": \"labore ut veniam sit\"\n            },\n            \"address\": {\n                \"house\": \"qui reprehenderit esse sint\",\n                \"postalCode\": \"aliquip labore ullamco\",\n                \"region\": \"fugiat amet voluptate quis\",\n                \"street\": \"Duis mollit qui\",\n                \"gln\": \"0704083670957\",\n                \"fullAddress\": \"occaecat sit\",\n                \"area\": \"eiusmod pariatur\",\n                \"city\": \"fugiat\",\n                \"cityDistrict\": \"ut velit culpa\",\n                \"settlement\": \"et\",\n                \"block\": \"officia\",\n                \"flat\": \"ipsum nostrud sed Duis ea\",\n                \"fiasId\": \"\",\n                \"fiasCode\": \"55370079724132080717301\",\n                \"fiasActualityState\": -11718192,\n                \"kladrId\": \"90807507840068154193931\",\n                \"comment\": \"fugiat dolore laboris exercitation\",\n                \"companyName\": \"veniam Excepteur\"\n            }\n        }\n    ],\n    \"servicesNeeded\": [\n        \"WithSupplement\",\n        \"Basic\"\n    ],\n    \"temperature\": {\n        \"from\": -95454402,\n        \"to\": -3271235\n    },\n    \"comment\": \"aliqua magna\",\n    \"unitsAvailable\": {\n        \"palletType\": \"Low\",\n        \"positionFrom\": 66481490,\n        \"positionTo\": 79162429,\n        \"pallets\": -63843840,\n        \"boxes\": 48586840,\n        \"weight\": 44215810.56377831,\n        \"cost\": 48530725.13275424,\n        \"volume\": -71501465.52922623,\n        \"length\": 13683391.910303473,\n        \"width\": -18327708.183104903,\n        \"height\": 85188222.28171343\n    },\n    \"unitsAvailableMin\": {\n        \"palletType\": \"Mixed\",\n        \"positionFrom\": 68739605,\n        \"positionTo\": -27607680,\n        \"pallets\": 94402906,\n        \"boxes\": 93745470,\n        \"weight\": -95526572.73253158,\n        \"cost\": -56577664.075011835,\n        \"volume\": -55478544.80840306,\n        \"length\": -44460113.81676498,\n        \"width\": 1788162.0046646446,\n        \"height\": 59211399.37450835\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "labore aute sint magna do",
													"description": "(Required) "
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Отмена бронирования",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "labore aute sint magna do",
													"description": "(Required) "
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Изменение данных от ТК",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"vehicle\": {\n        \"model\": \"in commodo\",\n        \"registrationNumber\": \"et eu culpa esse\",\n        \"trailerRegistrationNumber\": \"ea pariatur amet\"\n    },\n    \"driver\": {\n        \"name\": \"amet adipisicing pariatur consequat deserunt\",\n        \"phone\": \"nisi ut sunt dolore\",\n        \"passport\": {\n            \"series\": \"nulla pariatur Excepteur enim\",\n            \"number\": \"eiusmod \",\n            \"issuedBy\": \"veniam magna mollit\",\n            \"issuedDate\": \"2020-12-30\"\n        }\n    },\n    \"carriage\": -43899574,\n    \"shippingCost\": 21381810.192914635\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/:id/info",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												":id",
												"info"
											],
											"variable": [
												{
													"key": "id",
													"value": "labore aute sint magna do",
													"description": "(Required) "
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Изменение статусов путевых точек бронирования от ТК",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"status\": \"Scheduled\",\n        \"type\": \"Loading\",\n        \"index\": 43520392,\n        \"warehouse\": {\n            \"id\": \"000000000000000000000000\",\n            \"foreignId\": \"tempor dolore sed ea\"\n        },\n        \"dateTimeArrived\": \"1944-11-19T04:46:30.708Z\",\n        \"dateTimeDeparted\": \"1944-12-26T16:56:33.212Z\"\n    },\n    {\n        \"status\": \"Departed\",\n        \"type\": \"Loading\",\n        \"index\": -256225,\n        \"warehouse\": {\n            \"id\": \"000000000000000000000000\",\n            \"foreignId\": \"ad officia\"\n        },\n        \"dateTimeArrived\": \"1974-02-14T14:51:58.006Z\",\n        \"dateTimeDeparted\": \"2012-09-19T17:38:10.928Z\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/:id/point-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												":id",
												"point-status"
											],
											"variable": [
												{
													"key": "id",
													"value": "labore aute sint magna do",
													"description": "(Required) "
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Изменение статуса",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"status\": \"Deleted\",\n    \"comment\": \"et sunt veniam sed esse\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/:id/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												":id",
												"status"
											],
											"variable": [
												{
													"key": "id",
													"value": "labore aute sint magna do",
													"description": "(Required) "
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "foreign-id/{foreign Id}",
							"item": [
								{
									"name": "Просмотр информации о бронировании по id в системе пользователя",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/foreign-id/:foreignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"foreign-id",
												":foreignId"
											],
											"variable": [
												{
													"key": "foreignId",
													"value": "labore aute sint magna do",
													"description": "(Required) "
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Изменение бронирования по id в системе пользователя",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"loadingPoints\": [\n        {\n            \"dateTime\": {\n                \"from\": \"1988-08-16T06:55:05.389Z\",\n                \"to\": \"1992-01-05T16:13:52.632Z\"\n            },\n            \"orderNumbers\": [\n                \"ex dolor velit aliqua\",\n                \"culpa elit\"\n            ],\n            \"warehouse\": {\n                \"id\": \"000000000000000000000000\",\n                \"foreignId\": \"incididunt ex amet mo\"\n            },\n            \"address\": {\n                \"house\": \"id voluptate\",\n                \"postalCode\": \"Ut exercitation\",\n                \"region\": \"dolore cillum\",\n                \"street\": \"id pariatur\",\n                \"gln\": \"0748557670518\",\n                \"fullAddress\": \"Lorem sunt\",\n                \"area\": \"laboris dolore quis\",\n                \"city\": \"in est sint\",\n                \"cityDistrict\": \"ea dolor eiusmod sit\",\n                \"settlement\": \"in in\",\n                \"block\": \"dolore dolor aliquip\",\n                \"flat\": \"ad labore fugiat\",\n                \"fiasId\": \"\",\n                \"fiasCode\": \"87612070185859006475996\",\n                \"fiasActualityState\": 59874337,\n                \"kladrId\": \"5308125581362\",\n                \"comment\": \"mollit\",\n                \"companyName\": \"magna sint\"\n            }\n        }\n    ],\n    \"orders\": [\n        {\n            \"number\": \"eu pariatur aliquip commodo\",\n            \"waybillNumber\": \"aliquip cupidatat reprehenderit\",\n            \"consignorNumber\": \"et aliquip Duis esse sunt\",\n            \"type\": \"Stock\",\n            \"units\": {\n                \"palletType\": \"Low\",\n                \"positionFrom\": -80110660,\n                \"positionTo\": -67788871,\n                \"pallets\": 63347589,\n                \"boxes\": 31821794,\n                \"weight\": -76779244.07558131,\n                \"cost\": -51187551.68539226,\n                \"volume\": -46247694.66918775,\n                \"length\": 94957620.46536523,\n                \"width\": 81166507.21675605,\n                \"height\": -27637644.74075283\n            }\n        },\n        {\n            \"number\": \"sunt ut eu ea\",\n            \"waybillNumber\": \"consectetur eiusmod quis\",\n            \"consignorNumber\": \"cillum sint dolor\",\n            \"type\": \"RetailAction\",\n            \"units\": {\n                \"palletType\": \"Euro\",\n                \"positionFrom\": 65186659,\n                \"positionTo\": 40087544,\n                \"pallets\": 42277378,\n                \"boxes\": -33347788,\n                \"weight\": 49805749.570556045,\n                \"cost\": 79544134.59206706,\n                \"volume\": 81354742.23200303,\n                \"length\": 69076457.79251385,\n                \"width\": 53197474.11666033,\n                \"height\": 26491214.196688697\n            }\n        }\n    ],\n    \"productType\": \"Food\",\n    \"foreignId\": \"amet\",\n    \"shippingType\": \"FTL\",\n    \"slotId\": \"000000000000000000000000\",\n    \"carrier\": {\n        \"id\": \"000000000000000000000000\",\n        \"foreignId\": \"do anim\"\n    },\n    \"client\": {\n        \"id\": \"000000000000000000000000\",\n        \"foreignId\": \"adipisicing pariatur ut\"\n    },\n    \"carType\": \"Isotherm\",\n    \"carCapacityType\": \"cupidatat in ipsum officia\",\n    \"units\": {\n        \"palletType\": \"High\",\n        \"positionFrom\": -78852709,\n        \"positionTo\": -86560186,\n        \"pallets\": 2151123,\n        \"boxes\": 32664721,\n        \"weight\": 65849251.104266435,\n        \"cost\": 28535429.503333986,\n        \"volume\": -46051010.93385291,\n        \"length\": -78257637.3093034,\n        \"width\": 58353800.760255575,\n        \"height\": -24431805.907494336\n    },\n    \"unloadingPoints\": [\n        {\n            \"dateTime\": {\n                \"from\": \"1954-03-18T21:28:09.632Z\",\n                \"to\": \"1987-11-23T13:01:25.528Z\"\n            },\n            \"orderNumbers\": [\n                \"irure est\",\n                \"in voluptate\"\n            ],\n            \"warehouse\": {\n                \"id\": \"000000000000000000000000\",\n                \"foreignId\": \"mollit esse\"\n            },\n            \"address\": {\n                \"house\": \"et aute quis\",\n                \"postalCode\": \"deserunt Lorem\",\n                \"region\": \"dolore\",\n                \"street\": \"amet Excepteur enim dolor\",\n                \"gln\": \"7830034519005\",\n                \"fullAddress\": \"Ut aliqua nisi dolore fugiat\",\n                \"area\": \"dolore quis nostrud eiusmod\",\n                \"city\": \"sed\",\n                \"cityDistrict\": \"ex Lorem\",\n                \"settlement\": \"non mollit\",\n                \"block\": \"volup\",\n                \"flat\": \"nisi dolore proident\",\n                \"fiasId\": \"\",\n                \"fiasCode\": \"4910561337678479261\",\n                \"fiasActualityState\": -61091262,\n                \"kladrId\": \"0101421036668374274\",\n                \"comment\": \"cillum\",\n                \"companyName\": \"veniam nostrud amet\"\n            }\n        },\n        {\n            \"dateTime\": {\n                \"from\": \"2001-11-20T19:43:59.614Z\",\n                \"to\": \"2006-10-29T14:05:07.834Z\"\n            },\n            \"orderNumbers\": [\n                \"labore deserunt adipisicing\",\n                \"Lorem\"\n            ],\n            \"warehouse\": {\n                \"id\": \"000000000000000000000000\",\n                \"foreignId\": \"labore ut veniam sit\"\n            },\n            \"address\": {\n                \"house\": \"qui reprehenderit esse sint\",\n                \"postalCode\": \"aliquip labore ullamco\",\n                \"region\": \"fugiat amet voluptate quis\",\n                \"street\": \"Duis mollit qui\",\n                \"gln\": \"0704083670957\",\n                \"fullAddress\": \"occaecat sit\",\n                \"area\": \"eiusmod pariatur\",\n                \"city\": \"fugiat\",\n                \"cityDistrict\": \"ut velit culpa\",\n                \"settlement\": \"et\",\n                \"block\": \"officia\",\n                \"flat\": \"ipsum nostrud sed Duis ea\",\n                \"fiasId\": \"\",\n                \"fiasCode\": \"55370079724132080717301\",\n                \"fiasActualityState\": -11718192,\n                \"kladrId\": \"90807507840068154193931\",\n                \"comment\": \"fugiat dolore laboris exercitation\",\n                \"companyName\": \"veniam Excepteur\"\n            }\n        }\n    ],\n    \"servicesNeeded\": [\n        \"WithSupplement\",\n        \"Basic\"\n    ],\n    \"temperature\": {\n        \"from\": -95454402,\n        \"to\": -3271235\n    },\n    \"comment\": \"aliqua magna\",\n    \"unitsAvailable\": {\n        \"palletType\": \"Low\",\n        \"positionFrom\": 66481490,\n        \"positionTo\": 79162429,\n        \"pallets\": -63843840,\n        \"boxes\": 48586840,\n        \"weight\": 44215810.56377831,\n        \"cost\": 48530725.13275424,\n        \"volume\": -71501465.52922623,\n        \"length\": 13683391.910303473,\n        \"width\": -18327708.183104903,\n        \"height\": 85188222.28171343\n    },\n    \"unitsAvailableMin\": {\n        \"palletType\": \"Mixed\",\n        \"positionFrom\": 68739605,\n        \"positionTo\": -27607680,\n        \"pallets\": 94402906,\n        \"boxes\": 93745470,\n        \"weight\": -95526572.73253158,\n        \"cost\": -56577664.075011835,\n        \"volume\": -55478544.80840306,\n        \"length\": -44460113.81676498,\n        \"width\": 1788162.0046646446,\n        \"height\": 59211399.37450835\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/foreign-id/:foreignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"foreign-id",
												":foreignId"
											],
											"variable": [
												{
													"key": "foreignId",
													"value": "labore aute sint magna do",
													"description": "(Required) "
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Отмена бронирования по id в системе пользователя",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/foreign-id/:foreignId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"foreign-id",
												":foreignId"
											],
											"variable": [
												{
													"key": "foreignId",
													"value": "labore aute sint magna do",
													"description": "(Required) "
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Изменение данных от ТК по id в системе пользователя",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"vehicle\": {\n        \"model\": \"in commodo\",\n        \"registrationNumber\": \"et eu culpa esse\",\n        \"trailerRegistrationNumber\": \"ea pariatur amet\"\n    },\n    \"driver\": {\n        \"name\": \"amet adipisicing pariatur consequat deserunt\",\n        \"phone\": \"nisi ut sunt dolore\",\n        \"passport\": {\n            \"series\": \"nulla pariatur Excepteur enim\",\n            \"number\": \"eiusmod \",\n            \"issuedBy\": \"veniam magna mollit\",\n            \"issuedDate\": \"2020-12-30\"\n        }\n    },\n    \"carriage\": -43899574,\n    \"shippingCost\": 21381810.192914635\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/foreign-id/:foreignId/info",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"foreign-id",
												":foreignId",
												"info"
											],
											"variable": [
												{
													"key": "foreignId",
													"value": "labore aute sint magna do",
													"description": "(Required) "
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Изменение статусов путевых точек бронирования от ТК по id в системе пользователя",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"status\": \"Scheduled\",\n        \"type\": \"Loading\",\n        \"index\": 43520392,\n        \"warehouse\": {\n            \"id\": \"000000000000000000000000\",\n            \"foreignId\": \"tempor dolore sed ea\"\n        },\n        \"dateTimeArrived\": \"1944-11-19T04:46:30.708Z\",\n        \"dateTimeDeparted\": \"1944-12-26T16:56:33.212Z\"\n    },\n    {\n        \"status\": \"Departed\",\n        \"type\": \"Loading\",\n        \"index\": -256225,\n        \"warehouse\": {\n            \"id\": \"000000000000000000000000\",\n            \"foreignId\": \"ad officia\"\n        },\n        \"dateTimeArrived\": \"1974-02-14T14:51:58.006Z\",\n        \"dateTimeDeparted\": \"2012-09-19T17:38:10.928Z\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/foreign-id/:foreignId/point-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"foreign-id",
												":foreignId",
												"point-status"
											],
											"variable": [
												{
													"key": "foreignId",
													"value": "labore aute sint magna do",
													"description": "(Required) "
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Изменение статуса по id в системе пользователя",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"status\": \"Deleted\",\n    \"comment\": \"et sunt veniam sed esse\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/foreign-id/:foreignId/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"foreign-id",
												":foreignId",
												"status"
											],
											"variable": [
												{
													"key": "foreignId",
													"value": "labore aute sint magna do",
													"description": "(Required) "
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "number/{number}",
							"item": [
								{
									"name": "Просмотр информации о бронировании по номеру",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/number/:number",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"number",
												":number"
											],
											"variable": [
												{
													"key": "number",
													"value": "labore aute sint magna do",
													"description": "(Required) "
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Изменение бронирования по номеру",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"loadingPoints\": [\n        {\n            \"dateTime\": {\n                \"from\": \"1988-08-16T06:55:05.389Z\",\n                \"to\": \"1992-01-05T16:13:52.632Z\"\n            },\n            \"orderNumbers\": [\n                \"ex dolor velit aliqua\",\n                \"culpa elit\"\n            ],\n            \"warehouse\": {\n                \"id\": \"000000000000000000000000\",\n                \"foreignId\": \"incididunt ex amet mo\"\n            },\n            \"address\": {\n                \"house\": \"id voluptate\",\n                \"postalCode\": \"Ut exercitation\",\n                \"region\": \"dolore cillum\",\n                \"street\": \"id pariatur\",\n                \"gln\": \"0748557670518\",\n                \"fullAddress\": \"Lorem sunt\",\n                \"area\": \"laboris dolore quis\",\n                \"city\": \"in est sint\",\n                \"cityDistrict\": \"ea dolor eiusmod sit\",\n                \"settlement\": \"in in\",\n                \"block\": \"dolore dolor aliquip\",\n                \"flat\": \"ad labore fugiat\",\n                \"fiasId\": \"\",\n                \"fiasCode\": \"87612070185859006475996\",\n                \"fiasActualityState\": 59874337,\n                \"kladrId\": \"5308125581362\",\n                \"comment\": \"mollit\",\n                \"companyName\": \"magna sint\"\n            }\n        }\n    ],\n    \"orders\": [\n        {\n            \"number\": \"eu pariatur aliquip commodo\",\n            \"waybillNumber\": \"aliquip cupidatat reprehenderit\",\n            \"consignorNumber\": \"et aliquip Duis esse sunt\",\n            \"type\": \"Stock\",\n            \"units\": {\n                \"palletType\": \"Low\",\n                \"positionFrom\": -80110660,\n                \"positionTo\": -67788871,\n                \"pallets\": 63347589,\n                \"boxes\": 31821794,\n                \"weight\": -76779244.07558131,\n                \"cost\": -51187551.68539226,\n                \"volume\": -46247694.66918775,\n                \"length\": 94957620.46536523,\n                \"width\": 81166507.21675605,\n                \"height\": -27637644.74075283\n            }\n        },\n        {\n            \"number\": \"sunt ut eu ea\",\n            \"waybillNumber\": \"consectetur eiusmod quis\",\n            \"consignorNumber\": \"cillum sint dolor\",\n            \"type\": \"RetailAction\",\n            \"units\": {\n                \"palletType\": \"Euro\",\n                \"positionFrom\": 65186659,\n                \"positionTo\": 40087544,\n                \"pallets\": 42277378,\n                \"boxes\": -33347788,\n                \"weight\": 49805749.570556045,\n                \"cost\": 79544134.59206706,\n                \"volume\": 81354742.23200303,\n                \"length\": 69076457.79251385,\n                \"width\": 53197474.11666033,\n                \"height\": 26491214.196688697\n            }\n        }\n    ],\n    \"productType\": \"Food\",\n    \"foreignId\": \"amet\",\n    \"shippingType\": \"FTL\",\n    \"slotId\": \"000000000000000000000000\",\n    \"carrier\": {\n        \"id\": \"000000000000000000000000\",\n        \"foreignId\": \"do anim\"\n    },\n    \"client\": {\n        \"id\": \"000000000000000000000000\",\n        \"foreignId\": \"adipisicing pariatur ut\"\n    },\n    \"carType\": \"Isotherm\",\n    \"carCapacityType\": \"cupidatat in ipsum officia\",\n    \"units\": {\n        \"palletType\": \"High\",\n        \"positionFrom\": -78852709,\n        \"positionTo\": -86560186,\n        \"pallets\": 2151123,\n        \"boxes\": 32664721,\n        \"weight\": 65849251.104266435,\n        \"cost\": 28535429.503333986,\n        \"volume\": -46051010.93385291,\n        \"length\": -78257637.3093034,\n        \"width\": 58353800.760255575,\n        \"height\": -24431805.907494336\n    },\n    \"unloadingPoints\": [\n        {\n            \"dateTime\": {\n                \"from\": \"1954-03-18T21:28:09.632Z\",\n                \"to\": \"1987-11-23T13:01:25.528Z\"\n            },\n            \"orderNumbers\": [\n                \"irure est\",\n                \"in voluptate\"\n            ],\n            \"warehouse\": {\n                \"id\": \"000000000000000000000000\",\n                \"foreignId\": \"mollit esse\"\n            },\n            \"address\": {\n                \"house\": \"et aute quis\",\n                \"postalCode\": \"deserunt Lorem\",\n                \"region\": \"dolore\",\n                \"street\": \"amet Excepteur enim dolor\",\n                \"gln\": \"7830034519005\",\n                \"fullAddress\": \"Ut aliqua nisi dolore fugiat\",\n                \"area\": \"dolore quis nostrud eiusmod\",\n                \"city\": \"sed\",\n                \"cityDistrict\": \"ex Lorem\",\n                \"settlement\": \"non mollit\",\n                \"block\": \"volup\",\n                \"flat\": \"nisi dolore proident\",\n                \"fiasId\": \"\",\n                \"fiasCode\": \"4910561337678479261\",\n                \"fiasActualityState\": -61091262,\n                \"kladrId\": \"0101421036668374274\",\n                \"comment\": \"cillum\",\n                \"companyName\": \"veniam nostrud amet\"\n            }\n        },\n        {\n            \"dateTime\": {\n                \"from\": \"2001-11-20T19:43:59.614Z\",\n                \"to\": \"2006-10-29T14:05:07.834Z\"\n            },\n            \"orderNumbers\": [\n                \"labore deserunt adipisicing\",\n                \"Lorem\"\n            ],\n            \"warehouse\": {\n                \"id\": \"000000000000000000000000\",\n                \"foreignId\": \"labore ut veniam sit\"\n            },\n            \"address\": {\n                \"house\": \"qui reprehenderit esse sint\",\n                \"postalCode\": \"aliquip labore ullamco\",\n                \"region\": \"fugiat amet voluptate quis\",\n                \"street\": \"Duis mollit qui\",\n                \"gln\": \"0704083670957\",\n                \"fullAddress\": \"occaecat sit\",\n                \"area\": \"eiusmod pariatur\",\n                \"city\": \"fugiat\",\n                \"cityDistrict\": \"ut velit culpa\",\n                \"settlement\": \"et\",\n                \"block\": \"officia\",\n                \"flat\": \"ipsum nostrud sed Duis ea\",\n                \"fiasId\": \"\",\n                \"fiasCode\": \"55370079724132080717301\",\n                \"fiasActualityState\": -11718192,\n                \"kladrId\": \"90807507840068154193931\",\n                \"comment\": \"fugiat dolore laboris exercitation\",\n                \"companyName\": \"veniam Excepteur\"\n            }\n        }\n    ],\n    \"servicesNeeded\": [\n        \"WithSupplement\",\n        \"Basic\"\n    ],\n    \"temperature\": {\n        \"from\": -95454402,\n        \"to\": -3271235\n    },\n    \"comment\": \"aliqua magna\",\n    \"unitsAvailable\": {\n        \"palletType\": \"Low\",\n        \"positionFrom\": 66481490,\n        \"positionTo\": 79162429,\n        \"pallets\": -63843840,\n        \"boxes\": 48586840,\n        \"weight\": 44215810.56377831,\n        \"cost\": 48530725.13275424,\n        \"volume\": -71501465.52922623,\n        \"length\": 13683391.910303473,\n        \"width\": -18327708.183104903,\n        \"height\": 85188222.28171343\n    },\n    \"unitsAvailableMin\": {\n        \"palletType\": \"Mixed\",\n        \"positionFrom\": 68739605,\n        \"positionTo\": -27607680,\n        \"pallets\": 94402906,\n        \"boxes\": 93745470,\n        \"weight\": -95526572.73253158,\n        \"cost\": -56577664.075011835,\n        \"volume\": -55478544.80840306,\n        \"length\": -44460113.81676498,\n        \"width\": 1788162.0046646446,\n        \"height\": 59211399.37450835\n    }\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/number/:number",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"number",
												":number"
											],
											"variable": [
												{
													"key": "number",
													"value": "labore aute sint magna do",
													"description": "(Required) "
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Отмена бронирования по номеру",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/number/:number",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"number",
												":number"
											],
											"variable": [
												{
													"key": "number",
													"value": "labore aute sint magna do",
													"description": "(Required) "
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Изменение данных от ТК по номеру",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"vehicle\": {\n        \"model\": \"in commodo\",\n        \"registrationNumber\": \"et eu culpa esse\",\n        \"trailerRegistrationNumber\": \"ea pariatur amet\"\n    },\n    \"driver\": {\n        \"name\": \"amet adipisicing pariatur consequat deserunt\",\n        \"phone\": \"nisi ut sunt dolore\",\n        \"passport\": {\n            \"series\": \"nulla pariatur Excepteur enim\",\n            \"number\": \"eiusmod \",\n            \"issuedBy\": \"veniam magna mollit\",\n            \"issuedDate\": \"2020-12-30\"\n        }\n    },\n    \"carriage\": -43899574,\n    \"shippingCost\": 21381810.192914635\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/number/:number/info",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"number",
												":number",
												"info"
											],
											"variable": [
												{
													"key": "number",
													"value": "labore aute sint magna do",
													"description": "(Required) "
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Изменение статусов путевых точек бронирования от ТК по номеру",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"status\": \"Scheduled\",\n        \"type\": \"Loading\",\n        \"index\": 43520392,\n        \"warehouse\": {\n            \"id\": \"000000000000000000000000\",\n            \"foreignId\": \"tempor dolore sed ea\"\n        },\n        \"dateTimeArrived\": \"1944-11-19T04:46:30.708Z\",\n        \"dateTimeDeparted\": \"1944-12-26T16:56:33.212Z\"\n    },\n    {\n        \"status\": \"Departed\",\n        \"type\": \"Loading\",\n        \"index\": -256225,\n        \"warehouse\": {\n            \"id\": \"000000000000000000000000\",\n            \"foreignId\": \"ad officia\"\n        },\n        \"dateTimeArrived\": \"1974-02-14T14:51:58.006Z\",\n        \"dateTimeDeparted\": \"2012-09-19T17:38:10.928Z\"\n    }\n]"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/number/:number/point-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"number",
												":number",
												"point-status"
											],
											"variable": [
												{
													"key": "number",
													"value": "labore aute sint magna do",
													"description": "(Required) "
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Изменение статуса по номеру",
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"status\": \"Deleted\",\n    \"comment\": \"et sunt veniam sed esse\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/number/:number/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"number",
												":number",
												"status"
											],
											"variable": [
												{
													"key": "number",
													"value": "labore aute sint magna do",
													"description": "(Required) "
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Создание бронирования",
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"loadingPoints\": [\n        {\n            \"dateTime\": {\n                \"from\": \"1976-07-31T19:38:59.163Z\",\n                \"to\": \"1965-12-21T14:32:13.394Z\"\n            },\n            \"orderNumbers\": [\n                \"qui incididunt cupidatat labore ut\",\n                \"qui mollit\"\n            ],\n            \"warehouse\": {\n                \"id\": \"000000000000000000000000\",\n                \"foreignId\": \"Excepteur ut ullamco ea\"\n            },\n            \"address\": {\n                \"house\": \"voluptate sed\",\n                \"postalCode\": \"magna culpa voluptate\",\n                \"region\": \"veniam reprehenderit Lorem minim\",\n                \"street\": \"esse tempor nulla\",\n                \"gln\": \"6981637185236\",\n                \"fullAddress\": \"ea amet et\",\n                \"area\": \"eiusmod proident aliquip\",\n                \"city\": \"Excepteur cupidatat dolor\",\n                \"cityDistrict\": \"ipsum in\",\n                \"settlement\": \"est nulla dolore esse minim\",\n                \"block\": \"occaecat id\",\n                \"flat\": \"dolore\",\n                \"fiasId\": \"0f41b202-7797-2844-0f25-56b95283aec2\",\n                \"fiasCode\": \"5813244051511951641\",\n                \"fiasActualityState\": -99581495,\n                \"kladrId\": \"24336630397914813653174\",\n                \"comment\": \"pariatur esse\",\n                \"companyName\": \"sed Duis\"\n            }\n        }\n    ],\n    \"orders\": [\n        {\n            \"number\": \"e\",\n            \"waybillNumber\": \"mollit tempor et est elit\",\n            \"consignorNumber\": \"reprehenderit irure\",\n            \"type\": \"Transit\",\n            \"units\": {\n                \"palletType\": \"High\",\n                \"positionFrom\": 54122068,\n                \"positionTo\": 94339259,\n                \"pallets\": 63489818,\n                \"boxes\": 17442806,\n                \"weight\": -50728382.37473913,\n                \"cost\": -15866242.442822635,\n                \"volume\": 3702852.5826864988,\n                \"length\": 82762089.8337926,\n                \"width\": 84488974.58122703,\n                \"height\": 82093764.90807822\n            }\n        },\n        {\n            \"number\": \"laboris adipisicing Duis ad qui\",\n            \"waybillNumber\": \"pariatur ullamco dolor\",\n            \"consignorNumber\": \"minim anim aliquip\",\n            \"type\": \"RetailAction\",\n            \"units\": {\n                \"palletType\": \"Low\",\n                \"positionFrom\": -95171662,\n                \"positionTo\": 23414862,\n                \"pallets\": 13662790,\n                \"boxes\": 51018009,\n                \"weight\": -76896841.69532946,\n                \"cost\": -98670638.12619281,\n                \"volume\": 28368092.69104013,\n                \"length\": -76469402.03777052,\n                \"width\": 25939416.93502879,\n                \"height\": 11795629.878608644\n            }\n        }\n    ],\n    \"productType\": \"Food\",\n    \"foreignId\": \"veniam commodo\",\n    \"shippingType\": \"LTL\",\n    \"slotId\": \"000000000000000000000000\",\n    \"carrier\": {\n        \"id\": \"000000000000000000000000\",\n        \"foreignId\": \"quis Lorem e\"\n    },\n    \"client\": {\n        \"id\": \"000000000000000000000000\",\n        \"foreignId\": \"magna Ut sed\"\n    },\n    \"carType\": \"Tent\",\n    \"carCapacityType\": \"aute fugiat enim\",\n    \"units\": {\n        \"palletType\": \"Low\",\n        \"positionFrom\": 85460391,\n        \"positionTo\": -27371001,\n        \"pallets\": 10198836,\n        \"boxes\": -77700527,\n        \"weight\": -71815863.27098018,\n        \"cost\": -2441076.625440702,\n        \"volume\": 13152889.020704478,\n        \"length\": -8635104.615821645,\n        \"width\": -10014570.123145372,\n        \"height\": -17949649.721870035\n    },\n    \"unloadingPoints\": [\n        {\n            \"dateTime\": {\n                \"from\": \"1980-09-06T15:42:33.744Z\",\n                \"to\": \"1973-04-07T07:56:09.676Z\"\n            },\n            \"orderNumbers\": [\n                \"in in in\",\n                \"Duis anim\"\n            ],\n            \"warehouse\": {\n                \"id\": \"000000000000000000000000\",\n                \"foreignId\": \"adipisicing officia minim proident sed\"\n            },\n            \"address\": {\n                \"house\": \"irure\",\n                \"postalCode\": \"sin\",\n                \"region\": \"nostrud consectetur\",\n                \"street\": \"exercita\",\n                \"gln\": \"7129410583015\",\n                \"fullAddress\": \"fugiat quis aliquip velit\",\n                \"area\": \"do aute incididunt enim\",\n                \"city\": \"cupidatat Duis et\",\n                \"cityDistrict\": \"occaecat pariatur Excepteur fugiat\",\n                \"settlement\": \"anim ut\",\n                \"block\": \"pariatur\",\n                \"flat\": \"Ut\",\n                \"fiasId\": \"\",\n                \"fiasCode\": \"5395401944557042665\",\n                \"fiasActualityState\": -43436753,\n                \"kladrId\": \"3870280931493477406\",\n                \"comment\": \"quis ex deserunt magna\",\n                \"companyName\": \"eu do quis\"\n            }\n        },\n        {\n            \"dateTime\": {\n                \"from\": \"2019-11-18T17:13:49.924Z\",\n                \"to\": \"1991-06-28T20:27:02.774Z\"\n            },\n            \"orderNumbers\": [\n                \"cupidatat sint amet\",\n                \"irure\"\n            ],\n            \"warehouse\": {\n                \"id\": \"000000000000000000000000\",\n                \"foreignId\": \"veniam velit\"\n            },\n            \"address\": {\n                \"house\": \"aute consectetur adipisicing\",\n                \"postalCode\": \"Excepteur cupidatat\",\n                \"region\": \"veniam pariatur aliqu\",\n                \"street\": \"eiusmod est minim Duis\",\n                \"gln\": \"9323228196973\",\n                \"fullAddress\": \"veniam\",\n                \"area\": \"sint\",\n                \"city\": \"dolor sit\",\n                \"cityDistrict\": \"incididunt laborum occaecat\",\n                \"settlement\": \"commodo\",\n                \"block\": \"amet cupidatat occaecat velit sint\",\n                \"flat\": \"deserunt in non laborum\",\n                \"fiasId\": \"5a8103a3-e6aa-090f-8b27-f7dccbb177e8\",\n                \"fiasCode\": \"\",\n                \"fiasActualityState\": 24828390,\n                \"kladrId\": \"4565178436137\",\n                \"comment\": \"non labore\",\n                \"companyName\": \"consequat cupidatat\"\n            }\n        }\n    ],\n    \"servicesNeeded\": [\n        \"Basic\",\n        \"Basic\"\n    ],\n    \"temperature\": {\n        \"from\": 78247464,\n        \"to\": 21578250\n    },\n    \"comment\": \"Ut eiusmod exercitation\",\n    \"unitsAvailable\": {\n        \"palletType\": \"High\",\n        \"positionFrom\": -49666163,\n        \"positionTo\": 88782177,\n        \"pallets\": -86573378,\n        \"boxes\": 86103749,\n        \"weight\": -24089283.402280375,\n        \"cost\": 89283333.31047255,\n        \"volume\": -89669938.40521273,\n        \"length\": 91831441.10436645,\n        \"width\": -27008927.730062917,\n        \"height\": 32624609.216158748\n    },\n    \"unitsAvailableMin\": {\n        \"palletType\": \"High\",\n        \"positionFrom\": -23836327,\n        \"positionTo\": 93871561,\n        \"pallets\": -5181034,\n        \"boxes\": 16105891,\n        \"weight\": 41438471.24367878,\n        \"cost\": -20266687.439671934,\n        \"volume\": -87081262.42228143,\n        \"length\": 94730741.19150674,\n        \"width\": -4563663.628989235,\n        \"height\": -15753749.480294436\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/reservations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"reservations"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Pooling reservations",
					"item": [
						{
							"name": "Create",
							"item": [
								{
									"name": "Создание бронирования LTL на слот + схема",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');\r",
													"pm.variables.set(\"currentDate\", moment().add(1, 'week').format(\"YYYY-MM-DD\"));\r",
													"pm.variables.set(\"currentDate + a week\", moment().add(2, 'week').format(\"YYYY-MM-DD\"));\r",
													"\r",
													"\r",
													"const number = pm.variables.replaceIn(\"{{$randomInt}}\");\r",
													"pm.variables.set(\"number\", number);\r",
													"\r",
													"const com = pm.variables.replaceIn(\"{{$randomCity}}\");\r",
													"pm.variables.set(\"comment\", com);\r",
													"\r",
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/slots?consolidationDateFrom=\" + pm.variables.get(\"currentDate\") + \"&consolidationDateTo=\" + pm.variables.get(\"currentDate + a week\") + \"&shippingRegionId=\" + pm.globals.get(\"MoscowShippingRegion\") + \"&UnloadingWarehouseId=\" + pm.globals.get(\"DmitrovUnloadingWarehouse\") + \"&carrierId=\" + pm.globals.get(\"FMCarrier\"),\r",
													"    method: \"GET\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"    },\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.expect(res.json()).to.not.be.empty;\r",
													"        console.log(pm.variables.get(\"pre-requestStatus\"));\r",
													"        pm.variables.set(\"slotId\", res.json()[0].id);\r",
													"        pm.variables.set(\"productType\", res.json()[0].productTypes[0]);\r",
													"        pm.variables.set(\"carrier\", res.json()[0].carrier.id);\r",
													"        pm.variables.set(\"client\", res.json()[0].client.id);\r",
													"        pm.variables.set(\"carType\", res.json()[0].carType);\r",
													"        pm.variables.set(\"loadingWarehouse\", res.json()[0].loadingWarehouses[0].id);\r",
													"        pm.variables.set(\"unloadingWarehouse\", res.json()[0].unloadingWarehouse.id);\r",
													"        pm.variables.set(\"consolidationDate\", res.json()[0].consolidationDate);\r",
													"        pm.variables.set(\"deliveryDate\", res.json()[0].deliveryDate);\r",
													"        pm.variables.set(\"deliveryDate\", res.json()[0].deliveryDate);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"var schema = {\r",
													"  \"type\": \"object\",\r",
													"  \"properties\": {\r",
													"    \"id\": {\r",
													"      \"type\": \"string\"\r",
													"    },\r",
													"    \"number\": {\r",
													"      \"type\": \"string\"\r",
													"    },\r",
													"    \"foreignId\": {\r",
													"      \"type\": \"null\"\r",
													"    },\r",
													"    \"version\": {\r",
													"      \"type\": \"integer\"\r",
													"    },\r",
													"    \"status\": {\r",
													"      \"type\": \"string\"\r",
													"    },\r",
													"    \"shippingType\": {\r",
													"      \"type\": \"string\"\r",
													"    },\r",
													"    \"slotId\": {\r",
													"      \"type\": \"string\"\r",
													"    },\r",
													"    \"carrier\": {\r",
													"      \"type\": \"object\",\r",
													"      \"properties\": {\r",
													"        \"inn\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"id\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"foreignId\": {\r",
													"          \"type\": \"null\"\r",
													"        }\r",
													"      },\r",
													"      \"required\": [\r",
													"        \"inn\",\r",
													"        \"id\",\r",
													"        \"foreignId\"\r",
													"      ]\r",
													"    },\r",
													"    \"client\": {\r",
													"      \"type\": \"object\",\r",
													"      \"properties\": {\r",
													"        \"inn\": {\r",
													"          \"type\": \"null\"\r",
													"        },\r",
													"        \"id\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"foreignId\": {\r",
													"          \"type\": \"null\"\r",
													"        }\r",
													"      },\r",
													"      \"required\": [\r",
													"        \"inn\",\r",
													"        \"id\",\r",
													"        \"foreignId\"\r",
													"      ]\r",
													"    },\r",
													"    \"consignor\": {\r",
													"      \"type\": \"object\",\r",
													"      \"properties\": {\r",
													"        \"inn\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"id\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"foreignId\": {\r",
													"          \"type\": \"string\"\r",
													"        }\r",
													"      },\r",
													"      \"required\": [\r",
													"        \"inn\",\r",
													"        \"id\",\r",
													"        \"foreignId\"\r",
													"      ]\r",
													"    },\r",
													"    \"carType\": {\r",
													"      \"type\": \"string\"\r",
													"    },\r",
													"    \"carCapacityType\": {\r",
													"      \"type\": \"string\"\r",
													"    },\r",
													"    \"productType\": {\r",
													"      \"type\": \"string\"\r",
													"    },\r",
													"    \"units\": {\r",
													"      \"type\": \"object\",\r",
													"      \"properties\": {\r",
													"        \"palletType\": {\r",
													"          \"type\": \"string\"\r",
													"        },\r",
													"        \"positionFrom\": {\r",
													"          \"type\": \"integer\"\r",
													"        },\r",
													"        \"positionTo\": {\r",
													"          \"type\": \"integer\"\r",
													"        },\r",
													"        \"pallets\": {\r",
													"          \"type\": \"integer\"\r",
													"        },\r",
													"        \"boxes\": {\r",
													"          \"type\": \"integer\"\r",
													"        },\r",
													"        \"weight\": {\r",
													"          \"type\": \"number\"\r",
													"        },\r",
													"        \"cost\": {\r",
													"          \"type\": \"number\"\r",
													"        }\r",
													"      },\r",
													"      \"required\": [\r",
													"        \"palletType\",\r",
													"        \"positionFrom\",\r",
													"        \"positionTo\",\r",
													"        \"pallets\",\r",
													"        \"boxes\",\r",
													"        \"weight\",\r",
													"        \"cost\"\r",
													"      ]\r",
													"    },\r",
													"    \"unitsFact\": {\r",
													"      \"type\": \"null\"\r",
													"    },\r",
													"    \"orders\": {\r",
													"      \"type\": \"array\",\r",
													"      \"items\": [\r",
													"        {\r",
													"          \"type\": \"object\",\r",
													"          \"properties\": {\r",
													"            \"number\": {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            \"waybillNumber\": {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            \"consignorNumber\": {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            \"type\": {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            \"units\": {\r",
													"              \"type\": \"object\",\r",
													"              \"properties\": {\r",
													"                \"palletType\": {\r",
													"                  \"type\": \"string\"\r",
													"                },\r",
													"                \"positionFrom\": {\r",
													"                  \"type\": \"integer\"\r",
													"                },\r",
													"                \"positionTo\": {\r",
													"                  \"type\": \"integer\"\r",
													"                },\r",
													"                \"pallets\": {\r",
													"                  \"type\": \"integer\"\r",
													"                },\r",
													"                \"boxes\": {\r",
													"                  \"type\": \"integer\"\r",
													"                },\r",
													"                \"weight\": {\r",
													"                  \"type\": \"number\"\r",
													"                },\r",
													"                \"cost\": {\r",
													"                  \"type\": \"number\"\r",
													"                }\r",
													"              },\r",
													"              \"required\": [\r",
													"                \"palletType\",\r",
													"                \"positionFrom\",\r",
													"                \"positionTo\",\r",
													"                \"pallets\",\r",
													"                \"boxes\",\r",
													"                \"weight\",\r",
													"                \"cost\"\r",
													"              ]\r",
													"            },\r",
													"            \"unitsFact\": {\r",
													"              \"type\": \"null\"\r",
													"            },\r",
													"            \"productTransportWaybill\": {\r",
													"              \"type\": \"null\"\r",
													"            }\r",
													"          },\r",
													"          \"required\": [\r",
													"            \"number\",\r",
													"            \"waybillNumber\",\r",
													"            \"consignorNumber\",\r",
													"            \"type\",\r",
													"            \"units\",\r",
													"            \"unitsFact\",\r",
													"            \"productTransportWaybill\"\r",
													"          ]\r",
													"        },\r",
													"        {\r",
													"          \"type\": \"object\",\r",
													"          \"properties\": {\r",
													"            \"number\": {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            \"waybillNumber\": {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            \"consignorNumber\": {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            \"type\": {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            \"units\": {\r",
													"              \"type\": \"object\",\r",
													"              \"properties\": {\r",
													"                \"palletType\": {\r",
													"                  \"type\": \"string\"\r",
													"                },\r",
													"                \"positionFrom\": {\r",
													"                  \"type\": \"integer\"\r",
													"                },\r",
													"                \"positionTo\": {\r",
													"                  \"type\": \"integer\"\r",
													"                },\r",
													"                \"pallets\": {\r",
													"                  \"type\": \"integer\"\r",
													"                },\r",
													"                \"boxes\": {\r",
													"                  \"type\": \"integer\"\r",
													"                },\r",
													"                \"weight\": {\r",
													"                  \"type\": \"number\"\r",
													"                },\r",
													"                \"cost\": {\r",
													"                  \"type\": \"number\"\r",
													"                }\r",
													"              },\r",
													"              \"required\": [\r",
													"                \"palletType\",\r",
													"                \"positionFrom\",\r",
													"                \"positionTo\",\r",
													"                \"pallets\",\r",
													"                \"boxes\",\r",
													"                \"weight\",\r",
													"                \"cost\"\r",
													"              ]\r",
													"            },\r",
													"            \"unitsFact\": {\r",
													"              \"type\": \"null\"\r",
													"            },\r",
													"            \"productTransportWaybill\": {\r",
													"              \"type\": \"null\"\r",
													"            }\r",
													"          },\r",
													"          \"required\": [\r",
													"            \"number\",\r",
													"            \"waybillNumber\",\r",
													"            \"consignorNumber\",\r",
													"            \"type\",\r",
													"            \"units\",\r",
													"            \"unitsFact\",\r",
													"            \"productTransportWaybill\"\r",
													"          ]\r",
													"        }\r",
													"      ]\r",
													"    },\r",
													"    \"loadingPoints\": {\r",
													"      \"type\": \"array\",\r",
													"      \"items\": [\r",
													"        {\r",
													"          \"type\": \"object\",\r",
													"          \"properties\": {\r",
													"            \"dateTime\": {\r",
													"              \"type\": \"object\",\r",
													"              \"properties\": {\r",
													"                \"from\": {\r",
													"                  \"type\": \"string\"\r",
													"                },\r",
													"                \"to\": {\r",
													"                  \"type\": \"string\"\r",
													"                }\r",
													"              },\r",
													"              \"required\": [\r",
													"                \"from\",\r",
													"                \"to\"\r",
													"              ]\r",
													"            },\r",
													"            \"orderNumbers\": {\r",
													"              \"type\": \"array\",\r",
													"              \"items\": [\r",
													"                {\r",
													"                  \"type\": \"string\"\r",
													"                },\r",
													"                {\r",
													"                  \"type\": \"string\"\r",
													"                }\r",
													"              ]\r",
													"            },\r",
													"            \"orderIndexes\": {\r",
													"              \"type\": \"array\",\r",
													"              \"items\": [\r",
													"                {\r",
													"                  \"type\": \"integer\"\r",
													"                },\r",
													"                {\r",
													"                  \"type\": \"integer\"\r",
													"                }\r",
													"              ]\r",
													"            },\r",
													"            \"warehouse\": {\r",
													"              \"type\": \"object\",\r",
													"              \"properties\": {\r",
													"                \"gln\": {\r",
													"                  \"type\": \"null\"\r",
													"                },\r",
													"                \"id\": {\r",
													"                  \"type\": \"string\"\r",
													"                },\r",
													"                \"foreignId\": {\r",
													"                  \"type\": \"null\"\r",
													"                }\r",
													"              },\r",
													"              \"required\": [\r",
													"                \"gln\",\r",
													"                \"id\",\r",
													"                \"foreignId\"\r",
													"              ]\r",
													"            },\r",
													"            \"status\": {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            \"dateTimeArrived\": {\r",
													"              \"type\": \"null\"\r",
													"            },\r",
													"            \"dateTimeDeparted\": {\r",
													"              \"type\": \"null\"\r",
													"            },\r",
													"            \"dateTimeArrivedByController\": {\r",
													"              \"type\": \"null\"\r",
													"            },\r",
													"            \"dateTimeDepartedByController\": {\r",
													"              \"type\": \"null\"\r",
													"            },\r",
													"            \"comment\": {\r",
													"              \"type\": \"null\"\r",
													"            },\r",
													"            \"units\": {\r",
													"              \"type\": \"null\"\r",
													"            },\r",
													"            \"unitsFact\": {\r",
													"              \"type\": \"null\"\r",
													"            }\r",
													"          },\r",
													"          \"required\": [\r",
													"            \"dateTime\",\r",
													"            \"orderNumbers\",\r",
													"            \"orderIndexes\",\r",
													"            \"warehouse\",\r",
													"            \"status\",\r",
													"            \"dateTimeArrived\",\r",
													"            \"dateTimeDeparted\",\r",
													"            \"dateTimeArrivedByController\",\r",
													"            \"dateTimeDepartedByController\",\r",
													"            \"comment\",\r",
													"            \"units\",\r",
													"            \"unitsFact\"\r",
													"          ]\r",
													"        }\r",
													"      ]\r",
													"    },\r",
													"    \"unloadingPoints\": {\r",
													"      \"type\": \"array\",\r",
													"      \"items\": [\r",
													"        {\r",
													"          \"type\": \"object\",\r",
													"          \"properties\": {\r",
													"            \"dateTime\": {\r",
													"              \"type\": \"object\",\r",
													"              \"properties\": {\r",
													"                \"from\": {\r",
													"                  \"type\": \"string\"\r",
													"                },\r",
													"                \"to\": {\r",
													"                  \"type\": \"string\"\r",
													"                }\r",
													"              },\r",
													"              \"required\": [\r",
													"                \"from\",\r",
													"                \"to\"\r",
													"              ]\r",
													"            },\r",
													"            \"orderNumbers\": {\r",
													"              \"type\": \"array\",\r",
													"              \"items\": [\r",
													"                {\r",
													"                  \"type\": \"string\"\r",
													"                },\r",
													"                {\r",
													"                  \"type\": \"string\"\r",
													"                }\r",
													"              ]\r",
													"            },\r",
													"            \"orderIndexes\": {\r",
													"              \"type\": \"array\",\r",
													"              \"items\": [\r",
													"                {\r",
													"                  \"type\": \"integer\"\r",
													"                },\r",
													"                {\r",
													"                  \"type\": \"integer\"\r",
													"                }\r",
													"              ]\r",
													"            },\r",
													"            \"warehouse\": {\r",
													"              \"type\": \"object\",\r",
													"              \"properties\": {\r",
													"                \"gln\": {\r",
													"                  \"type\": \"string\"\r",
													"                },\r",
													"                \"id\": {\r",
													"                  \"type\": \"string\"\r",
													"                },\r",
													"                \"foreignId\": {\r",
													"                  \"type\": \"null\"\r",
													"                }\r",
													"              },\r",
													"              \"required\": [\r",
													"                \"gln\",\r",
													"                \"id\",\r",
													"                \"foreignId\"\r",
													"              ]\r",
													"            },\r",
													"            \"status\": {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            \"dateTimeArrived\": {\r",
													"              \"type\": \"null\"\r",
													"            },\r",
													"            \"dateTimeDeparted\": {\r",
													"              \"type\": \"null\"\r",
													"            },\r",
													"            \"dateTimeArrivedByController\": {\r",
													"              \"type\": \"null\"\r",
													"            },\r",
													"            \"dateTimeDepartedByController\": {\r",
													"              \"type\": \"null\"\r",
													"            },\r",
													"            \"comment\": {\r",
													"              \"type\": \"null\"\r",
													"            },\r",
													"            \"units\": {\r",
													"              \"type\": \"null\"\r",
													"            },\r",
													"            \"unitsFact\": {\r",
													"              \"type\": \"null\"\r",
													"            }\r",
													"          },\r",
													"          \"required\": [\r",
													"            \"dateTime\",\r",
													"            \"orderNumbers\",\r",
													"            \"orderIndexes\",\r",
													"            \"warehouse\",\r",
													"            \"status\",\r",
													"            \"dateTimeArrived\",\r",
													"            \"dateTimeDeparted\",\r",
													"            \"dateTimeArrivedByController\",\r",
													"            \"dateTimeDepartedByController\",\r",
													"            \"comment\",\r",
													"            \"units\",\r",
													"            \"unitsFact\"\r",
													"          ]\r",
													"        }\r",
													"      ]\r",
													"    },\r",
													"    \"servicesNeeded\": {\r",
													"      \"type\": \"array\",\r",
													"      \"items\": [\r",
													"        {\r",
													"          \"type\": \"string\"\r",
													"        }\r",
													"      ]\r",
													"    },\r",
													"    \"services\": {\r",
													"      \"type\": \"array\",\r",
													"      \"items\": {}\r",
													"    },\r",
													"    \"temperature\": {\r",
													"      \"type\": \"object\",\r",
													"      \"properties\": {\r",
													"        \"from\": {\r",
													"          \"type\": \"integer\"\r",
													"        },\r",
													"        \"to\": {\r",
													"          \"type\": \"integer\"\r",
													"        }\r",
													"      },\r",
													"      \"required\": [\r",
													"        \"from\",\r",
													"        \"to\"\r",
													"      ]\r",
													"    },\r",
													"    \"comments\": {\r",
													"      \"type\": \"array\",\r",
													"      \"items\": [\r",
													"        {\r",
													"          \"type\": \"object\",\r",
													"          \"properties\": {\r",
													"            \"dateTime\": {\r",
													"              \"type\": \"string\"\r",
													"            },\r",
													"            \"company\": {\r",
													"              \"type\": \"object\",\r",
													"              \"properties\": {\r",
													"                \"id\": {\r",
													"                  \"type\": \"string\"\r",
													"                },\r",
													"                \"foreignId\": {\r",
													"                  \"type\": \"string\"\r",
													"                },\r",
													"                \"type\": {\r",
													"                  \"type\": \"string\"\r",
													"                }\r",
													"              },\r",
													"              \"required\": [\r",
													"                \"id\",\r",
													"                \"foreignId\",\r",
													"                \"type\"\r",
													"              ]\r",
													"            },\r",
													"            \"comment\": {\r",
													"              \"type\": \"string\"\r",
													"            }\r",
													"          },\r",
													"          \"required\": [\r",
													"            \"dateTime\",\r",
													"            \"company\",\r",
													"            \"comment\"\r",
													"          ]\r",
													"        }\r",
													"      ]\r",
													"    },\r",
													"    \"carriage\": {\r",
													"      \"type\": \"null\"\r",
													"    },\r",
													"    \"carriageString\": {\r",
													"      \"type\": \"null\"\r",
													"    },\r",
													"    \"shippingCost\": {\r",
													"      \"type\": \"number\"\r",
													"    },\r",
													"    \"vehicles\": {\r",
													"      \"type\": \"array\",\r",
													"      \"items\": {}\r",
													"    },\r",
													"    \"vehicle\": {\r",
													"      \"type\": \"null\"\r",
													"    },\r",
													"    \"drivers\": {\r",
													"      \"type\": \"array\",\r",
													"      \"items\": {}\r",
													"    },\r",
													"    \"driver\": {\r",
													"      \"type\": \"null\"\r",
													"    },\r",
													"    \"editableUntil\": {\r",
													"      \"type\": \"string\"\r",
													"    },\r",
													"    \"financials\": {\r",
													"      \"type\": \"object\",\r",
													"      \"properties\": {\r",
													"        \"tariffCost\": {\r",
													"          \"type\": \"number\"\r",
													"        },\r",
													"        \"baseCost\": {\r",
													"          \"type\": \"number\"\r",
													"        },\r",
													"        \"shippingCost\": {\r",
													"          \"type\": \"number\"\r",
													"        },\r",
													"        \"poolingPayToCarrier\": {\r",
													"          \"type\": \"boolean\"\r",
													"        },\r",
													"        \"additionalCosts\": {\r",
													"          \"type\": \"array\",\r",
													"          \"items\": {}\r",
													"        }\r",
													"      },\r",
													"      \"required\": [\r",
													"        \"tariffCost\",\r",
													"        \"baseCost\",\r",
													"        \"shippingCost\",\r",
													"        \"poolingPayToCarrier\",\r",
													"        \"additionalCosts\"\r",
													"      ]\r",
													"    }\r",
													"  },\r",
													"  \"required\": [\r",
													"    \"id\",\r",
													"    \"number\",\r",
													"    \"foreignId\",\r",
													"    \"version\",\r",
													"    \"status\",\r",
													"    \"shippingType\",\r",
													"    \"slotId\",\r",
													"    \"carrier\",\r",
													"    \"client\",\r",
													"    \"consignor\",\r",
													"    \"carType\",\r",
													"    \"carCapacityType\",\r",
													"    \"productType\",\r",
													"    \"units\",\r",
													"    \"unitsFact\",\r",
													"    \"orders\",\r",
													"    \"loadingPoints\",\r",
													"    \"unloadingPoints\",\r",
													"    \"servicesNeeded\",\r",
													"    \"services\",\r",
													"    \"temperature\",\r",
													"    \"comments\",\r",
													"    \"carriage\",\r",
													"    \"carriageString\",\r",
													"    \"shippingCost\",\r",
													"    \"vehicles\",\r",
													"    \"vehicle\",\r",
													"    \"drivers\",\r",
													"    \"driver\",\r",
													"    \"editableUntil\",\r",
													"    \"financials\"\r",
													"  ]\r",
													"}\r",
													"\r",
													"jsonData = pm.response.json();\r",
													"var warehouse = \"5d3ad3c0c6bbff14e8e1eb38\";\r",
													"\r",
													"pm.test(\"Проверка схемы\", function () {\r",
													"  pm.expect(tv4.validate(pm.response.json(), schema, false, true)).to.be.true;\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что бронирование новое\", function () {\r",
													"  pm.expect(jsonData.id).to.exist;\r",
													"  pm.expect(jsonData.number).to.be.a('string').and.match(/[0-9]/);\r",
													"  pm.expect(jsonData.version).to.be.oneOf([1, 2]);\r",
													"  pm.expect(jsonData.editableUntil).to.exist;\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что забронированная заявка соответствует отправленным данным\", function () {\r",
													"  pm.expect(jsonData.comments[0].comment).to.eql(pm.variables.get(\"comment\"));\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что слот бронирования определен\", function () {\r",
													"  pm.expect(jsonData.slotId).to.eql(pm.variables.get(\"slotId\"));\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что тип бронирования LTL или Pooling\", function () { \r",
													"    pm.expect(jsonData.shippingType).to.contain.oneOf([\"LTL\", \"Pooling\"]);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что статус бронирования Исполняется\", function () { \r",
													"    pm.expect(jsonData.status).to.eql(\"InProgress\");\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что склад отправки - это склад ТК\", function () { \r",
													"    pm.expect(jsonData.loadingPoints[0].warehouse.id).to.eql(warehouse);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{goPoolingOT}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"loadingPoints\": [\n        {\n            \"dateTime\": {\n                \"from\": \"{{consolidationDate}}T14:32:13\",\n                \"to\": \"{{consolidationDate}}T14:32:13\"\n            },\n            \"orderNumbers\": [\n                \"QQ00000{{number}}\",\n                \"QA00000{{number}}\"\n            ],\n            \"warehouse\": {\n                \"id\": \"{{loadingWarehouse}}\",\n                \"foreignId\": \"\"\n            },\n            \"address\": null\n        }\n    ],\n    \"orders\": [\n        {\n            \"number\": \"QQ00000{{number}}\",\n            \"waybillNumber\": \"{{number}}\",\n            \"consignorNumber\": \"SH{{number}}\",\n            \"type\": \"Transit\",\n            \"units\": {\n                \"palletType\": \"Euro\",\n                \"positionFrom\": 1,\n                \"positionTo\": 5,\n                \"pallets\": 5,\n                \"boxes\": 2,\n                \"weight\": 400,\n                \"cost\": 264747.46,\n                \"volume\": null,\n                \"length\": null,\n                \"width\": null,\n                \"height\": null\n            }\n        },\n        {\n            \"number\": \"QA00000{{number}}\",\n            \"waybillNumber\": \"{{number}}\",\n            \"consignorNumber\": \"SF{{number}}\",\n            \"type\": \"RetailAction\",\n            \"units\": {\n                \"palletType\": \"Euro\",\n                \"positionFrom\": 6,\n                \"positionTo\": 12,\n                \"pallets\": 7,\n                \"boxes\": 1,\n                \"weight\": 500,\n                \"cost\": 789000,\n                \"volume\": null,\n                \"length\": null,\n                \"width\": null,\n                \"height\": null\n            }\n        }\n    ],\n    \"productType\": \"{{productType}}\",\n    \"foreignId\": \"\",\n    \"shippingType\": \"LTL\",\n    \"slotId\": \"{{slotId}}\",\n    \"carrier\": {\n        \"id\": \"{{carrier}}\",\n        \"foreignId\": \"\"\n    },\n    \"client\": {\n        \"id\": \"{{client}}\",\n        \"foreignId\": \"\"\n    },\n    \"carType\": \"{{carType}}\",\n    \"carCapacityType\": \"\",\n    \"units\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 1,\n        \"positionTo\": 12,\n        \"pallets\": 12,\n        \"boxes\": 3,\n        \"weight\": 900,\n        \"cost\": 234567.55,\n        \"volume\": null,\n        \"length\": null,\n        \"width\": null,\n        \"height\": null\n    },\n    \"unloadingPoints\": [\n        {\n            \"dateTime\": {\n                \"from\": \"{{deliveryDate}}T14:32:13\",\n                \"to\": \"{{deliveryDate}}T14:32:13\"\n            },\n            \"orderNumbers\": [\n                \"QQ00000{{number}}\",\n                \"QA00000{{number}}\"\n            ],\n            \"warehouse\": {\n                \"id\": \"{{unloadingWarehouse}}\",\n                \"foreignId\": \"\"\n            },\n            \"address\": null\n        }\n    ],\n    \"servicesNeeded\": [\n        \"Basic\"\n    ],\n    \"temperature\": {\n        \"from\": null,\n        \"to\": null\n    },\n    \"comment\": \"{{comment}}\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations"
											]
										}
									},
									"response": []
								},
								{
									"name": "Создание бронирования LTL на слот c набранным Pooling",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"let i = 0;\r",
													"var moment = require('moment');\r",
													"pm.variables.set(\"currentDate\", moment().add(1, 'week').format(\"YYYY-MM-DD\"));\r",
													"pm.variables.set(\"currentDate + a week\", moment().add(2, 'week').format(\"YYYY-MM-DD\"));\r",
													"\r",
													"const number = pm.variables.replaceIn(\"{{$randomInt}}\");\r",
													"pm.variables.set(\"number\", number);\r",
													"\r",
													"const com = pm.variables.replaceIn(\"{{$randomCity}}\");\r",
													"pm.variables.set(\"comment\", com);\r",
													"\r",
													"\r",
													"\r",
													"    pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/slots?consolidationDateFrom=\" + pm.variables.get(\"currentDate\") + \"&consolidationDateTo=\" + pm.variables.get(\"currentDate + a week\") + \"&shippingRegionId=\" + pm.globals.get(\"MoscowShippingRegion\") + \"&UnloadingWarehouseId=\" + pm.globals.get(\"YaroslavlUnloadingWarehouse\") + \"&carrierId=\" + pm.globals.get(\"FMCarrier\"),\r",
													"    method: \"GET\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\")\r",
													"    },\r",
													"},\r",
													"    function (err, res) {\r",
													"    console.log(res.json());\r",
													"    pm.variables.set(\"arrayMembers\", res.json().length);\r",
													"    console.log(pm.variables.get(\"arrayMembers\"));\r",
													"        do {\r",
													"        i++;\r",
													"        pm.sendRequest({\r",
													"        url: pm.environment.get(\"baseUrl\") + \"/api/v2/slots?consolidationDateFrom=\" + pm.variables.get(\"currentDate\") + \"&consolidationDateTo=\" + pm.variables.get(\"currentDate + a week\") + \"&shippingRegionId=\" + pm.globals.get(\"MoscowShippingRegion\") + \"&UnloadingWarehouseId=\" + pm.globals.get(\"YaroslavlUnloadingWarehouse\") + \"&carrierId=\" + pm.globals.get(\"FMCarrier\"),\r",
													"        method: \"GET\",\r",
													"        header: {\r",
													"            \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\")\r",
													"        },\r",
													"    },\r",
													"        function (err, res) {\r",
													"            console.log(res.json());\r",
													"            pm.expect(res.status).to.eql(\"OK\");\r",
													"            pm.expect(res.json()).to.not.be.empty;\r",
													"            pm.variables.set(\"PoolingCount\", res.json()[i].poolingCount);\r",
													"            pm.variables.set(\"slotId\", res.json()[i].id);\r",
													"            pm.variables.set(\"productType\", res.json()[i].productTypes[0]);\r",
													"            pm.variables.set(\"carrier\", res.json()[i].carrier.id);\r",
													"            pm.variables.set(\"client\", res.json()[i].client.id);\r",
													"            pm.variables.set(\"carType\", res.json()[i].carType);\r",
													"            pm.variables.set(\"unloadingWarehouse\", res.json()[i].unloadingWarehouse.id);\r",
													"            pm.variables.set(\"consolidationDate\", res.json()[i].consolidationDate);\r",
													"            pm.variables.set(\"deliveryDate\", res.json()[i].deliveryDate);\r",
													"            pm.variables.set(\"deliveryDate\", res.json()[i].deliveryDate);\r",
													"        }\r",
													"     )\r",
													"} while ((res.json()[i].shippingType !== \"Pooling\") && (i < (pm.globals.get(\"arrayMembers\")-1)));\r",
													"    \r",
													"     }\r",
													"     )"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"\r",
													"//pm.test(\"Проверка, что в выбранном слоте пулинг не был набран\", function () {\r",
													"//  pm.expect(pm.variables.get(\"pre-requestShippingType\")).to.eql(\"LTL\");\r",
													"//});\r",
													"\r",
													"pm.test(\"Проверка, что Pooling набран\", function () { \r",
													"    pm.expect(jsonData.shippingType).to.eql(\"Pooling\");\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что забронированная заявка соответствует отправленным данным\", function () {\r",
													"  pm.expect(jsonData.comments[0].comment).to.eql(pm.variables.get(\"comment\"));\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что слот бронирования определен\", function () {\r",
													"  pm.expect(jsonData.slotId).to.eql(pm.variables.get(\"slotId\"));\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что статус бронирования Исполняется\", function () { \r",
													"    pm.expect(jsonData.status).to.eql(\"InProgress\");\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{goPoolingOT}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"SlotId\": \"{{slotId}}\",\n  \"ForeignId\": null,\n  \"ShippingType\": \"LTL\",\n  \"ReservationType\": \"Basic\",\n  \"CarType\": \"{{carType}}\",\n  \"Carrier\": {\n    \"id\": \"{{carrier}}\",\n    \"ForeignId\": null\n  },\n  \"Client\": {\n   \"id\": \"{{client}}\",\n    \"ForeignId\": null\n  },\n  \"ProductType\": \"{{productType}}\",\n  \"CarCapacityType\": \"t15\",\n  \"Units\": {\n    \"PositionFrom\": 1,\n    \"PositionTo\": {{PoolingCount}},\n    \"Pallets\": {{PoolingCount}},\n    \"Weight\": 401.079,\n    \"Cost\": 38866.65,\n    \"Boxes\": null\n  },\n  \"LoadingPoints\": [\n    {\n      \"OrderNumbers\": [\n        \"BZ02000{{number}}\",\n        \"BX02000{{number}}\"\n      ],\n      \"Warehouse\": {\n         \"id\": \"60c342fc031f54989c4140a2\",\n        \"ForeignId\": null\n      },\n      \"AddressInfo\": null,\n      \"DateTime\": {\n        \"from\": \"{{consolidationDate}}T14:32:13\",\n                \"to\": \"{{consolidationDate}}T14:32:13\"\n      },\n      \"Status\": \"Scheduled\",\n      \"DateTimeArrived\": null,\n      \"DateTimeDeparted\": null\n    }\n  ],\n  \"UnloadingPoints\": [\n    {\n      \"OrderNumbers\": [\n        \"BZ02000{{number}}\",\n        \"BX02000{{number}}\"\n      ],\n      \"Warehouse\": {\n         \"id\": \"{{unloadingWarehouse}}\",\n        \"ForeignId\": null\n      },\n      \"AddressInfo\": null,\n      \"DateTime\": {\n        \"from\": \"{{deliveryDate}}T14:32:13\",\n        \"to\": \"{{deliveryDate}}T14:32:13\"\n      },\n      \"Status\": \"Scheduled\",\n      \"DateTimeArrived\": null,\n      \"DateTimeDeparted\": null\n    }\n  ],\n  \"Orders\": [\n    {\n      \"Units\": {\n        \"PositionFrom\": 1,\n        \"PositionTo\": 1,\n        \"Pallets\": null,\n        \"Weight\": 308.301,\n        \"Cost\": 27668.97,\n        \"Boxes\": 25\n      },\n       \"number\": \"BZ02000{{number}}\",\n        \"waybillNumber\": \"{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\"\n    },\n    {\n      \"Units\": {\n        \"PositionFrom\": 2,\n        \"PositionTo\": 2,\n        \"Pallets\": null,\n        \"Weight\": 54.258,\n        \"Cost\": 11197.68,\n        \"Boxes\": 7\n      },\n       \"number\": \"BX02000{{number}}\",\n        \"waybillNumber\": \"{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\",\n        \"type\": \"Transit\"\n    },\n    {\n      \"Units\": {\n        \"PositionFrom\": 3,\n        \"PositionTo\": {{PoolingCount}},\n        \"Pallets\": null,\n        \"Weight\": 308.301,\n        \"Cost\": 27668.97,\n        \"Boxes\": 25\n      },\n       \"number\": \"BX02000{{number}}\",\n        \"waybillNumber\": \"{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\"\n    }\n  ],\n  \"Temperature\": {\n    \"From\": 2,\n    \"To\": 25\n  },\n  \"ServicesNeeded\": [\n    \"Basic\"\n  ],\n  \"comment\": \"{{comment}}\",\n  \"Version\": null,\n  \"Status\": null\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations"
											]
										}
									},
									"response": []
								},
								{
									"name": "Создание бронирования LTL на слот со склада ГО",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');\r",
													"pm.variables.set(\"currentDate\", moment().add(1, 'week').format(\"YYYY-MM-DD\"));\r",
													"pm.variables.set(\"currentDate + a week\", moment().add(2, 'week').format(\"YYYY-MM-DD\"));\r",
													"\r",
													"const number = pm.variables.replaceIn(\"{{$randomInt}}\");\r",
													"pm.variables.set(\"number\", number);\r",
													"\r",
													"const com = pm.variables.replaceIn(\"{{$randomCity}}\");\r",
													"pm.variables.set(\"comment\", com);\r",
													"\r",
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/slots?consolidationDateFrom=\" + pm.variables.get(\"currentDate\") + \"&consolidationDateTo=\" + pm.variables.get(\"currentDate + a week\") + \"&shippingRegionId=\" + pm.globals.get(\"MoscowShippingRegion\") + \"&UnloadingWarehouseId=\" + pm.globals.get(\"DmitrovUnloadingWarehouse\") + \"&carrierId=\" + pm.globals.get(\"FMCarrier\"),\r",
													"    method: \"GET\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"    },\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.expect(res.json()).to.not.be.empty;\r",
													"        pm.variables.set(\"slotId\", res.json()[0].id);\r",
													"        pm.variables.set(\"productType\", res.json()[0].productTypes[0]);\r",
													"        pm.variables.set(\"carrier\", res.json()[0].carrier.id);\r",
													"        pm.variables.set(\"client\", res.json()[0].client.id);\r",
													"        pm.variables.set(\"carType\", res.json()[0].carType);\r",
													"        pm.variables.set(\"unloadingWarehouse\", res.json()[0].unloadingWarehouse.id);\r",
													"        pm.variables.set(\"consolidationDate\", res.json()[0].consolidationDate);\r",
													"        pm.variables.set(\"deliveryDate\", res.json()[0].deliveryDate);\r",
													"        pm.variables.set(\"deliveryDate\", res.json()[0].deliveryDate);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"var warehouse = \"60c342fc031f54989c4140a2\";\r",
													"\r",
													"pm.test(\"Проверка, что бронирование новое\", function () {\r",
													"  pm.expect(jsonData.id).to.exist;\r",
													"  pm.expect(jsonData.number).to.be.a('string').and.match(/[0-9]/);\r",
													"  pm.expect(jsonData.version).to.be.oneOf([1, 2]);\r",
													"  pm.expect(jsonData.editableUntil).to.exist;\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что забронированная заявка соответствует отправленным данным\", function () {\r",
													"  pm.expect(jsonData.comments[0].comment).to.eql(pm.variables.get(\"comment\"));\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что слот бронирования определен\", function () {\r",
													"  pm.expect(jsonData.slotId).to.eql(pm.variables.get(\"slotId\"));\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что тип бронирования LTL или Pooling\", function () { \r",
													"    pm.expect(jsonData.shippingType).to.contain.oneOf([\"LTL\", \"Pooling\"]);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что статус бронирования Исполняется\", function () { \r",
													"    pm.expect(jsonData.status).to.eql(\"InProgress\");\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что склад отправки - это склад ГО\", function () { \r",
													"    pm.expect(jsonData.loadingPoints[0].warehouse.id).to.eql(warehouse);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{goPoolingOT}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"SlotId\": \"{{slotId}}\",\n  \"ForeignId\": null,\n  \"ShippingType\": \"LTL\",\n  \"ReservationType\": \"Basic\",\n  \"CarType\": \"{{carType}}\",\n  \"Carrier\": {\n    \"id\": \"{{carrier}}\",\n    \"ForeignId\": null\n  },\n  \"Client\": {\n   \"id\": \"{{client}}\",\n    \"ForeignId\": null\n  },\n  \"ProductType\": \"{{productType}}\",\n  \"CarCapacityType\": \"t15\",\n  \"Units\": {\n    \"PositionFrom\": 1,\n    \"PositionTo\": 3,\n    \"Pallets\": 3,\n    \"Weight\": 401.079,\n    \"Cost\": 38866.65,\n    \"Boxes\": null\n  },\n  \"LoadingPoints\": [\n    {\n      \"OrderNumbers\": [\n        \"AL01000{{number}}\",\n        \"DL01000{{number}}\"\n      ],\n      \"Warehouse\": {\n         \"id\": \"60c342fc031f54989c4140a2\",\n        \"ForeignId\": null\n      },\n      \"AddressInfo\": null,\n      \"DateTime\": {\n        \"from\": \"{{consolidationDate}}T14:32:13\",\n                \"to\": \"{{consolidationDate}}T14:32:13\"\n      },\n      \"Status\": \"Scheduled\",\n      \"DateTimeArrived\": null,\n      \"DateTimeDeparted\": null\n    }\n  ],\n  \"UnloadingPoints\": [\n    {\n      \"OrderNumbers\": [\n        \"AL01000{{number}}\",\n        \"DL01000{{number}}\"\n      ],\n      \"Warehouse\": {\n         \"id\": \"{{unloadingWarehouse}}\",\n        \"ForeignId\": null\n      },\n      \"AddressInfo\": null,\n      \"DateTime\": {\n        \"from\": \"{{deliveryDate}}T14:32:13\",\n        \"to\": \"{{deliveryDate}}T14:32:13\"\n      },\n      \"Status\": \"Scheduled\",\n      \"DateTimeArrived\": null,\n      \"DateTimeDeparted\": null\n    }\n  ],\n  \"Orders\": [\n    {\n      \"Units\": {\n        \"PositionFrom\": 1,\n        \"PositionTo\": 1,\n        \"Pallets\": null,\n        \"Weight\": 308.301,\n        \"Cost\": 27668.97,\n        \"Boxes\": 25\n      },\n       \"number\": \"AL01000{{number}}\",\n        \"waybillNumber\": \"{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\"\n    },\n    {\n      \"Units\": {\n        \"PositionFrom\": 2,\n        \"PositionTo\": 2,\n        \"Pallets\": null,\n        \"Weight\": 54.258,\n        \"Cost\": 11197.68,\n        \"Boxes\": 7\n      },\n       \"number\": \"DL01000{{number}}\",\n        \"waybillNumber\": \"{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\",\n        \"type\": \"Transit\"\n    },\n    {\n      \"Units\": {\n        \"PositionFrom\": 3,\n        \"PositionTo\": 3,\n        \"Pallets\": null,\n        \"Weight\": 308.301,\n        \"Cost\": 27668.97,\n        \"Boxes\": 25\n      },\n       \"number\": \"AL01000{{number}}\",\n        \"waybillNumber\": \"{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\"\n    }\n  ],\n  \"Temperature\": {\n    \"From\": 2,\n    \"To\": 25\n  },\n  \"ServicesNeeded\": [\n    \"Basic\"\n  ],\n  \"comment\": \"{{comment}}\",\n  \"Version\": null,\n  \"Status\": null\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations"
											]
										}
									},
									"response": []
								},
								{
									"name": "Создание бронирования LTL на слот с одинаковыми номерами заказов",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');\r",
													"pm.variables.set(\"currentDate\", moment().add(1, 'week').format(\"YYYY-MM-DD\"));\r",
													"pm.variables.set(\"currentDate + a week\", moment().add(2, 'week').format(\"YYYY-MM-DD\"));\r",
													"\r",
													"const number = pm.variables.replaceIn(\"{{$randomInt}}\");\r",
													"pm.variables.set(\"number\", number);\r",
													"\r",
													"const com = pm.variables.replaceIn(\"{{$randomCity}}\");\r",
													"pm.variables.set(\"comment\", com);\r",
													"\r",
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/slots?consolidationDateFrom=\" + pm.variables.get(\"currentDate\") + \"&consolidationDateTo=\" + pm.variables.get(\"currentDate + a week\") + \"&shippingRegionId=\" + pm.globals.get(\"MoscowShippingRegion\") + \"&UnloadingWarehouseId=\" + pm.globals.get(\"DmitrovUnloadingWarehouse\") + \"&carrierId=\" + pm.globals.get(\"FMCarrier\"),\r",
													"    method: \"GET\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"    },\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.expect(res.json()).to.not.be.empty;\r",
													"        pm.variables.set(\"slotId\", res.json()[1].id);\r",
													"        pm.variables.set(\"productType\", res.json()[1].productTypes[0]);\r",
													"        pm.variables.set(\"carrier\", res.json()[1].carrier.id);\r",
													"        pm.variables.set(\"client\", res.json()[1].client.id);\r",
													"        pm.variables.set(\"carType\", res.json()[1].carType);\r",
													"        pm.variables.set(\"loadingWarehouse\", res.json()[1].loadingWarehouses[0].id);\r",
													"        pm.variables.set(\"unloadingWarehouse\", res.json()[1].unloadingWarehouse.id);\r",
													"        pm.variables.set(\"consolidationDate\", res.json()[1].consolidationDate);\r",
													"        pm.variables.set(\"deliveryDate\", res.json()[1].deliveryDate);\r",
													"        pm.variables.set(\"deliveryDate\", res.json()[1].deliveryDate);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Проверка, что бронирование новое\", function () {\r",
													"  pm.expect(jsonData.id).to.exist;\r",
													"  pm.expect(jsonData.number).to.be.a('string').and.match(/[0-9]/);\r",
													"  pm.expect(jsonData.version).to.be.oneOf([1, 2]);\r",
													"  pm.expect(jsonData.editableUntil).to.exist;\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что слот бронирования определен\", function () {\r",
													"  pm.expect(jsonData.slotId).to.eql(pm.variables.get(\"slotId\"));\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что тип бронирования LTL или Pooling\", function () { \r",
													"    pm.expect(jsonData.shippingType).to.contain.oneOf([\"LTL\", \"Pooling\"]);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что статус бронирования Исполняется\", function () { \r",
													"    pm.expect(jsonData.status).to.eql(\"InProgress\");\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что индексы определены корректно\", function () { \r",
													"    pm.expect(jsonData.loadingPoints[0].orderIndexes).to.include.members([0, 1, 2]);\r",
													"    pm.expect(jsonData.unloadingPoints[0].orderIndexes).to.include.members([0, 1, 2]);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{goPoolingOT}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"SlotId\": \"{{slotId}}\",\n  \"ForeignId\": null,\n  \"ShippingType\": \"LTL\",\n  \"ReservationType\": \"Basic\",\n  \"CarType\": \"{{carType}}\",\n  \"Carrier\": {\n    \"id\": \"{{carrier}}\",\n    \"ForeignId\": null\n  },\n  \"Client\": {\n   \"id\": \"{{client}}\",\n    \"ForeignId\": null\n  },\n  \"ProductType\": \"{{productType}}\",\n  \"CarCapacityType\": \"t15\",\n  \"Units\": {\n    \"PositionFrom\": 1,\n    \"PositionTo\": 3,\n    \"Pallets\": 3,\n    \"Weight\": 401.079,\n    \"Cost\": 38866.65,\n    \"Boxes\": null\n  },\n  \"LoadingPoints\": [\n    {\n      \"OrderNumbers\": [\n        \"BL00000{{number}}\",\n        \"BL00000{{number}}\"\n      ],\n      \"Warehouse\": {\n         \"id\": \"{{loadingWarehouse}}\",\n        \"ForeignId\": null\n      },\n      \"AddressInfo\": null,\n      \"DateTime\": {\n        \"from\": \"{{consolidationDate}}T14:32:13\",\n                \"to\": \"{{consolidationDate}}T14:32:13\"\n      },\n      \"Status\": \"Scheduled\",\n      \"DateTimeArrived\": null,\n      \"DateTimeDeparted\": null\n    }\n  ],\n  \"UnloadingPoints\": [\n    {\n      \"OrderNumbers\": [\n        \"BL00000{{number}}\",\n        \"BL00000{{number}}\"\n      ],\n      \"Warehouse\": {\n         \"id\": \"{{unloadingWarehouse}}\",\n        \"ForeignId\": null\n      },\n      \"AddressInfo\": null,\n      \"DateTime\": {\n        \"from\": \"{{deliveryDate}}T14:32:13\",\n        \"to\": \"{{deliveryDate}}T14:32:13\"\n      },\n      \"Status\": \"Scheduled\",\n      \"DateTimeArrived\": null,\n      \"DateTimeDeparted\": null\n    }\n  ],\n  \"Orders\": [\n    {\n      \"Units\": {\n        \"PositionFrom\": 1,\n        \"PositionTo\": 1,\n        \"Pallets\": null,\n        \"Weight\": 308.301,\n        \"Cost\": 27668.97,\n        \"Boxes\": 25\n      },\n       \"number\": \"BL00000{{number}}\",\n        \"waybillNumber\": \"{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\"\n    },\n    {\n      \"Units\": {\n        \"PositionFrom\": 2,\n        \"PositionTo\": 2,\n        \"Pallets\": null,\n        \"Weight\": 54.258,\n        \"Cost\": 11197.68,\n        \"Boxes\": 7\n      },\n       \"number\": \"BL00000{{number}}\",\n        \"waybillNumber\": \"{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\",\n        \"type\": \"Transit\"\n    },\n    {\n      \"Units\": {\n        \"PositionFrom\": 3,\n        \"PositionTo\": 3,\n        \"Pallets\": null,\n        \"Weight\": 308.301,\n        \"Cost\": 27668.97,\n        \"Boxes\": 25\n      },\n       \"number\": \"BL00000{{number}}\",\n        \"waybillNumber\": \"{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\"\n    }\n  ],\n  \"Temperature\": {\n    \"From\": 2,\n    \"To\": 25\n  },\n  \"ServicesNeeded\": [\n    \"Basic\"\n  ],\n  \"comment\": \"{{comment}}\",\n  \"Version\": null,\n  \"Status\": null\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations"
											]
										}
									},
									"response": []
								},
								{
									"name": "Создание бронирования LTL на слот от ТК",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');\r",
													"pm.variables.set(\"currentDate\", moment().add(1, 'week').format(\"YYYY-MM-DD\"));\r",
													"pm.variables.set(\"currentDate + a week\", moment().add(2, 'week').format(\"YYYY-MM-DD\"));\r",
													"\r",
													"const number = pm.variables.replaceIn(\"{{$randomInt}}\");\r",
													"pm.variables.set(\"number\", number);\r",
													"\r",
													"const com = pm.variables.replaceIn(\"{{$randomCity}}\");\r",
													"pm.variables.set(\"comment\", com);\r",
													"\r",
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/slots?consolidationDateFrom=\" + pm.variables.get(\"currentDate\") + \"&consolidationDateTo=\" + pm.variables.get(\"currentDate + a week\") + \"&shippingRegionId=\" + pm.globals.get(\"MoscowShippingRegion\") + \"&UnloadingWarehouseId=\" + pm.globals.get(\"DmitrovUnloadingWarehouse\") + \"&carrierId=\" + pm.globals.get(\"FMCarrier\"),\r",
													"    method: \"GET\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"    },\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.expect(res.json()).to.not.be.empty;\r",
													"        pm.variables.set(\"slotId\", res.json()[1].id);\r",
													"        pm.variables.set(\"productType\", res.json()[1].productTypes[0]);\r",
													"        pm.variables.set(\"carrier\", res.json()[1].carrier.id);\r",
													"        pm.variables.set(\"client\", res.json()[1].client.id);\r",
													"        pm.variables.set(\"carType\", res.json()[1].carType);\r",
													"        pm.variables.set(\"unloadingWarehouse\", res.json()[1].unloadingWarehouse.id);\r",
													"        pm.variables.set(\"consolidationDate\", res.json()[1].consolidationDate);\r",
													"        pm.variables.set(\"deliveryDate\", res.json()[1].deliveryDate);\r",
													"        pm.variables.set(\"deliveryDate\", res.json()[1].deliveryDate);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Проверка, что бронирование новое\", function () {\r",
													"  pm.expect(jsonData.id).to.exist;\r",
													"  pm.expect(jsonData.number).to.be.a('string').and.match(/[0-9]/);\r",
													"  pm.expect(jsonData.version).to.be.oneOf([1, 2]);\r",
													"  pm.expect(jsonData.editableUntil).to.exist;\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что забронированная заявка соответствует отправленным данным\", function () {\r",
													"  pm.expect(jsonData.comments[0].comment).to.eql(pm.variables.get(\"comment\"));\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что слот бронирования определен\", function () {\r",
													"  pm.expect(jsonData.slotId).to.eql(pm.variables.get(\"slotId\"));\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что тип бронирования LTL или Pooling\", function () { \r",
													"    pm.expect(jsonData.shippingType).to.contain.oneOf([\"LTL\", \"Pooling\"]);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что статус бронирования Исполняется\", function () { \r",
													"    pm.expect(jsonData.status).to.eql(\"InProgress\");\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tkFmOT}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"SlotId\": \"{{slotId}}\",\n  \"ForeignId\": null,\n  \"ShippingType\": \"LTL\",\n  \"ReservationType\": \"Basic\",\n  \"CarType\": \"{{carType}}\",\n  \"Carrier\": {\n    \"id\": \"{{carrier}}\",\n    \"ForeignId\": null\n  },\n  \"Client\": {\n   \"id\": \"{{client}}\",\n    \"ForeignId\": null\n  },\n  \"ProductType\": \"{{productType}}\",\n  \"CarCapacityType\": \"t15\",\n  \"Units\": {\n    \"PositionFrom\": 1,\n    \"PositionTo\": 3,\n    \"Pallets\": 3,\n    \"Weight\": 401.079,\n    \"Cost\": 38866.65,\n    \"Boxes\": null\n  },\n  \"LoadingPoints\": [\n    {\n      \"OrderNumbers\": [\n        \"BL03000{{number}}\",\n        \"BK03000{{number}}\"\n      ],\n      \"Warehouse\": {\n         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\n        \"ForeignId\": null\n      },\n      \"AddressInfo\": null,\n      \"DateTime\": {\n        \"from\": \"{{consolidationDate}}T14:32:13\",\n                \"to\": \"{{consolidationDate}}T14:32:13\"\n      },\n      \"Status\": \"Scheduled\",\n      \"DateTimeArrived\": null,\n      \"DateTimeDeparted\": null\n    }\n  ],\n  \"UnloadingPoints\": [\n    {\n      \"OrderNumbers\": [\n        \"BL03000{{number}}\",\n        \"BK03000{{number}}\"\n      ],\n      \"Warehouse\": {\n         \"id\": \"{{unloadingWarehouse}}\",\n        \"ForeignId\": null\n      },\n      \"AddressInfo\": null,\n      \"DateTime\": {\n        \"from\": \"{{deliveryDate}}T14:32:13\",\n        \"to\": \"{{deliveryDate}}T14:32:13\"\n      },\n      \"Status\": \"Scheduled\",\n      \"DateTimeArrived\": null,\n      \"DateTimeDeparted\": null\n    }\n  ],\n  \"Orders\": [\n    {\n      \"Units\": {\n        \"PositionFrom\": 1,\n        \"PositionTo\": 1,\n        \"Pallets\": null,\n        \"Weight\": 308.301,\n        \"Cost\": 27668.97,\n        \"Boxes\": 25\n      },\n       \"number\": \"BL03000{{number}}\",\n        \"waybillNumber\": \"{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\"\n    },\n    {\n      \"Units\": {\n        \"PositionFrom\": 2,\n        \"PositionTo\": 2,\n        \"Pallets\": null,\n        \"Weight\": 54.258,\n        \"Cost\": 11197.68,\n        \"Boxes\": 7\n      },\n       \"number\": \"BK03000{{number}}\",\n        \"waybillNumber\": \"{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\",\n        \"type\": \"Transit\"\n    },\n    {\n      \"Units\": {\n        \"PositionFrom\": 3,\n        \"PositionTo\": 3,\n        \"Pallets\": null,\n        \"Weight\": 308.301,\n        \"Cost\": 27668.97,\n        \"Boxes\": 25\n      },\n       \"number\": \"BK03000{{number}}\",\n        \"waybillNumber\": \"{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\"\n    }\n  ],\n  \"Temperature\": {\n    \"From\": 2,\n    \"To\": 25\n  },\n  \"ServicesNeeded\": [\n    \"Basic\"\n  ],\n  \"comment\": \"{{comment}}\",\n  \"Version\": null,\n  \"Status\": null\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations"
											]
										}
									},
									"response": []
								},
								{
									"name": "Ошибка при попытке бронирования LTL на слот с несколькими точками доставки",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');\r",
													"pm.variables.set(\"currentDate\", moment().add(1, 'week').format(\"YYYY-MM-DD\"));\r",
													"pm.variables.set(\"currentDate + a week\", moment().add(2, 'week').format(\"YYYY-MM-DD\"));\r",
													"\r",
													"var number = pm.variables.get(\"number\");\r",
													"pm.variables.set(\"number\", number+1);\r",
													"\r",
													"const com = pm.variables.replaceIn(\"{{$randomCity}}\");\r",
													"pm.variables.set(\"comment\", com);\r",
													"\r",
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/slots?consolidationDateFrom=\" + pm.variables.get(\"currentDate\") + \"&consolidationDateTo=\" + pm.variables.get(\"currentDate + a week\") + \"&shippingRegionId=\" + pm.globals.get(\"MoscowShippingRegion\") + \"&UnloadingWarehouseId=\" + pm.globals.get(\"DmitrovUnloadingWarehouse\") + \"&carrierId=\" + pm.globals.get(\"FMCarrier\"),\r",
													"    method: \"GET\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"    },\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.expect(res.json()).to.not.be.empty;\r",
													"        pm.variables.set(\"slotId\", res.json()[0].id);\r",
													"        pm.variables.set(\"productType\", res.json()[0].productTypes[0]);\r",
													"        pm.variables.set(\"carrier\", res.json()[0].carrier.id);\r",
													"        pm.variables.set(\"client\", res.json()[0].client.id);\r",
													"        pm.variables.set(\"carType\", res.json()[0].carType);\r",
													"        pm.variables.set(\"unloadingWarehouse\", res.json()[0].unloadingWarehouse.id);\r",
													"        pm.variables.set(\"consolidationDate\", res.json()[0].consolidationDate);\r",
													"        pm.variables.set(\"deliveryDate\", res.json()[0].deliveryDate);\r",
													"        pm.variables.set(\"deliveryDate\", res.json()[0].deliveryDate);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что ошибка соответствует ожидаемой\", function () {\r",
													"     pm.expect(jsonData.error).to.eql(\"Несколько точек доставки не поддерживается в pooling-заявке\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{goPoolingOT}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"SlotId\": \"{{slotId}}\",\n  \"ForeignId\": null,\n  \"ShippingType\": \"LTL\",\n  \"ReservationType\": \"Basic\",\n  \"CarType\": \"{{carType}}\",\n  \"Carrier\": {\n    \"id\": \"{{carrier}}\",\n    \"ForeignId\": null\n  },\n  \"Client\": {\n   \"id\": \"{{client}}\",\n    \"ForeignId\": null\n  },\n  \"ProductType\": \"{{productType}}\",\n  \"CarCapacityType\": \"t15\",\n  \"Units\": {\n    \"PositionFrom\": 1,\n    \"PositionTo\": 3,\n    \"Pallets\": 3,\n    \"Weight\": 401.079,\n    \"Cost\": 38866.65,\n    \"Boxes\": null\n  },\n  \"LoadingPoints\": [\n    {\n      \"OrderNumbers\": [\n        \"BL{{number}}\",\n        \"BL{{number}}\"\n      ],\n      \"Warehouse\": {\n         \"id\": \"60c342fc031f54989c4140a2\",\n        \"ForeignId\": null\n      },\n      \"AddressInfo\": null,\n      \"DateTime\": {\n        \"from\": \"{{consolidationDate}}T14:32:13\",\n                \"to\": \"{{consolidationDate}}T14:32:13\"\n      },\n      \"Status\": \"Scheduled\",\n      \"DateTimeArrived\": null,\n      \"DateTimeDeparted\": null\n    }\n  ],\n  \"UnloadingPoints\": [\n    {\n      \"OrderNumbers\": [\n        \"BL{{number}}\"\n      ],\n      \"Warehouse\": {\n         \"id\": \"5b23dfcccd1a2640b4de30ce\",\n        \"ForeignId\": null\n      },\n      \"AddressInfo\": null,\n      \"DateTime\": {\n        \"from\": \"{{deliveryDate}}T14:32:13\",\n        \"to\": \"{{deliveryDate}}T14:32:13\"\n      },\n      \"Status\": \"Scheduled\",\n      \"DateTimeArrived\": null,\n      \"DateTimeDeparted\": null\n    },\n    {\n      \"OrderNumbers\": [\n        \"BL{{number}}\"\n      ],\n      \"Warehouse\": {\n         \"id\": \"{{unloadingWarehouse}}\",\n        \"ForeignId\": null\n      },\n      \"AddressInfo\": null,\n      \"DateTime\": {\n        \"from\": \"{{deliveryDate}}T20:32:13\",\n        \"to\": \"{{deliveryDate}}T20:32:13\"\n      },\n      \"Status\": \"Scheduled\",\n      \"DateTimeArrived\": null,\n      \"DateTimeDeparted\": null\n    }\n  ],\n  \"Orders\": [\n    {\n      \"Units\": {\n        \"PositionFrom\": 1,\n        \"PositionTo\": 1,\n        \"Pallets\": null,\n        \"Weight\": 308.301,\n        \"Cost\": 27668.97,\n        \"Boxes\": 25\n      },\n       \"number\": \"BL{{number}}\",\n        \"waybillNumber\": \"{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\"\n    },\n    {\n      \"Units\": {\n        \"PositionFrom\": 2,\n        \"PositionTo\": 2,\n        \"Pallets\": null,\n        \"Weight\": 54.258,\n        \"Cost\": 11197.68,\n        \"Boxes\": 7\n      },\n       \"number\": \"BL{{number}}\",\n        \"waybillNumber\": \"{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\",\n        \"type\": \"Transit\"\n    },\n    {\n      \"Units\": {\n        \"PositionFrom\": 3,\n        \"PositionTo\": 3,\n        \"Pallets\": null,\n        \"Weight\": 308.301,\n        \"Cost\": 27668.97,\n        \"Boxes\": 25\n      },\n       \"number\": \"BL{{number}}\",\n        \"waybillNumber\": \"{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\"\n    }\n  ],\n  \"Temperature\": {\n    \"From\": 2,\n    \"To\": 25\n  },\n  \"ServicesNeeded\": [\n    \"Basic\"\n  ],\n  \"comment\": \"{{comment}}\",\n  \"Version\": null,\n  \"Status\": null\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations"
											]
										}
									},
									"response": []
								},
								{
									"name": "Ошибка при попытке бронирования LTL на слот от ТС",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');\r",
													"pm.variables.set(\"currentDate\", moment().add(1, 'week').format(\"YYYY-MM-DD\"));\r",
													"pm.variables.set(\"currentDate + a week\", moment().add(2, 'week').format(\"YYYY-MM-DD\"));\r",
													"\r",
													"var number = pm.variables.get(\"number\");\r",
													"pm.variables.set(\"number\", number+1);\r",
													"\r",
													"const com = pm.variables.replaceIn(\"{{$randomCity}}\");\r",
													"pm.variables.set(\"comment\", com);\r",
													"\r",
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/slots?consolidationDateFrom=\" + pm.variables.get(\"currentDate\") + \"&consolidationDateTo=\" + pm.variables.get(\"currentDate + a week\") + \"&shippingRegionId=\" + pm.globals.get(\"MoscowShippingRegion\") + \"&UnloadingWarehouseId=\" + pm.globals.get(\"DmitrovUnloadingWarehouse\") + \"&carrierId=\" + pm.globals.get(\"FMCarrier\"),\r",
													"    method: \"GET\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"    },\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.expect(res.json()).to.not.be.empty;\r",
													"        pm.variables.set(\"slotId\", res.json()[0].id);\r",
													"        pm.variables.set(\"productType\", res.json()[0].productTypes[0]);\r",
													"        pm.variables.set(\"carrier\", res.json()[0].carrier.id);\r",
													"        pm.variables.set(\"client\", res.json()[0].client.id);\r",
													"        pm.variables.set(\"carType\", res.json()[0].carType);\r",
													"        pm.variables.set(\"unloadingWarehouse\", res.json()[0].unloadingWarehouse.id);\r",
													"        pm.variables.set(\"consolidationDate\", res.json()[0].consolidationDate);\r",
													"        pm.variables.set(\"deliveryDate\", res.json()[0].deliveryDate);\r",
													"        pm.variables.set(\"deliveryDate\", res.json()[0].deliveryDate);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка, что код ответа 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка что в ответе нет тела\", function () {\r",
													"    pm.response.to.not.be.withBody;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tsTanderOT}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"SlotId\": \"{{slotId}}\",\n  \"ForeignId\": null,\n  \"ShippingType\": \"LTL\",\n  \"ReservationType\": \"Basic\",\n  \"CarType\": \"{{carType}}\",\n  \"Carrier\": {\n    \"id\": \"{{carrier}}\",\n    \"ForeignId\": null\n  },\n  \"Client\": {\n   \"id\": \"{{client}}\",\n    \"ForeignId\": null\n  },\n  \"ProductType\": \"{{productType}}\",\n  \"CarCapacityType\": \"t15\",\n  \"Units\": {\n    \"PositionFrom\": 1,\n    \"PositionTo\": 3,\n    \"Pallets\": 3,\n    \"Weight\": 401.079,\n    \"Cost\": 38866.65,\n    \"Boxes\": null\n  },\n  \"LoadingPoints\": [\n    {\n      \"OrderNumbers\": [\n        \"BL{{number}}\",\n        \"BL{{number}}\"\n      ],\n      \"Warehouse\": {\n         \"id\": \"60c342fc031f54989c4140a2\",\n        \"ForeignId\": null\n      },\n      \"AddressInfo\": null,\n      \"DateTime\": {\n        \"from\": \"{{consolidationDate}}T14:32:13\",\n                \"to\": \"{{consolidationDate}}T14:32:13\"\n      },\n      \"Status\": \"Scheduled\",\n      \"DateTimeArrived\": null,\n      \"DateTimeDeparted\": null\n    }\n  ],\n  \"UnloadingPoints\": [\n    {\n      \"OrderNumbers\": [\n        \"BL{{number}}\",\n        \"BL{{number}}\"\n      ],\n      \"Warehouse\": {\n         \"id\": \"{{unloadingWarehouse}}\",\n        \"ForeignId\": null\n      },\n      \"AddressInfo\": null,\n      \"DateTime\": {\n        \"from\": \"{{deliveryDate}}T14:32:13\",\n        \"to\": \"{{deliveryDate}}T14:32:13\"\n      },\n      \"Status\": \"Scheduled\",\n      \"DateTimeArrived\": null,\n      \"DateTimeDeparted\": null\n    }\n  ],\n  \"Orders\": [\n    {\n      \"Units\": {\n        \"PositionFrom\": 1,\n        \"PositionTo\": 1,\n        \"Pallets\": null,\n        \"Weight\": 308.301,\n        \"Cost\": 27668.97,\n        \"Boxes\": 25\n      },\n       \"number\": \"BL{{number}}\",\n        \"waybillNumber\": \"{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\"\n    },\n    {\n      \"Units\": {\n        \"PositionFrom\": 2,\n        \"PositionTo\": 2,\n        \"Pallets\": null,\n        \"Weight\": 54.258,\n        \"Cost\": 11197.68,\n        \"Boxes\": 7\n      },\n       \"number\": \"BL{{number}}\",\n        \"waybillNumber\": \"{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\",\n        \"type\": \"Transit\"\n    },\n    {\n      \"Units\": {\n        \"PositionFrom\": 3,\n        \"PositionTo\": 3,\n        \"Pallets\": null,\n        \"Weight\": 308.301,\n        \"Cost\": 27668.97,\n        \"Boxes\": 25\n      },\n       \"number\": \"BL{{number}}\",\n        \"waybillNumber\": \"{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\"\n    }\n  ],\n  \"Temperature\": {\n    \"From\": 2,\n    \"To\": 25\n  },\n  \"ServicesNeeded\": [\n    \"Basic\"\n  ],\n  \"comment\": \"{{comment}}\",\n  \"Version\": null,\n  \"Status\": null\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations"
											]
										}
									},
									"response": []
								},
								{
									"name": "Ошибка при попытке бронирования LTL на слот в прошлом",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"var moment = require('moment');\r",
													"pm.variables.set(\"currentDate - day\", moment().add(-1, 'day').format(\"YYYY-MM-DD\"));\r",
													"pm.variables.set(\"currentDate - a week\", moment().add(-1, 'week').format(\"YYYY-MM-DD\"));\r",
													"\r",
													"const number = pm.variables.replaceIn(\"{{$randomInt}}\");\r",
													"pm.variables.set(\"number\", number);\r",
													"\r",
													"const com = pm.variables.replaceIn(\"{{$randomCity}}\");\r",
													"pm.variables.set(\"comment\", com);\r",
													"\r",
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/slots?consolidationDateFrom=\" + pm.variables.get(\"currentDate - a week\") + \"&consolidationDateTo=\" + pm.variables.get(\"currentDate - day\") + \"&shippingRegionId=\" + pm.globals.get(\"MoscowShippingRegion\") + \"&UnloadingWarehouseId=\" + pm.globals.get(\"DmitrovUnloadingWarehouse\") + \"&carrierId=\" + pm.globals.get(\"FMCarrier\"),\r",
													"    method: \"GET\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"    },\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.expect(res.json()).to.not.be.empty;\r",
													"        pm.variables.set(\"slotId\", res.json()[1].id);\r",
													"        pm.variables.set(\"productType\", res.json()[1].productTypes[0]);\r",
													"        pm.variables.set(\"carrier\", res.json()[1].carrier.id);\r",
													"        pm.variables.set(\"client\", res.json()[1].client.id);\r",
													"        pm.variables.set(\"carType\", res.json()[1].carType);\r",
													"        pm.variables.set(\"unloadingWarehouse\", res.json()[1].unloadingWarehouse.id);\r",
													"        pm.variables.set(\"consolidationDate\", res.json()[1].consolidationDate);\r",
													"        pm.variables.set(\"deliveryDate\", res.json()[1].deliveryDate);\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что ошибка соответствует ожидаемой\", function () {\r",
													"     pm.expect(jsonData.error).to.eql(\"Дата отгрузки/выгрузки с не может быть меньше текущей даты\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tkFmOT}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"SlotId\": \"{{slotId}}\",\n  \"ForeignId\": null,\n  \"ShippingType\": \"LTL\",\n  \"ReservationType\": \"Basic\",\n  \"CarType\": \"{{carType}}\",\n  \"Carrier\": {\n    \"id\": \"{{carrier}}\",\n    \"ForeignId\": null\n  },\n  \"Client\": {\n   \"id\": \"{{client}}\",\n    \"ForeignId\": null\n  },\n  \"ProductType\": \"{{productType}}\",\n  \"CarCapacityType\": \"t15\",\n  \"Units\": {\n    \"PositionFrom\": 1,\n    \"PositionTo\": 3,\n    \"Pallets\": 3,\n    \"Weight\": 401.079,\n    \"Cost\": 38866.65,\n    \"Boxes\": null\n  },\n  \"LoadingPoints\": [\n    {\n      \"OrderNumbers\": [\n        \"BL00000{{number}}\",\n        \"BB00000{{number}}\"\n      ],\n      \"Warehouse\": {\n         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\n        \"ForeignId\": null\n      },\n      \"AddressInfo\": null,\n      \"DateTime\": {\n        \"from\": \"{{consolidationDate}}T14:32:13\",\n        \"to\": \"{{consolidationDate}}T14:32:13\"\n      },\n      \"Status\": \"Scheduled\",\n      \"DateTimeArrived\": null,\n      \"DateTimeDeparted\": null\n    }\n  ],\n  \"UnloadingPoints\": [\n    {\n      \"OrderNumbers\": [\n        \"BL00000{{number}}\",\n        \"BB00000{{number}}\"\n      ],\n      \"Warehouse\": {\n         \"id\": \"{{unloadingWarehouse}}\",\n        \"ForeignId\": null\n      },\n      \"AddressInfo\": null,\n      \"DateTime\": {\n        \"from\": \"{{deliveryDate}}T14:32:13\",\n        \"to\": \"{{deliveryDate}}T14:32:13\"\n      },\n      \"Status\": \"Scheduled\",\n      \"DateTimeArrived\": null,\n      \"DateTimeDeparted\": null\n    }\n  ],\n  \"Orders\": [\n    {\n      \"Units\": {\n        \"PositionFrom\": 1,\n        \"PositionTo\": 1,\n        \"Pallets\": null,\n        \"Weight\": 308.301,\n        \"Cost\": 27668.97,\n        \"Boxes\": 25\n      },\n       \"number\": \"BL00000{{number}}\",\n        \"waybillNumber\": \"{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\"\n    },\n    {\n      \"Units\": {\n        \"PositionFrom\": 2,\n        \"PositionTo\": 2,\n        \"Pallets\": null,\n        \"Weight\": 54.258,\n        \"Cost\": 11197.68,\n        \"Boxes\": 7\n      },\n       \"number\": \"BL00000{{number}}\",\n        \"waybillNumber\": \"{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\",\n        \"type\": \"Transit\"\n    },\n    {\n      \"Units\": {\n        \"PositionFrom\": 3,\n        \"PositionTo\": 3,\n        \"Pallets\": null,\n        \"Weight\": 308.301,\n        \"Cost\": 27668.97,\n        \"Boxes\": 25\n      },\n       \"number\": \"BL00000{{number}}\",\n        \"waybillNumber\": \"{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\"\n    }\n  ],\n  \"Temperature\": {\n    \"From\": 2,\n    \"To\": 25\n  },\n  \"ServicesNeeded\": [\n    \"Basic\"\n  ],\n  \"comment\": \"{{comment}}\",\n  \"Version\": null,\n  \"Status\": null\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Get",
							"item": [
								{
									"name": "Просмотр информации о бронированиях ЛТЛ на слот по фильтру от ГО",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 1,\r",
													"    \"Pallets\": 1,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"const statusName = \"InProgress\";\r",
													"\r",
													"pm.test(\"Проверка, что выборка содержит хотя бы одно бронирование\", function () {\r",
													"  pm.expect(jsonData).to.be.an('array').to.include.any.keys('0');\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что есть бронирования ЛТЛ на слот\", function () {\r",
													"    anyReservationNode = jsonData.find(x => x.status === statusName);\r",
													"    pm.expect(anyReservationNode.shippingType).to.contain.oneOf([\"LTL\", \"Pooling\"]);\r",
													"    pm.expect(anyReservationNode.slotId).not.to.be.a(\"null\");\r",
													"   });\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{goPoolingOT}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations?loadingDateFrom={{currentDate}}&loadingDateTo={{currentDate + a week}}&unloadingDateFrom={{currentDate}}&unloadingDateTo={{currentDate + a week}}&status=InProgress&carrierId={{carrier}}&clientId={{client}}&shippingRegionId={{MoscowShippingRegion}}&shippingType=LTL",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations"
											],
											"query": [
												{
													"key": "loadingDateFrom",
													"value": "{{currentDate}}"
												},
												{
													"key": "loadingDateTo",
													"value": "{{currentDate + a week}}"
												},
												{
													"key": "unloadingDateFrom",
													"value": "{{currentDate}}"
												},
												{
													"key": "unloadingDateTo",
													"value": "{{currentDate + a week}}"
												},
												{
													"key": "status",
													"value": "InProgress"
												},
												{
													"key": "carrierId",
													"value": "{{carrier}}"
												},
												{
													"key": "clientId",
													"value": "{{client}}"
												},
												{
													"key": "shippingRegionId",
													"value": "{{MoscowShippingRegion}}"
												},
												{
													"key": "shippingType",
													"value": "LTL"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Просмотр информации о бронированиях ЛТЛ на слот по фильтру от TK",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 1,\r",
													"    \"Pallets\": 1,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"const isStatus = \"InProgress\";\r",
													"\r",
													"pm.test(\"Проверка, что выборка содержит хотя бы одно бронирование\", function () {\r",
													"  pm.expect(jsonData).to.be.an('array').to.include.any.keys('0');\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что есть бронирования ЛТЛ\", function () {\r",
													"    anyReservationNode = jsonData.find(x => x.status === isStatus);\r",
													"    pm.expect(anyReservationNode.shippingType).to.contain.oneOf([\"LTL\", \"Pooling\"]);\r",
													"    pm.expect(anyReservationNode.slotId).not.to.be.a(\"null\");\r",
													"   });\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tkFmOT}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations?loadingDateFrom={{currentDate}}&loadingDateTo={{currentDate + a week}}&unloadingDateFrom={{currentDate}}&unloadingDateTo={{currentDate + a week}}&status=InProgress&carrierId={{carrier}}&clientId={{client}}&shippingRegionId={{MoscowShippingRegion}}&shippingType=Pooling",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations"
											],
											"query": [
												{
													"key": "loadingDateFrom",
													"value": "{{currentDate}}"
												},
												{
													"key": "loadingDateTo",
													"value": "{{currentDate + a week}}"
												},
												{
													"key": "unloadingDateFrom",
													"value": "{{currentDate}}"
												},
												{
													"key": "unloadingDateTo",
													"value": "{{currentDate + a week}}"
												},
												{
													"key": "status",
													"value": "InProgress"
												},
												{
													"key": "carrierId",
													"value": "{{carrier}}"
												},
												{
													"key": "clientId",
													"value": "{{client}}"
												},
												{
													"key": "shippingRegionId",
													"value": "{{MoscowShippingRegion}}"
												},
												{
													"key": "shippingType",
													"value": "Pooling"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Просмотр информации о бронированиях ЛТЛ на слот по фильтру от TС",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 1,\r",
													"    \"Pallets\": 1,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"const isStatus = \"InProgress\";\r",
													"\r",
													"pm.test(\"Проверка, что выборка содержит хотя бы одно бронирование\", function () {\r",
													"  pm.expect(jsonData).to.be.an('array').to.include.any.keys('0');\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что есть бронирования ЛТЛ на слот\", function () {\r",
													"    anyReservationNode = jsonData.find(x => x.status === isStatus);\r",
													"    pm.expect(anyReservationNode.shippingType).to.contain.oneOf([\"LTL\", \"Pooling\"]);\r",
													"    pm.expect(anyReservationNode.slotId).not.to.be.a(\"null\");\r",
													"   });\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tsTanderOT}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations?loadingDateFrom={{currentDate}}&loadingDateTo={{currentDate + a week}}&unloadingDateFrom={{currentDate}}&unloadingDateTo={{currentDate + a week}}&status=InProgress&carrierId={{carrier}}&clientId={{client}}&shippingRegionId={{MoscowShippingRegion}}&shippingType=Pooling",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations"
											],
											"query": [
												{
													"key": "loadingDateFrom",
													"value": "{{currentDate}}"
												},
												{
													"key": "loadingDateTo",
													"value": "{{currentDate + a week}}"
												},
												{
													"key": "unloadingDateFrom",
													"value": "{{currentDate}}"
												},
												{
													"key": "unloadingDateTo",
													"value": "{{currentDate + a week}}"
												},
												{
													"key": "status",
													"value": "InProgress"
												},
												{
													"key": "carrierId",
													"value": "{{carrier}}"
												},
												{
													"key": "clientId",
													"value": "{{client}}"
												},
												{
													"key": "shippingRegionId",
													"value": "{{MoscowShippingRegion}}"
												},
												{
													"key": "shippingType",
													"value": "Pooling"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Просмотр информации о бронировании по ID от ГО",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 1,\r",
													"    \"Pallets\": 1,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ID\", res.json().id);\r",
													"        pm.variables.set(\"slotId\", res.json().slotId);\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"const isStatus = \"InProgress\";\r",
													"\r",
													"pm.test(\"Проверка, что полученное бронирование соответствует запрашиваемым данным\", function () {\r",
													"   pm.expect(jsonData.slotId).to.eql(pm.variables.get(\"slotId\"));\r",
													"   pm.expect(jsonData.id).to.eql(pm.variables.get(\"ID\"));\r",
													"   pm.expect(jsonData.status).to.eql(isStatus);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{goPoolingOT}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/{{ID}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"{{ID}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Пустая выборка при попытке просмотра информации о бронировании по номеру от ТС",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 1,\r",
													"    \"Pallets\": 1,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ReservationNumber\", res.json().number);\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Проверка что статус код 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка что в ответе нет тела\", function () {\r",
													"    pm.response.to.not.be.withBody;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tsTanderOT}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/number/{{ReservationNumber}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"number",
												"{{ReservationNumber}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var moment = require('moment');",
											"pm.variables.set(\"currentDate\", moment().add(1, 'week').format(\"YYYY-MM-DD\"));",
											"pm.variables.set(\"currentDate + a week\", moment().add(2, 'week').format(\"YYYY-MM-DD\"));",
											"",
											"const number = pm.variables.replaceIn(\"{{$randomInt}}\");",
											"pm.variables.set(\"number\", number);",
											"",
											"const com = pm.variables.replaceIn(\"{{$randomCity}}\");",
											"pm.variables.set(\"comment\", com);",
											"",
											"pm.sendRequest({",
											"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/slots?consolidationDateFrom=\" + pm.variables.get(\"currentDate\") + \"&consolidationDateTo=\" + pm.variables.get(\"currentDate + a week\") + \"&shippingRegionId=\" + pm.globals.get(\"MoscowShippingRegion\") + \"&UnloadingWarehouseId=\" + pm.globals.get(\"IvanovoUnloadingWarehouse\") + \"&carrierId=\" + pm.globals.get(\"FMCarrier\"),",
											"    method: \"GET\",",
											"    header: {",
											"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),",
											"    },",
											"},",
											"    function (err, res) {",
											"        console.log(res.json());",
											"        pm.expect(res.status).to.eql(\"OK\");",
											"        pm.expect(res.json()).to.not.be.empty;",
											"        pm.variables.set(\"slotId\", res.json()[1].id);",
											"        pm.variables.set(\"productType\", res.json()[1].productTypes[0]);",
											"        pm.variables.set(\"carrier\", res.json()[1].carrier.id);",
											"        pm.variables.set(\"client\", res.json()[1].client.id);",
											"        pm.variables.set(\"carType\", res.json()[1].carType);",
											"        pm.variables.set(\"unloadingWarehouse\", res.json()[1].unloadingWarehouse.id);",
											"        pm.variables.set(\"consolidationDate\", res.json()[1].consolidationDate);",
											"        pm.variables.set(\"departureDate\", res.json()[1].departureDate); ",
											"        pm.variables.set(\"deliveryDate\", res.json()[1].deliveryDate);",
											"        pm.variables.set(\"deliveryDate\", res.json()[1].deliveryDate);",
											"    });"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Update",
							"item": [
								{
									"name": "Изменение бронирования ЛТЛ на слот, ТН и ТТН на статусе Исполняется",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 3,\r",
													"    \"Pallets\": 3,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 2,\r",
													"        \"PositionTo\": 2,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 3,\r",
													"        \"PositionTo\": 3,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ID\", res.json().id);\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Проверка, что бронирование изменено\", function () {\r",
													"  pm.expect(jsonData.id).to.eql(pm.variables.get(\"ID\"));\r",
													"  pm.expect(jsonData.version).to.be.oneOf([2,3]);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что слот бронирования определен\", function () {\r",
													"  pm.expect(jsonData.slotId).to.eql(pm.variables.get(\"slotId\"));\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что ТТН добавлен\", function () { \r",
													"    pm.expect(jsonData.orders[0].productTransportWaybill).to.eql(\"432447\");\r",
													"    pm.expect(jsonData.orders[1].productTransportWaybill).to.eql(\"432667\");\r",
													"    pm.expect(jsonData.orders[2].productTransportWaybill).to.eql(\"432997\");\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{goPoolingOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"SlotId\": \"{{slotId}}\",\n  \"ForeignId\": null,\n  \"ShippingType\": \"LTL\",\n  \"ReservationType\": \"Basic\",\n  \"CarType\": \"{{carType}}\",\n  \"Carrier\": {\n    \"id\": \"{{carrier}}\",\n    \"ForeignId\": null\n  },\n  \"Client\": {\n   \"id\": \"{{client}}\",\n    \"ForeignId\": null\n  },\n  \"ProductType\": \"{{productType}}\",\n  \"CarCapacityType\": \"t15\",\n  \"Units\": {\n    \"PositionFrom\": 1,\n    \"PositionTo\": 3,\n    \"Pallets\": 3,\n    \"Weight\": 401.079,\n    \"Cost\": 38866.65,\n    \"Boxes\": null\n  },\n  \"LoadingPoints\": [\n    {\n      \"OrderNumbers\": [\n        \"BL03000{{number}}\",\n        \"BK03000{{number}}\"\n      ],\n      \"Warehouse\": {\n         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\n        \"ForeignId\": null\n      },\n      \"AddressInfo\": null,\n      \"DateTime\": {\n        \"from\": \"{{consolidationDate}}T14:32:13\",\n        \"to\": \"{{consolidationDate}}T14:32:13\"\n      },\n      \"Status\": \"Scheduled\",\n      \"DateTimeArrived\": null,\n      \"DateTimeDeparted\": null\n    }\n  ],\n  \"UnloadingPoints\": [\n    {\n      \"OrderNumbers\": [\n        \"BL03000{{number}}\",\n        \"BK03000{{number}}\"\n      ],\n      \"Warehouse\": {\n         \"id\": \"{{unloadingWarehouse}}\",\n        \"ForeignId\": null\n      },\n      \"AddressInfo\": null,\n      \"DateTime\": {\n        \"from\": \"{{deliveryDate}}T14:32:13\",\n        \"to\": \"{{deliveryDate}}T14:32:13\"\n      },\n      \"Status\": \"Scheduled\",\n      \"DateTimeArrived\": null,\n      \"DateTimeDeparted\": null\n    }\n  ],\n  \"Orders\": [\n    {\n      \"Units\": {\n        \"PositionFrom\": 1,\n        \"PositionTo\": 1,\n        \"Pallets\": null,\n        \"Weight\": 308.301,\n        \"Cost\": 27668.97,\n        \"Boxes\": 25\n      },\n       \"number\": \"BL03000{{number}}\",\n        \"waybillNumber\": \"A{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\",\n        \"ProductTransportWaybill\": \"432447\"\n    },\n    {\n      \"Units\": {\n        \"PositionFrom\": 2,\n        \"PositionTo\": 2,\n        \"Pallets\": null,\n        \"Weight\": 54.258,\n        \"Cost\": 11197.68,\n        \"Boxes\": 7\n      },\n       \"number\": \"BK03000{{number}}\",\n        \"waybillNumber\": \"B{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\",\n        \"ProductTransportWaybill\": \"432667\",\n        \"type\": \"Transit\"\n    },\n    {\n      \"Units\": {\n        \"PositionFrom\": 3,\n        \"PositionTo\": 3,\n        \"Pallets\": null,\n        \"Weight\": 308.301,\n        \"Cost\": 27668.97,\n        \"Boxes\": 25\n      },\n       \"number\": \"BK03000{{number}}\",\n        \"waybillNumber\": \"C{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\",\n        \"ProductTransportWaybill\": \"432997\"\n    }\n  ],\n  \"Temperature\": {\n    \"From\": 2,\n    \"To\": 25\n  },\n  \"ServicesNeeded\": [\n    \"Basic\"\n  ],\n  \"comment\": \"{{comment}}\",\n  \"Version\": null,\n  \"Status\": null\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/{{ID}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"{{ID}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Изменение бронирования ЛТЛ на слот, Units на статусе Исполняется",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const PalletsCount = pm.variables.set(\"PalletsCount\", _.random (4,9));\r",
													"//console.log(pm.variables.get(\"PalletsCount\"));\r",
													"\r",
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 3,\r",
													"    \"Pallets\": 3,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 2,\r",
													"        \"PositionTo\": 2,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 3,\r",
													"        \"PositionTo\": 3,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ID\", res.json().id);\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Проверка, что бронирование изменено\", function () {\r",
													"pm.expect(jsonData.id).to.eql(pm.variables.get(\"ID\"));\r",
													"  pm.expect(jsonData.version).to.be.oneOf([2,3]);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что слот бронирования определен\", function () {\r",
													"    pm.expect(jsonData.slotId).to.eql(pm.variables.get(\"slotId\"));\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что  Units изменены\", function () { \r",
													"    pm.expect(jsonData.units.positionTo).to.eql(pm.variables.get(\"PalletsCount\"));\r",
													"    pm.expect(jsonData.orders[3].units.positionTo).to.eql(pm.variables.get(\"PalletsCount\"));\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{goPoolingOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"SlotId\": \"{{slotId}}\",\n  \"ForeignId\": null,\n  \"ShippingType\": \"LTL\",\n  \"ReservationType\": \"Basic\",\n  \"CarType\": \"{{carType}}\",\n  \"Carrier\": {\n    \"id\": \"{{carrier}}\",\n    \"ForeignId\": null\n  },\n  \"Client\": {\n   \"id\": \"{{client}}\",\n    \"ForeignId\": null\n  },\n  \"ProductType\": \"{{productType}}\",\n  \"CarCapacityType\": \"t15\",\n  \"Units\": {\n    \"PositionFrom\": 1,\n    \"PositionTo\": {{PalletsCount}},\n    \"Pallets\": {{PalletsCount}},\n    \"Weight\": 410.079,\n    \"Cost\": 89000.65,\n    \"Boxes\": 8\n  },\n  \"LoadingPoints\": [\n    {\n      \"OrderNumbers\": [\n        \"BL03000{{number}}\",\n        \"BK03000{{number}}\"\n      ],\n      \"Warehouse\": {\n         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\n        \"ForeignId\": null\n      },\n      \"AddressInfo\": null,\n      \"DateTime\": {\n        \"from\": \"{{consolidationDate}}T14:32:13\",\n        \"to\": \"{{consolidationDate}}T14:32:13\"\n      },\n      \"Status\": \"Scheduled\",\n      \"DateTimeArrived\": null,\n      \"DateTimeDeparted\": null\n    }\n  ],\n  \"UnloadingPoints\": [\n    {\n      \"OrderNumbers\": [\n        \"BL03000{{number}}\",\n        \"BK03000{{number}}\"\n      ],\n      \"Warehouse\": {\n         \"id\": \"{{unloadingWarehouse}}\",\n        \"ForeignId\": null\n      },\n      \"AddressInfo\": null,\n      \"DateTime\": {\n        \"from\": \"{{deliveryDate}}T14:32:13\",\n        \"to\": \"{{deliveryDate}}T14:32:13\"\n      },\n      \"Status\": \"Scheduled\",\n      \"DateTimeArrived\": null,\n      \"DateTimeDeparted\": null\n    }\n  ],\n  \"Orders\": [\n    {\n      \"Units\": {\n        \"PositionFrom\": 1,\n        \"PositionTo\": 1,\n        \"Pallets\": null,\n        \"Weight\": 308.301,\n        \"Cost\": 27668.97,\n        \"Boxes\": 2\n      },\n       \"number\": \"BL03000{{number}}\",\n        \"waybillNumber\": \"{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\"\n    },\n    {\n      \"Units\": {\n        \"PositionFrom\": 2,\n        \"PositionTo\": 2,\n        \"Pallets\": null,\n        \"Weight\": 54.258,\n        \"Cost\": 11197.68,\n        \"Boxes\": 2\n      },\n       \"number\": \"BK03000{{number}}\",\n        \"waybillNumber\": \"B{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\",\n        \"type\": \"Transit\"\n    },\n    {\n      \"Units\": {\n        \"PositionFrom\": 3,\n        \"PositionTo\": 3,\n        \"Pallets\": null,\n        \"Weight\": 308.301,\n        \"Cost\": 27668.97,\n        \"Boxes\": 2\n      },\n       \"number\": \"BK03000{{number}}\",\n        \"waybillNumber\": \"{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\"\n    },\n     {\n      \"Units\": {\n        \"PositionFrom\": 4,\n        \"PositionTo\": {{PalletsCount}},\n        \"Pallets\": null,\n        \"Weight\": 10.301,\n        \"Cost\": 2700.97,\n        \"Boxes\": 2\n      },\n       \"number\": \"VB03000{{number}}\",\n        \"waybillNumber\": \"{{number}}\",\n        \"consignorNumber\": \"VB{{number}}\"\n    }\n  ],\n  \"Temperature\": {\n    \"From\": 2,\n    \"To\": 25\n  },\n  \"ServicesNeeded\": [\n    \"Basic\"\n  ],\n  \"comment\": \"{{comment}}\",\n  \"Version\": null,\n  \"Status\": null\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/{{ID}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"{{ID}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Ошибка при попытке изменения бронирования ЛТЛ на слот, Units на статусе Отменено ТК",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 3,\r",
													"    \"Pallets\": 3,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 2,\r",
													"        \"PositionTo\": 2,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 3,\r",
													"        \"PositionTo\": 3,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.variables.set(\"ID\", res.json().id);\r",
													"\r",
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations/\" + pm.variables.get(\"ID\") + \"/status\",\r",
													"    method: \"PUT\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"tkFmOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"    mode: 'raw',\r",
													"    raw: JSON.stringify({ \r",
													"        \"status\": \"CarrierCanceled\",\r",
													"        \"comment\": null\r",
													"\r",
													"})  \r",
													"    } \r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ID\", res.json().id);\r",
													"     }\r",
													"     )\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что ошибка соответствует ожидаемой\", function () {\r",
													"     pm.expect(jsonData.error).to.eql(\"Невозможно редактировать поле Orders в статусе CarrierCanceled, Невозможно редактировать поле Orders.Units.Pallets в статусе CarrierCanceled, Невозможно редактировать поле Orders.Units.Pallets в статусе CarrierCanceled, Невозможно редактировать поле Orders.WaybillNumber в статусе CarrierCanceled, Не...\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{goPoolingOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"SlotId\": \"{{slotId}}\",\n  \"ForeignId\": null,\n  \"ShippingType\": \"LTL\",\n  \"ReservationType\": \"Basic\",\n  \"CarType\": \"{{carType}}\",\n  \"Carrier\": {\n    \"id\": \"{{carrier}}\",\n    \"ForeignId\": null\n  },\n  \"Client\": {\n   \"id\": \"{{client}}\",\n    \"ForeignId\": null\n  },\n  \"ProductType\": \"{{productType}}\",\n  \"CarCapacityType\": \"t15\",\n  \"Units\": {\n    \"PositionFrom\": 1,\n    \"PositionTo\": 4,\n    \"Pallets\": 4,\n    \"Weight\": 410.079,\n    \"Cost\": 89000.65,\n    \"Boxes\": 4\n  },\n  \"LoadingPoints\": [\n    {\n      \"OrderNumbers\": [\n        \"BL03000{{number}}\",\n        \"BK03000{{number}}\"\n      ],\n      \"Warehouse\": {\n         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\n        \"ForeignId\": null\n      },\n      \"AddressInfo\": null,\n      \"DateTime\": {\n        \"from\": \"{{consolidationDate}}T14:32:13\",\n        \"to\": \"{{consolidationDate}}T14:32:13\"\n      },\n      \"Status\": \"Scheduled\",\n      \"DateTimeArrived\": null,\n      \"DateTimeDeparted\": null\n    }\n  ],\n  \"UnloadingPoints\": [\n    {\n      \"OrderNumbers\": [\n        \"BL03000{{number}}\",\n        \"BK03000{{number}}\"\n      ],\n      \"Warehouse\": {\n         \"id\": \"{{unloadingWarehouse}}\",\n        \"ForeignId\": null\n      },\n      \"AddressInfo\": null,\n      \"DateTime\": {\n        \"from\": \"{{deliveryDate}}T14:32:13\",\n        \"to\": \"{{deliveryDate}}T14:32:13\"\n      },\n      \"Status\": \"Scheduled\",\n      \"DateTimeArrived\": null,\n      \"DateTimeDeparted\": null\n    }\n  ],\n  \"Orders\": [\n    {\n      \"Units\": {\n        \"PositionFrom\": 1,\n        \"PositionTo\": 1,\n        \"Pallets\": null,\n        \"Weight\": 308.301,\n        \"Cost\": 27668.97,\n        \"Boxes\": 25\n      },\n       \"number\": \"BL03000{{number}}\",\n        \"waybillNumber\": \"{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\"\n    },\n    {\n      \"Units\": {\n        \"PositionFrom\": 2,\n        \"PositionTo\": 2,\n        \"Pallets\": null,\n        \"Weight\": 54.258,\n        \"Cost\": 11197.68,\n        \"Boxes\": 7\n      },\n       \"number\": \"BK03000{{number}}\",\n        \"waybillNumber\": \"B{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\",\n        \"type\": \"Transit\"\n    },\n    {\n      \"Units\": {\n        \"PositionFrom\": 3,\n        \"PositionTo\": 3,\n        \"Pallets\": null,\n        \"Weight\": 308.301,\n        \"Cost\": 27668.97,\n        \"Boxes\": 25\n      },\n       \"number\": \"BK03000{{number}}\",\n        \"waybillNumber\": \"{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\"\n    },\n     {\n      \"Units\": {\n        \"PositionFrom\": 4,\n        \"PositionTo\": 4,\n        \"Pallets\": null,\n        \"Weight\": 10.301,\n        \"Cost\": 2700.97,\n        \"Boxes\": 1\n      },\n       \"number\": \"VB03000{{number}}\",\n        \"waybillNumber\": \"{{number}}\",\n        \"consignorNumber\": \"VB{{number}}\"\n    }\n  ],\n  \"ServicesNeeded\": [\n    \"Basic\"\n  ],\n  \"comment\": \"{{comment}}\",\n  \"Version\": null,\n  \"Status\": null\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/{{ID}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"{{ID}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Ошибка при попытке изменения бронирования ЛТЛ на слот, ТН и ТТН на статусе Отменено",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 3,\r",
													"    \"Pallets\": 3,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 2,\r",
													"        \"PositionTo\": 2,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 3,\r",
													"        \"PositionTo\": 3,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ID\", res.json().id);\r",
													"\r",
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations/\" + pm.variables.get(\"ID\") + \"/status\",\r",
													"    method: \"PUT\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"    mode: 'raw',\r",
													"    raw: JSON.stringify({ \r",
													"        \"status\": \"Canceled\",\r",
													"        \"comment\": null\r",
													"\r",
													"})  \r",
													"    } \r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.json().status).to.be.eql(\"Canceled\");\r",
													"        pm.variables.set(\"ID\", res.json().id);\r",
													"     }\r",
													"     )\r",
													"\r",
													"\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что ошибка соответствует ожидаемой\", function () {\r",
													"     pm.expect(jsonData.error).to.eql(\"Невозможно редактировать поле Orders.Units.Pallets в статусе Canceled, Невозможно редактировать поле Orders.WaybillNumber в статусе Canceled, Невозможно редактировать поле Orders.ProductTransportWaybill в статусе Canceled, Невозможно редактировать поле Orders.Units.Pallets в статусе Canceled, Невозм...\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{goPoolingOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"SlotId\": \"{{slotId}}\",\n  \"ForeignId\": null,\n  \"ShippingType\": \"LTL\",\n  \"ReservationType\": \"Basic\",\n  \"CarType\": \"{{carType}}\",\n  \"Carrier\": {\n    \"id\": \"{{carrier}}\",\n    \"ForeignId\": null\n  },\n  \"Client\": {\n   \"id\": \"{{client}}\",\n    \"ForeignId\": null\n  },\n  \"ProductType\": \"{{productType}}\",\n  \"CarCapacityType\": \"t15\",\n  \"Units\": {\n    \"PositionFrom\": 1,\n    \"PositionTo\": 3,\n    \"Pallets\": 3,\n    \"Weight\": 401.079,\n    \"Cost\": 38866.65,\n    \"Boxes\": null\n  },\n  \"LoadingPoints\": [\n    {\n      \"OrderNumbers\": [\n        \"BL03000{{number}}\",\n        \"BK03000{{number}}\"\n      ],\n      \"Warehouse\": {\n         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\n        \"ForeignId\": null\n      },\n      \"AddressInfo\": null,\n      \"DateTime\": {\n        \"from\": \"{{consolidationDate}}T14:32:13\",\n        \"to\": \"{{consolidationDate}}T14:32:13\"\n      },\n      \"Status\": \"Scheduled\",\n      \"DateTimeArrived\": null,\n      \"DateTimeDeparted\": null\n    }\n  ],\n  \"UnloadingPoints\": [\n    {\n      \"OrderNumbers\": [\n        \"BL03000{{number}}\",\n        \"BK03000{{number}}\"\n      ],\n      \"Warehouse\": {\n         \"id\": \"{{unloadingWarehouse}}\",\n        \"ForeignId\": null\n      },\n      \"AddressInfo\": null,\n      \"DateTime\": {\n        \"from\": \"{{deliveryDate}}T14:32:13\",\n        \"to\": \"{{deliveryDate}}T14:32:13\"\n      },\n      \"Status\": \"Scheduled\",\n      \"DateTimeArrived\": null,\n      \"DateTimeDeparted\": null\n    }\n  ],\n  \"Orders\": [\n    {\n      \"Units\": {\n        \"PositionFrom\": 1,\n        \"PositionTo\": 1,\n        \"Pallets\": null,\n        \"Weight\": 308.301,\n        \"Cost\": 27668.97,\n        \"Boxes\": 25\n      },\n       \"number\": \"BL03000{{number}}\",\n        \"waybillNumber\": \"A{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\",\n        \"ProductTransportWaybill\": \"432447\"\n    },\n    {\n      \"Units\": {\n        \"PositionFrom\": 2,\n        \"PositionTo\": 2,\n        \"Pallets\": null,\n        \"Weight\": 54.258,\n        \"Cost\": 11197.68,\n        \"Boxes\": 7\n      },\n       \"number\": \"BK03000{{number}}\",\n        \"waybillNumber\": \"B{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\",\n        \"ProductTransportWaybill\": \"432667\",\n        \"type\": \"Transit\"\n    },\n    {\n      \"Units\": {\n        \"PositionFrom\": 3,\n        \"PositionTo\": 3,\n        \"Pallets\": null,\n        \"Weight\": 308.301,\n        \"Cost\": 27668.97,\n        \"Boxes\": 25\n      },\n       \"number\": \"BK03000{{number}}\",\n        \"waybillNumber\": \"C{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\",\n        \"ProductTransportWaybill\": \"432997\"\n    }\n  ],\n  \"ServicesNeeded\": [\n    \"Basic\"\n  ],\n  \"comment\": \"{{comment}}\",\n  \"Version\": null,\n  \"Status\": null\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/{{ID}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"{{ID}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Ошибка при попытке изменения номера заказа, не прошедшего валидацию Тандера",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 3,\r",
													"    \"Pallets\": 3,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 2,\r",
													"        \"PositionTo\": 2,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 3,\r",
													"        \"PositionTo\": 3,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ID\", res.json().id); \r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что ошибка соответствует ожидаемой\", function () {\r",
													"     pm.expect(jsonData.error).to.eql(\"В одном из заказов неверно заполнен \\\"Номер заказа\\\"\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{goPoolingOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"SlotId\": \"{{slotId}}\",\n  \"ForeignId\": null,\n  \"ShippingType\": \"LTL\",\n  \"ReservationType\": \"Basic\",\n  \"CarType\": \"{{carType}}\",\n  \"Carrier\": {\n    \"id\": \"{{carrier}}\",\n    \"ForeignId\": null\n  },\n  \"Client\": {\n   \"id\": \"{{client}}\",\n    \"ForeignId\": null\n  },\n  \"ProductType\": \"{{productType}}\",\n  \"CarCapacityType\": \"t15\",\n  \"Units\": {\n    \"PositionFrom\": 1,\n    \"PositionTo\": 3,\n    \"Pallets\": 3,\n    \"Weight\": 401.079,\n    \"Cost\": 38866.65,\n    \"Boxes\": null\n  },\n  \"LoadingPoints\": [\n    {\n      \"OrderNumbers\": [\n        \"03000{{number}}\",\n        \"03000{{number}}\"\n      ],\n      \"Warehouse\": {\n         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\n        \"ForeignId\": null\n      },\n      \"AddressInfo\": null,\n      \"DateTime\": {\n        \"from\": \"{{consolidationDate}}T13:32:13\",\n        \"to\": \"{{consolidationDate}}T13:32:13\"\n      },\n      \"Status\": \"Scheduled\",\n      \"DateTimeArrived\": null,\n      \"DateTimeDeparted\": null\n    }\n  ],\n  \"UnloadingPoints\": [\n    {\n      \"OrderNumbers\": [\n        \"03000{{number}}\",\n        \"03000{{number}}\"\n      ],\n      \"Warehouse\": {\n         \"id\": \"{{unloadingWarehouse}}\",\n        \"ForeignId\": null\n      },\n      \"AddressInfo\": null,\n      \"DateTime\": {\n        \"from\": \"{{deliveryDate}}T14:32:13\",\n        \"to\": \"{{deliveryDate}}T14:32:13\"\n      },\n      \"Status\": \"Scheduled\",\n      \"DateTimeArrived\": null,\n      \"DateTimeDeparted\": null\n    }\n  ],\n  \"Orders\": [\n    {\n      \"Units\": {\n        \"PositionFrom\": 1,\n        \"PositionTo\": 1,\n        \"Pallets\": null,\n        \"Weight\": 308.301,\n        \"Cost\": 27668.97,\n        \"Boxes\": 25\n      },\n       \"number\": \"03000{{number}}\",\n        \"waybillNumber\": \"{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\"\n    },\n    {\n      \"Units\": {\n        \"PositionFrom\": 2,\n        \"PositionTo\": 2,\n        \"Pallets\": null,\n        \"Weight\": 54.258,\n        \"Cost\": 11197.68,\n        \"Boxes\": 7\n      },\n       \"number\": \"03000{{number}}\",\n        \"waybillNumber\": \"{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\",\n        \"type\": \"Transit\"\n    },\n    {\n      \"Units\": {\n        \"PositionFrom\": 3,\n        \"PositionTo\": 3,\n        \"Pallets\": null,\n        \"Weight\": 308.301,\n        \"Cost\": 27668.97,\n        \"Boxes\": 25\n      },\n       \"number\": \"03000{{number}}\",\n        \"waybillNumber\": \"{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\"\n    }\n  ],\n  \"Temperature\": {\n    \"From\": 2,\n    \"To\": 25\n  },\n  \"ServicesNeeded\": [\n    \"Basic\"\n  ],\n  \"comment\": \"{{comment}}\",\n  \"Version\": null,\n  \"Status\": null\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/{{ID}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"{{ID}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Ошибка при попытке изменения количества паллет",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 3,\r",
													"    \"Pallets\": 3,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 2,\r",
													"        \"PositionTo\": 2,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 3,\r",
													"        \"PositionTo\": 3,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ID\", res.json().id); \r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что ошибка соответствует ожидаемой\", function () {\r",
													"     pm.expect(jsonData.error).to.eql(\"Убедитесь, что все паллеты пронумерованы\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{goPoolingOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"SlotId\": \"{{slotId}}\",\n  \"ForeignId\": null,\n  \"ShippingType\": \"LTL\",\n  \"ReservationType\": \"Basic\",\n  \"CarType\": \"{{carType}}\",\n  \"Carrier\": {\n    \"id\": \"{{carrier}}\",\n    \"ForeignId\": null\n  },\n  \"Client\": {\n   \"id\": \"{{client}}\",\n    \"ForeignId\": null\n  },\n  \"ProductType\": \"{{productType}}\",\n  \"CarCapacityType\": \"t15\",\n  \"Units\": {\n    \"PositionFrom\": 1,\n    \"PositionTo\": 3,\n    \"Pallets\": 3,\n    \"Weight\": 401.079,\n    \"Cost\": 38866.65,\n    \"Boxes\": null\n  },\n  \"LoadingPoints\": [\n    {\n      \"OrderNumbers\": [\n        \"BL03000{{number}}\",\n        \"BK03000{{number}}\"\n      ],\n      \"Warehouse\": {\n         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\n        \"ForeignId\": null\n      },\n      \"AddressInfo\": null,\n      \"DateTime\": {\n        \"from\": \"{{consolidationDate}}T13:32:13\",\n        \"to\": \"{{consolidationDate}}T13:32:13\"\n      },\n      \"Status\": \"Scheduled\",\n      \"DateTimeArrived\": null,\n      \"DateTimeDeparted\": null\n    }\n  ],\n  \"UnloadingPoints\": [\n    {\n      \"OrderNumbers\": [\n        \"BL03000{{number}}\",\n        \"BK03000{{number}}\"\n      ],\n      \"Warehouse\": {\n         \"id\": \"{{unloadingWarehouse}}\",\n        \"ForeignId\": null\n      },\n      \"AddressInfo\": null,\n      \"DateTime\": {\n        \"from\": \"{{deliveryDate}}T14:32:13\",\n        \"to\": \"{{deliveryDate}}T14:32:13\"\n      },\n      \"Status\": \"Scheduled\",\n      \"DateTimeArrived\": null,\n      \"DateTimeDeparted\": null\n    }\n  ],\n  \"Orders\": [\n    {\n      \"Units\": {\n        \"PositionFrom\": 1,\n        \"PositionTo\": 1,\n        \"Pallets\": null,\n        \"Weight\": 308.301,\n        \"Cost\": 27668.97,\n        \"Boxes\": 25\n      },\n       \"number\": \"BL03000{{number}}\",\n        \"waybillNumber\": \"{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\"\n    },\n    {\n      \"Units\": {\n        \"PositionFrom\": 2,\n        \"PositionTo\": 2,\n        \"Pallets\": null,\n        \"Weight\": 54.258,\n        \"Cost\": 11197.68,\n        \"Boxes\": 7\n      },\n       \"number\": \"BK03000{{number}}\",\n        \"waybillNumber\": \"{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\",\n        \"type\": \"Transit\"\n    }\n  ],\n  \"Temperature\": {\n    \"From\": 2,\n    \"To\": 25\n  },\n  \"ServicesNeeded\": [\n    \"Basic\"\n  ],\n  \"comment\": \"{{comment}}\",\n  \"Version\": null,\n  \"Status\": null\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/{{ID}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"{{ID}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var moment = require('moment');",
											"pm.variables.set(\"currentDate\", moment().add(1, 'week').format(\"YYYY-MM-DD\"));",
											"pm.variables.set(\"currentDate + a week\", moment().add(2, 'week').format(\"YYYY-MM-DD\"));",
											"",
											"const number = pm.variables.replaceIn(\"{{$randomInt}}\");",
											"pm.variables.set(\"number\", number);",
											"",
											"const com = pm.variables.replaceIn(\"{{$randomCity}}\");",
											"pm.variables.set(\"comment\", com);",
											"",
											"pm.sendRequest({",
											"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/slots?consolidationDateFrom=\" + pm.variables.get(\"currentDate\") + \"&consolidationDateTo=\" + pm.variables.get(\"currentDate + a week\") + \"&shippingRegionId=\" + pm.globals.get(\"MoscowShippingRegion\") + \"&UnloadingWarehouseId=\" + pm.globals.get(\"VolgogradUnloadingWarehouse\") + \"&carrierId=\" + pm.globals.get(\"FMCarrier\"),",
											"    method: \"GET\",",
											"    header: {",
											"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),",
											"    },",
											"},",
											"    function (err, res) {",
											"        console.log(res.json());",
											"        pm.expect(res.status).to.eql(\"OK\");",
											"        pm.expect(res.json()).to.not.be.empty;",
											"        pm.variables.set(\"slotId\", res.json()[1].id);",
											"        pm.variables.set(\"productType\", res.json()[1].productTypes[0]);",
											"        pm.variables.set(\"carrier\", res.json()[1].carrier.id);",
											"        pm.variables.set(\"client\", res.json()[1].client.id);",
											"        pm.variables.set(\"carType\", res.json()[1].carType);",
											"        pm.variables.set(\"unloadingWarehouse\", res.json()[1].unloadingWarehouse.id);",
											"        pm.variables.set(\"consolidationDate\", res.json()[1].consolidationDate);",
											"         pm.variables.set(\"departureDate\", res.json()[1].departureDate); ",
											"        pm.variables.set(\"deliveryDate\", res.json()[1].deliveryDate);",
											"        pm.variables.set(\"deliveryDate\", res.json()[1].deliveryDate);",
											"    });",
											"",
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Update by number",
							"item": [
								{
									"name": "Изменение бронирования ЛТЛ на слот, пулинг набран",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 3,\r",
													"    \"Pallets\": 3,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 2,\r",
													"        \"PositionTo\": 2,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 3,\r",
													"        \"PositionTo\": 3,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ReservationNumber\", res.json().number);\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Проверка, что бронирование изменено\", function () {\r",
													"pm.expect(jsonData.number).to.eql(pm.variables.get(\"ReservationNumber\"));\r",
													"  pm.expect(jsonData.version).to.be.oneOf([2,3]);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что слот бронирования определен\", function () {\r",
													"  pm.expect(jsonData.slotId).to.eql(pm.variables.get(\"slotId\"));\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что тип бронирования Pooling\", function () { \r",
													"    pm.expect(jsonData.shippingType).to.eql(\"Pooling\");\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{goPoolingOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"SlotId\": \"{{slotId}}\",\n  \"ForeignId\": null,\n  \"ShippingType\": \"LTL\",\n  \"ReservationType\": \"Basic\",\n  \"CarType\": \"{{carType}}\",\n  \"Carrier\": {\n    \"id\": \"{{carrier}}\",\n    \"ForeignId\": null\n  },\n  \"Client\": {\n   \"id\": \"{{client}}\",\n    \"ForeignId\": null\n  },\n  \"ProductType\": \"{{productType}}\",\n  \"CarCapacityType\": \"t15\",\n  \"Units\": {\n    \"PositionFrom\": 1,\n    \"PositionTo\": 25,\n    \"Pallets\": 25,\n    \"Weight\": 401.079,\n    \"Cost\": 38866.65,\n    \"Boxes\": null\n  },\n  \"LoadingPoints\": [\n    {\n      \"OrderNumbers\": [\n        \"BL03000{{number}}\",\n        \"BK03000{{number}}\"\n      ],\n      \"Warehouse\": {\n         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\n        \"ForeignId\": null\n      },\n      \"AddressInfo\": null,\n      \"DateTime\": {\n        \"from\": \"{{consolidationDate}}T14:32:13\",\n                \"to\": \"{{consolidationDate}}T14:32:13\"\n      },\n      \"Status\": \"Scheduled\",\n      \"DateTimeArrived\": null,\n      \"DateTimeDeparted\": null\n    }\n  ],\n  \"UnloadingPoints\": [\n    {\n      \"OrderNumbers\": [\n        \"BL03000{{number}}\",\n        \"BK03000{{number}}\"\n      ],\n      \"Warehouse\": {\n         \"id\": \"{{unloadingWarehouse}}\",\n        \"ForeignId\": null\n      },\n      \"AddressInfo\": null,\n      \"DateTime\": {\n        \"from\": \"{{deliveryDate}}T14:32:13\",\n        \"to\": \"{{deliveryDate}}T14:32:13\"\n      },\n      \"Status\": \"Scheduled\",\n      \"DateTimeArrived\": null,\n      \"DateTimeDeparted\": null\n    }\n  ],\n  \"Orders\": [\n    {\n      \"Units\": {\n        \"PositionFrom\": 1,\n        \"PositionTo\": 1,\n        \"Pallets\": null,\n        \"Weight\": 308.301,\n        \"Cost\": 27668.97,\n        \"Boxes\": 25\n      },\n       \"number\": \"BL03000{{number}}\",\n        \"waybillNumber\": \"{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\"\n    },\n    {\n      \"Units\": {\n        \"PositionFrom\": 2,\n        \"PositionTo\": 2,\n        \"Pallets\": null,\n        \"Weight\": 54.258,\n        \"Cost\": 11197.68,\n        \"Boxes\": 7\n      },\n       \"number\": \"BK03000{{number}}\",\n        \"waybillNumber\": \"{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\",\n        \"type\": \"Transit\"\n    },\n    {\n      \"Units\": {\n        \"PositionFrom\": 3,\n        \"PositionTo\": 25,\n        \"Pallets\": null,\n        \"Weight\": 308.301,\n        \"Cost\": 27668.97,\n        \"Boxes\": 25\n      },\n       \"number\": \"BK03000{{number}}\",\n        \"waybillNumber\": \"{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\"\n    }\n  ],\n  \"Temperature\": {\n    \"From\": 2,\n    \"To\": 25\n  },\n  \"ServicesNeeded\": [\n    \"Basic\"\n  ],\n  \"comment\": \"{{comment}}\",\n  \"Version\": null,\n  \"Status\": null\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/number/{{ReservationNumber}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"number",
												"{{ReservationNumber}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Изменение бронирования ЛТЛ на слот, пулинг сорван",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotIdPooling\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carTypePooling\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrierPooling\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"clientPooling\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productTypePooling\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 25,\r",
													"    \"Pallets\": 25,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDatePooling\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDatePooling\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehousePooling\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDatePooling\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDatePooling\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 2,\r",
													"        \"PositionTo\": 2,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 3,\r",
													"        \"PositionTo\": 25,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ReservationNumber\", res.json().number);\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Проверка, что бронирование изменено\", function () {\r",
													"pm.expect(jsonData.number).to.eql(pm.variables.get(\"ReservationNumber\"));\r",
													"  pm.expect(jsonData.version).to.be.oneOf([2,3]);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что слот бронирования определен\", function () {\r",
													"  pm.expect(jsonData.slotId).to.eql(pm.variables.get(\"slotIdPooling\"));\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что тип бронирования LTL\", function () { \r",
													"    pm.expect(jsonData.shippingType).to.eql(\"LTL\");\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{goPoolingOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"SlotId\": \"{{slotIdPooling}}\",\n  \"ForeignId\": null,\n  \"ShippingType\": \"LTL\",\n  \"ReservationType\": \"Basic\",\n  \"CarType\": \"{{carTypePooling}}\",\n  \"Carrier\": {\n    \"id\": \"{{carrierPooling}}\",\n    \"ForeignId\": null\n  },\n  \"Client\": {\n   \"id\": \"{{clientPooling}}\",\n    \"ForeignId\": null\n  },\n  \"ProductType\": \"{{productTypePooling}}\",\n  \"CarCapacityType\": \"t15\",\n  \"Units\": {\n    \"PositionFrom\": 1,\n    \"PositionTo\": 1,\n    \"Pallets\": 1,\n    \"Weight\": 401.079,\n    \"Cost\": 38866.65,\n    \"Boxes\": null\n  },\n  \"LoadingPoints\": [\n    {\n      \"OrderNumbers\": [\n        \"BL03000{{number}}\",\n        \"BK03000{{number}}\"\n      ],\n      \"Warehouse\": {\n         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\n        \"ForeignId\": null\n      },\n      \"AddressInfo\": null,\n      \"DateTime\": {\n        \"from\": \"{{consolidationDatePooling}}T14:32:13\",\n                \"to\": \"{{consolidationDatePooling}}T14:32:13\"\n      },\n      \"Status\": \"Scheduled\",\n      \"DateTimeArrived\": null,\n      \"DateTimeDeparted\": null\n    }\n  ],\n  \"UnloadingPoints\": [\n    {\n      \"OrderNumbers\": [\n        \"BL03000{{number}}\",\n        \"BK03000{{number}}\"\n      ],\n      \"Warehouse\": {\n         \"id\": \"{{unloadingWarehousePooling}}\",\n        \"ForeignId\": null\n      },\n      \"AddressInfo\": null,\n      \"DateTime\": {\n        \"from\": \"{{deliveryDatePooling}}T14:32:13\",\n        \"to\": \"{{deliveryDatePooling}}T14:32:13\"\n      },\n      \"Status\": \"Scheduled\",\n      \"DateTimeArrived\": null,\n      \"DateTimeDeparted\": null\n    }\n  ],\n  \"Orders\": [\n    {\n      \"Units\": {\n        \"PositionFrom\": 1,\n        \"PositionTo\": 1,\n        \"Pallets\": null,\n        \"Weight\": 308.301,\n        \"Cost\": 27668.97,\n        \"Boxes\": 25\n      },\n       \"number\": \"BL03000{{number}}\",\n        \"waybillNumber\": \"{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\"\n    },\n    {\n      \"Units\": {\n        \"PositionFrom\": 1,\n        \"PositionTo\": 1,\n        \"Pallets\": null,\n        \"Weight\": 54.258,\n        \"Cost\": 11197.68,\n        \"Boxes\": 7\n      },\n       \"number\": \"BK03000{{number}}\",\n        \"waybillNumber\": \"{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\",\n        \"type\": \"Transit\"\n    },\n    {\n      \"Units\": {\n        \"PositionFrom\": 1,\n        \"PositionTo\": 1,\n        \"Pallets\": null,\n        \"Weight\": 308.301,\n        \"Cost\": 27668.97,\n        \"Boxes\": 25\n      },\n       \"number\": \"BK03000{{number}}\",\n        \"waybillNumber\": \"{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\"\n    }\n  ],\n  \"Temperature\": {\n    \"From\": 2,\n    \"To\": 25\n  },\n  \"ServicesNeeded\": [\n    \"Basic\"\n  ],\n  \"comment\": \"{{comment}}\",\n  \"Version\": null,\n  \"Status\": null\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/number/{{ReservationNumber}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"number",
												"{{ReservationNumber}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Изменение бронирования ЛТЛ на слот, дата отправки со склада",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 3,\r",
													"    \"Pallets\": 3,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 2,\r",
													"        \"PositionTo\": 2,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 3,\r",
													"        \"PositionTo\": 3,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"reservationNumber\", res.json().number); \r",
													"\r",
													"        var moment = require('moment');\r",
													"        dayBefore = moment(pm.variables.get(\"consolidationDate\"),\"YYYY-MM-DD\").subtract(\"day\",1).format(\"YYYY-MM-DD\");\r",
													"        pm.variables.set(\"dayBeforeconsolidationDate\", dayBefore); \r",
													"        console.log(pm.variables.get(\"dayBeforeconsolidationDate\"))\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Проверка, что бронирование изменено\", function () {\r",
													"pm.expect(jsonData.number).to.eql(pm.variables.get(\"reservationNumber\"));\r",
													"  pm.expect(jsonData.version).to.be.oneOf([2,3]);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что слот бронирования определен\", function () {\r",
													"  pm.expect(jsonData.slotId).to.eql(pm.variables.get(\"slotId\"));\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что тип бронирования Pooling\", function () { \r",
													"    pm.expect(jsonData.shippingType).to.eql(\"Pooling\");\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{goPoolingOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"SlotId\": \"{{slotId}}\",\n  \"ForeignId\": null,\n  \"ShippingType\": \"LTL\",\n  \"ReservationType\": \"Basic\",\n  \"CarType\": \"{{carType}}\",\n  \"Carrier\": {\n    \"id\": \"{{carrier}}\",\n    \"ForeignId\": null\n  },\n  \"Client\": {\n   \"id\": \"{{client}}\",\n    \"ForeignId\": null\n  },\n  \"ProductType\": \"{{productType}}\",\n  \"CarCapacityType\": \"t15\",\n  \"Units\": {\n    \"PositionFrom\": 1,\n    \"PositionTo\": 3,\n    \"Pallets\": 3,\n    \"Weight\": 401.079,\n    \"Cost\": 38866.65,\n    \"Boxes\": null\n  },\n  \"LoadingPoints\": [\n    {\n      \"OrderNumbers\": [\n        \"BL03000{{number}}\",\n        \"BK03000{{number}}\"\n      ],\n      \"Warehouse\": {\n         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\n        \"ForeignId\": null\n      },\n      \"AddressInfo\": null,\n      \"DateTime\": {\n        \"from\": \"{{dayBeforeconsolidationDate}}T07:32:13\",\n        \"to\": \"{{dayBeforeconsolidationDate}}T07:32:13\"\n      },\n      \"Status\": \"Scheduled\",\n      \"DateTimeArrived\": null,\n      \"DateTimeDeparted\": null\n    }\n  ],\n  \"UnloadingPoints\": [\n    {\n      \"OrderNumbers\": [\n        \"BL03000{{number}}\",\n        \"BK03000{{number}}\"\n      ],\n      \"Warehouse\": {\n         \"id\": \"{{unloadingWarehouse}}\",\n        \"ForeignId\": null\n      },\n      \"AddressInfo\": null,\n      \"DateTime\": {\n        \"from\": \"{{deliveryDate}}T14:32:13\",\n        \"to\": \"{{deliveryDate}}T14:32:13\"\n      },\n      \"Status\": \"Scheduled\",\n      \"DateTimeArrived\": null,\n      \"DateTimeDeparted\": null\n    }\n  ],\n  \"Orders\": [\n    {\n      \"Units\": {\n        \"PositionFrom\": 1,\n        \"PositionTo\": 1,\n        \"Pallets\": null,\n        \"Weight\": 308.301,\n        \"Cost\": 27668.97,\n        \"Boxes\": 25\n      },\n       \"number\": \"BL03000{{number}}\",\n        \"waybillNumber\": \"{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\"\n    },\n    {\n      \"Units\": {\n        \"PositionFrom\": 2,\n        \"PositionTo\": 2,\n        \"Pallets\": null,\n        \"Weight\": 54.258,\n        \"Cost\": 11197.68,\n        \"Boxes\": 7\n      },\n       \"number\": \"BK03000{{number}}\",\n        \"waybillNumber\": \"{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\",\n        \"type\": \"Transit\"\n    },\n    {\n      \"Units\": {\n        \"PositionFrom\": 3,\n        \"PositionTo\": 3,\n        \"Pallets\": null,\n        \"Weight\": 308.301,\n        \"Cost\": 27668.97,\n        \"Boxes\": 25\n      },\n       \"number\": \"BK03000{{number}}\",\n        \"waybillNumber\": \"{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\"\n    }\n  ],\n  \"Temperature\": {\n    \"From\": 2,\n    \"To\": 25\n  },\n  \"ServicesNeeded\": [\n    \"Basic\"\n  ],\n  \"comment\": \"{{comment}}\",\n  \"Version\": null,\n  \"Status\": null\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/number/{{reservationNumber}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"number",
												"{{reservationNumber}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Изменение бронирования ЛТЛ на слот, факт паллет",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 3,\r",
													"    \"Pallets\": 3,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 2,\r",
													"        \"PositionTo\": 2,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 3,\r",
													"        \"PositionTo\": 3,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"reservationNumber\", res.json().number);\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Проверка, что бронирование изменено\", function () {\r",
													"pm.expect(jsonData.number).to.eql(pm.variables.get(\"reservationNumber\"));\r",
													"  pm.expect(jsonData.version).to.be.oneOf([2,3]);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что слот бронирования определен\", function () {\r",
													"  pm.expect(jsonData.slotId).to.eql(pm.variables.get(\"slotId\"));\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что тип бронирования LTL или Pooling\", function () { \r",
													"    pm.expect(jsonData.shippingType).to.contain.oneOf([\"LTL\", \"Pooling\"]);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что факт паллет изменен\", function () {\r",
													"  pm.expect(jsonData.unitsFact.pallets).to.eql(4);\r",
													"  pm.expect(jsonData.unitsFact.items).to.eql(4);\r",
													"  pm.expect(jsonData.unitsFact.weight).to.eql(404.0);\r",
													"  pm.expect(jsonData.orders[2].unitsFact.pallets).to.eql(2);\r",
													"  pm.expect(jsonData.orders[2].unitsFact.items).to.eql(2);\r",
													"  pm.expect(jsonData.orders[2].unitsFact.cost).to.eql(28000.0);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{goPoolingOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"SlotId\": \"{{slotId}}\",\n  \"ForeignId\": null,\n  \"ShippingType\": \"LTL\",\n  \"ReservationType\": \"Basic\",\n  \"CarType\": \"{{carType}}\",\n  \"Carrier\": {\n    \"id\": \"{{carrier}}\",\n    \"ForeignId\": null\n  },\n  \"Client\": {\n   \"id\": \"{{client}}\",\n    \"ForeignId\": null\n  },\n  \"ProductType\": \"{{productType}}\",\n  \"CarCapacityType\": \"t15\",\n  \"Units\": {\n    \"PositionFrom\": 1,\n    \"PositionTo\": 3,\n    \"Pallets\": 3,\n    \"Weight\": 401.079,\n    \"Cost\": 38866.65,\n    \"Boxes\": null\n  },\n  \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 1,\n        \"positionTo\": 4,\n        \"pallets\": 4,\n        \"boxes\": 25,\n        \"items\": 4,\n        \"weight\": 404,\n        \"cost\": 40000\n      },\n  \"LoadingPoints\": [\n    {\n      \"OrderNumbers\": [\n        \"BL03000{{number}}\",\n        \"BK03000{{number}}\"\n      ],\n      \"Warehouse\": {\n         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\n        \"ForeignId\": null\n      },\n      \"AddressInfo\": null,\n      \"DateTime\": {\n        \"from\": \"{{consolidationDate}}T14:32:13\",\n                \"to\": \"{{consolidationDate}}T14:32:13\"\n      },\n      \"Status\": \"Scheduled\",\n      \"DateTimeArrived\": null,\n      \"DateTimeDeparted\": null\n    }\n  ],\n  \"UnloadingPoints\": [\n    {\n      \"OrderNumbers\": [\n        \"BL03000{{number}}\",\n        \"BK03000{{number}}\"\n      ],\n      \"Warehouse\": {\n         \"id\": \"{{unloadingWarehouse}}\",\n        \"ForeignId\": null\n      },\n      \"AddressInfo\": null,\n      \"DateTime\": {\n        \"from\": \"{{deliveryDate}}T14:32:13\",\n        \"to\": \"{{deliveryDate}}T14:32:13\"\n      },\n      \"Status\": \"Scheduled\",\n      \"DateTimeArrived\": null,\n      \"DateTimeDeparted\": null\n    }\n  ],\n  \"Orders\": [\n    {\n      \"Units\": {\n        \"PositionFrom\": 1,\n        \"PositionTo\": 1,\n        \"Pallets\": null,\n        \"Weight\": 308.301,\n        \"Cost\": 27668.97,\n        \"Boxes\": 25\n      },\n       \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 1,\n        \"positionTo\": 1,\n        \"pallets\": 1,\n        \"boxes\": 25,\n        \"items\": 1,\n        \"weight\": 309,\n        \"cost\": 28000\n      },\n       \"number\": \"BL03000{{number}}\",\n        \"waybillNumber\": \"{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\"\n    },\n    {\n      \"Units\": {\n        \"PositionFrom\": 2,\n        \"PositionTo\": 2,\n        \"Pallets\": null,\n        \"Weight\": 54.258,\n        \"Cost\": 11197.68,\n        \"Boxes\": 7\n      },\n       \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 2,\n        \"positionTo\": 2,\n        \"pallets\": 1,\n        \"boxes\": 7,\n        \"items\": 1,\n        \"weight\": 55,\n        \"cost\": 11200\n      },\n       \"number\": \"BK03000{{number}}\",\n        \"waybillNumber\": \"{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\",\n        \"type\": \"Transit\"\n    },\n    {\n      \"Units\": {\n        \"PositionFrom\": 3,\n        \"PositionTo\": 3,\n        \"Pallets\": null,\n        \"Weight\": 308.301,\n        \"Cost\": 27668.97,\n        \"Boxes\": 25\n      },\n       \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 3,\n        \"positionTo\": 4,\n        \"pallets\": 2,\n        \"boxes\": 25,\n        \"items\": 2,\n        \"weight\": 309,\n        \"cost\": 28000\n      },\n       \"number\": \"BK03000{{number}}\",\n        \"waybillNumber\": \"{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\"\n    }\n  ],\n  \"Temperature\": {\n    \"From\": 2,\n    \"To\": 25\n  },\n  \"ServicesNeeded\": [\n    \"Basic\"\n  ],\n  \"comment\": \"{{comment}}\",\n  \"Version\": null,\n  \"Status\": null\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/number/{{reservationNumber}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"number",
												"{{reservationNumber}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Изменение бронирования ЛТЛ на слот, ТН и ТТН на статусе Исполняется",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 3,\r",
													"    \"Pallets\": 3,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 2,\r",
													"        \"PositionTo\": 2,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 3,\r",
													"        \"PositionTo\": 3,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ReservationNumber\", res.json().number);\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Проверка, что бронирование изменено\", function () {\r",
													"pm.expect(jsonData.number).to.eql(pm.variables.get(\"ReservationNumber\"));\r",
													"  pm.expect(jsonData.version).to.be.oneOf([2,3]);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что слот бронирования определен\", function () {\r",
													"  pm.expect(jsonData.slotId).to.eql(pm.variables.get(\"slotId\"));\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что ТТН добавлен\", function () { \r",
													"    pm.expect(jsonData.orders[0].productTransportWaybill).to.eql(\"432447\");\r",
													"    pm.expect(jsonData.orders[1].productTransportWaybill).to.eql(\"432667\");\r",
													"    pm.expect(jsonData.orders[2].productTransportWaybill).to.eql(\"432997\");\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{goPoolingOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"SlotId\": \"{{slotId}}\",\n  \"ForeignId\": null,\n  \"ShippingType\": \"LTL\",\n  \"ReservationType\": \"Basic\",\n  \"CarType\": \"{{carType}}\",\n  \"Carrier\": {\n    \"id\": \"{{carrier}}\",\n    \"ForeignId\": null\n  },\n  \"Client\": {\n   \"id\": \"{{client}}\",\n    \"ForeignId\": null\n  },\n  \"ProductType\": \"{{productType}}\",\n  \"CarCapacityType\": \"t15\",\n  \"Units\": {\n    \"PositionFrom\": 1,\n    \"PositionTo\": 3,\n    \"Pallets\": 3,\n    \"Weight\": 401.079,\n    \"Cost\": 38866.65,\n    \"Boxes\": null\n  },\n  \"LoadingPoints\": [\n    {\n      \"OrderNumbers\": [\n        \"BL03000{{number}}\",\n        \"BK03000{{number}}\"\n      ],\n      \"Warehouse\": {\n         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\n        \"ForeignId\": null\n      },\n      \"AddressInfo\": null,\n      \"DateTime\": {\n        \"from\": \"{{consolidationDate}}T14:32:13\",\n        \"to\": \"{{consolidationDate}}T14:32:13\"\n      },\n      \"Status\": \"Scheduled\",\n      \"DateTimeArrived\": null,\n      \"DateTimeDeparted\": null\n    }\n  ],\n  \"UnloadingPoints\": [\n    {\n      \"OrderNumbers\": [\n        \"BL03000{{number}}\",\n        \"BK03000{{number}}\"\n      ],\n      \"Warehouse\": {\n         \"id\": \"{{unloadingWarehouse}}\",\n        \"ForeignId\": null\n      },\n      \"AddressInfo\": null,\n      \"DateTime\": {\n        \"from\": \"{{deliveryDate}}T14:32:13\",\n        \"to\": \"{{deliveryDate}}T14:32:13\"\n      },\n      \"Status\": \"Scheduled\",\n      \"DateTimeArrived\": null,\n      \"DateTimeDeparted\": null\n    }\n  ],\n  \"Orders\": [\n    {\n      \"Units\": {\n        \"PositionFrom\": 1,\n        \"PositionTo\": 1,\n        \"Pallets\": null,\n        \"Weight\": 308.301,\n        \"Cost\": 27668.97,\n        \"Boxes\": 25\n      },\n       \"number\": \"BL03000{{number}}\",\n        \"waybillNumber\": \"A{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\",\n        \"ProductTransportWaybill\": \"432447\"\n    },\n    {\n      \"Units\": {\n        \"PositionFrom\": 2,\n        \"PositionTo\": 2,\n        \"Pallets\": null,\n        \"Weight\": 54.258,\n        \"Cost\": 11197.68,\n        \"Boxes\": 7\n      },\n       \"number\": \"BK03000{{number}}\",\n        \"waybillNumber\": \"B{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\",\n        \"ProductTransportWaybill\": \"432667\",\n        \"type\": \"Transit\"\n    },\n    {\n      \"Units\": {\n        \"PositionFrom\": 3,\n        \"PositionTo\": 3,\n        \"Pallets\": null,\n        \"Weight\": 308.301,\n        \"Cost\": 27668.97,\n        \"Boxes\": 25\n      },\n       \"number\": \"BK03000{{number}}\",\n        \"waybillNumber\": \"C{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\",\n        \"ProductTransportWaybill\": \"432997\"\n    }\n  ],\n  \"Temperature\": {\n    \"From\": 2,\n    \"To\": 25\n  },\n  \"ServicesNeeded\": [\n    \"Basic\"\n  ],\n  \"comment\": \"{{comment}}\",\n  \"Version\": null,\n  \"Status\": null\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/number/{{ReservationNumber}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"number",
												"{{ReservationNumber}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Ошибка при попытке изменения даты отправки позже, чем дата консолидации",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 3,\r",
													"    \"Pallets\": 3,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 2,\r",
													"        \"PositionTo\": 2,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 3,\r",
													"        \"PositionTo\": 3,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"reservationNumber\", res.json().number); \r",
													"\r",
													"        console.log(res.json());\r",
													"        pm.variables.set(\"reservationNumber\", res.json().number); \r",
													"        var moment = require('moment');\r",
													"        console.log(pm.variables.get(\"consolidationDate\"))\r",
													"        dayBefore = moment(pm.variables.get(\"consolidationDate\"),\"YYYY-MM-DD\").add(\"day\",1).format(\"YYYY-MM-DD\")\r",
													"        pm.variables.set(\"departureDate\", dayBefore); \r",
													"        console.log(pm.variables.get(\"departureDate\"))\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что ошибка соответствует ожидаемой\", function () {\r",
													"     pm.expect(jsonData.error).to.eql(\"Вы не можете указать дату доставки на склад позднее чем день консолидации\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{goPoolingOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"SlotId\": \"{{slotId}}\",\n  \"ForeignId\": null,\n  \"ShippingType\": \"LTL\",\n  \"ReservationType\": \"Basic\",\n  \"CarType\": \"{{carType}}\",\n  \"Carrier\": {\n    \"id\": \"{{carrier}}\",\n    \"ForeignId\": null\n  },\n  \"Client\": {\n   \"id\": \"{{client}}\",\n    \"ForeignId\": null\n  },\n  \"ProductType\": \"{{productType}}\",\n  \"CarCapacityType\": \"t15\",\n  \"Units\": {\n    \"PositionFrom\": 1,\n    \"PositionTo\": 3,\n    \"Pallets\": 3,\n    \"Weight\": 401.079,\n    \"Cost\": 38866.65,\n    \"Boxes\": null\n  },\n  \"LoadingPoints\": [\n    {\n      \"OrderNumbers\": [\n        \"BL03000{{number}}\",\n        \"BK03000{{number}}\"\n      ],\n      \"Warehouse\": {\n         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\n        \"ForeignId\": null\n      },\n      \"AddressInfo\": null,\n      \"DateTime\": {\n        \"from\": \"{{departureDate}}T07:32:13\",\n        \"to\": \"{{departureDate}}T07:32:13\"\n      },\n      \"Status\": \"Scheduled\",\n      \"DateTimeArrived\": null,\n      \"DateTimeDeparted\": null\n    }\n  ],\n  \"UnloadingPoints\": [\n    {\n      \"OrderNumbers\": [\n        \"BL03000{{number}}\",\n        \"BK03000{{number}}\"\n      ],\n      \"Warehouse\": {\n         \"id\": \"{{unloadingWarehouse}}\",\n        \"ForeignId\": null\n      },\n      \"AddressInfo\": null,\n      \"DateTime\": {\n        \"from\": \"{{deliveryDate}}T14:32:13\",\n        \"to\": \"{{deliveryDate}}T14:32:13\"\n      },\n      \"Status\": \"Scheduled\",\n      \"DateTimeArrived\": null,\n      \"DateTimeDeparted\": null\n    }\n  ],\n  \"Orders\": [\n    {\n      \"Units\": {\n        \"PositionFrom\": 1,\n        \"PositionTo\": 1,\n        \"Pallets\": null,\n        \"Weight\": 308.301,\n        \"Cost\": 27668.97,\n        \"Boxes\": 25\n      },\n       \"number\": \"BL03000{{number}}\",\n        \"waybillNumber\": \"{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\"\n    },\n    {\n      \"Units\": {\n        \"PositionFrom\": 2,\n        \"PositionTo\": 2,\n        \"Pallets\": null,\n        \"Weight\": 54.258,\n        \"Cost\": 11197.68,\n        \"Boxes\": 7\n      },\n       \"number\": \"BK03000{{number}}\",\n        \"waybillNumber\": \"{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\",\n        \"type\": \"Transit\"\n    },\n    {\n      \"Units\": {\n        \"PositionFrom\": 3,\n        \"PositionTo\": 3,\n        \"Pallets\": null,\n        \"Weight\": 308.301,\n        \"Cost\": 27668.97,\n        \"Boxes\": 25\n      },\n       \"number\": \"BK03000{{number}}\",\n        \"waybillNumber\": \"{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\"\n    }\n  ],\n  \"Temperature\": {\n    \"From\": 2,\n    \"To\": 25\n  },\n  \"ServicesNeeded\": [\n    \"Basic\"\n  ],\n  \"comment\": \"{{comment}}\",\n  \"Version\": null,\n  \"Status\": null\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/number/{{reservationNumber}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"number",
												"{{reservationNumber}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Ошибка при попытке изменения на склад отправки, не принадлежащий ГО",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 3,\r",
													"    \"Pallets\": 3,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 2,\r",
													"        \"PositionTo\": 2,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 3,\r",
													"        \"PositionTo\": 3,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"reservationNumber\", res.json().number); \r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что ошибка соответствует ожидаемой\", function () {\r",
													"     pm.expect(jsonData.error).to.eql(\"Указанный склад загрузки не принадлежит вашей компании\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{goPoolingOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"SlotId\": \"{{slotId}}\",\n  \"ForeignId\": null,\n  \"ShippingType\": \"LTL\",\n  \"ReservationType\": \"Basic\",\n  \"CarType\": \"{{carType}}\",\n  \"Carrier\": {\n    \"id\": \"{{carrier}}\",\n    \"ForeignId\": null\n  },\n  \"Client\": {\n   \"id\": \"{{client}}\",\n    \"ForeignId\": null\n  },\n  \"ProductType\": \"{{productType}}\",\n  \"CarCapacityType\": \"t15\",\n  \"Units\": {\n    \"PositionFrom\": 1,\n    \"PositionTo\": 3,\n    \"Pallets\": 3,\n    \"Weight\": 401.079,\n    \"Cost\": 38866.65,\n    \"Boxes\": null\n  },\n  \"LoadingPoints\": [\n    {\n      \"OrderNumbers\": [\n        \"BL03000{{number}}\",\n        \"BK03000{{number}}\"\n      ],\n      \"Warehouse\": {\n         \"id\": \"5b7804869da84737a056e50f\",\n        \"ForeignId\": null\n      },\n      \"AddressInfo\": null,\n      \"DateTime\": {\n        \"from\": \"{{consolidationDate}}T13:32:13\",\n        \"to\": \"{{consolidationDate}}T13:32:13\"\n      },\n      \"Status\": \"Scheduled\",\n      \"DateTimeArrived\": null,\n      \"DateTimeDeparted\": null\n    }\n  ],\n  \"UnloadingPoints\": [\n    {\n      \"OrderNumbers\": [\n        \"BL03000{{number}}\",\n        \"BK03000{{number}}\"\n      ],\n      \"Warehouse\": {\n         \"id\": \"{{unloadingWarehouse}}\",\n        \"ForeignId\": null\n      },\n      \"AddressInfo\": null,\n      \"DateTime\": {\n        \"from\": \"{{deliveryDate}}T14:32:13\",\n        \"to\": \"{{deliveryDate}}T14:32:13\"\n      },\n      \"Status\": \"Scheduled\",\n      \"DateTimeArrived\": null,\n      \"DateTimeDeparted\": null\n    }\n  ],\n  \"Orders\": [\n    {\n      \"Units\": {\n        \"PositionFrom\": 1,\n        \"PositionTo\": 1,\n        \"Pallets\": null,\n        \"Weight\": 308.301,\n        \"Cost\": 27668.97,\n        \"Boxes\": 25\n      },\n       \"number\": \"BL03000{{number}}\",\n        \"waybillNumber\": \"{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\"\n    },\n    {\n      \"Units\": {\n        \"PositionFrom\": 2,\n        \"PositionTo\": 2,\n        \"Pallets\": null,\n        \"Weight\": 54.258,\n        \"Cost\": 11197.68,\n        \"Boxes\": 7\n      },\n       \"number\": \"BK03000{{number}}\",\n        \"waybillNumber\": \"{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\",\n        \"type\": \"Transit\"\n    },\n   {\n      \"Units\": {\n        \"PositionFrom\": 3,\n        \"PositionTo\": 3,\n        \"Pallets\": null,\n        \"Weight\": 308.301,\n        \"Cost\": 27668.97,\n        \"Boxes\": 25\n      },\n       \"number\": \"BK03000{{number}}\",\n        \"waybillNumber\": \"{{number}}\",\n        \"consignorNumber\": \"HS{{number}}\"\n    }\n  ],\n  \"Temperature\": {\n    \"From\": 2,\n    \"To\": 25\n  },\n  \"ServicesNeeded\": [\n    \"Basic\"\n  ],\n  \"comment\": \"{{comment}}\",\n  \"Version\": null,\n  \"Status\": null\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/number/{{reservationNumber}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"number",
												"{{reservationNumber}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var moment = require('moment');",
											"pm.variables.set(\"currentDate\", moment().add(1, 'week').format(\"YYYY-MM-DD\"));",
											"pm.variables.set(\"currentDate + a week\", moment().add(2, 'week').format(\"YYYY-MM-DD\"));",
											"",
											"const number = pm.variables.replaceIn(\"{{$randomInt}}\");",
											"pm.variables.set(\"number\", number);",
											"",
											"const com = pm.variables.replaceIn(\"{{$randomCity}}\");",
											"pm.variables.set(\"comment\", com);",
											"",
											"pm.sendRequest({",
											"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/slots?consolidationDateFrom=\" + pm.variables.get(\"currentDate\") + \"&consolidationDateTo=\" + pm.variables.get(\"currentDate + a week\") + \"&shippingRegionId=\" + pm.globals.get(\"MoscowShippingRegion\") + \"&UnloadingWarehouseId=\" + pm.globals.get(\"NovgorodUnloadingWarehouse\") + \"&carrierId=\" + pm.globals.get(\"FMCarrier\"),",
											"    method: \"GET\",",
											"    header: {",
											"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),",
											"    },",
											"},",
											"    function (err, res) {",
											"        console.log(res.json());",
											"        pm.expect(res.status).to.eql(\"OK\");",
											"        pm.expect(res.json()).to.not.be.empty;",
											"        console.log(pm.variables.get(\"pre-requestStatus1\"));",
											"        pm.variables.set(\"slotId\", res.json()[1].id);",
											"        pm.variables.set(\"productType\", res.json()[1].productTypes[0]);",
											"        pm.variables.set(\"carrier\", res.json()[1].carrier.id);",
											"        pm.variables.set(\"client\", res.json()[1].client.id);",
											"        pm.variables.set(\"carType\", res.json()[1].carType);",
											"        pm.variables.set(\"unloadingWarehouse\", res.json()[1].unloadingWarehouse.id);",
											"        pm.variables.set(\"consolidationDate\", res.json()[1].consolidationDate);",
											"        pm.variables.set(\"deliveryDate\", res.json()[1].deliveryDate);",
											"    });",
											"",
											"pm.sendRequest({",
											"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/slots?consolidationDateFrom=\" + pm.variables.get(\"currentDate\") + \"&consolidationDateTo=\" + pm.variables.get(\"currentDate + a week\") + \"&shippingRegionId=\" + pm.globals.get(\"MoscowShippingRegion\") + \"&UnloadingWarehouseId=\" + pm.globals.get(\"OrelUnloadingWarehouse\") + \"&carrierId=\" + pm.globals.get(\"FMCarrier\"),",
											"    method: \"GET\",",
											"    header: {",
											"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),",
											"    },",
											"},",
											"    function (err, res) {",
											"        console.log(res.json());",
											"        pm.expect(res.status).to.eql(\"OK\");",
											"        pm.expect(res.json()).to.not.be.empty;",
											"        console.log(pm.variables.get(\"pre-requestStatusPooling\"));",
											"        pm.variables.set(\"slotIdPooling\", res.json()[0].id);",
											"        pm.variables.set(\"productTypePooling\", res.json()[0].productTypes[0]);",
											"        pm.variables.set(\"carrierPooling\", res.json()[0].carrier.id);",
											"        pm.variables.set(\"clientPooling\", res.json()[0].client.id);",
											"        pm.variables.set(\"carTypePooling\", res.json()[0].carType);",
											"        pm.variables.set(\"unloadingWarehousePooling\", res.json()[0].unloadingWarehouse.id);",
											"        pm.variables.set(\"consolidationDatePooling\", res.json()[0].consolidationDate);",
											"        pm.variables.set(\"deliveryDatePooling\", res.json()[0].deliveryDate);",
											"    });"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Status",
							"item": [
								{
									"name": "Изменение статуса с Исполняется на Отмена от ГО",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 1,\r",
													"    \"Pallets\": 1,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ID\", res.json().id);\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"const statusName = \"Canceled\";\r",
													"const companyType = \"Consignor\";\r",
													"const statusComment = pm.variables.get(\"comment\") + \" Status\";\r",
													"\r",
													"pm.test(\"Проверка, что статус изменен\", function () {\r",
													"  pm.expect(jsonData.status).to.eql(statusName);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что комментарий компании добавлен\", function () { \r",
													"    commentNode = jsonData.comments.find(x => x.company.type === companyType);\r",
													"    pm.expect(commentNode.comment).to.eql(statusComment);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{goPoolingOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"status\": \"Canceled\",\n    \"comment\": \"{{comment}} Status\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/{{ID}}/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"{{ID}}",
												"status"
											]
										}
									},
									"response": []
								},
								{
									"name": "Ошибка при попытке изменения статуса с Исполняется на Отмена от ТК без фичи",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotIdIteco\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carTypeIteco\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrierIteco\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"clientIteco\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productTypeIteco\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 1,\r",
													"    \"Pallets\": 1,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"6017da0ccc61c02bf0c2a515\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDateIteco\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDateIteco\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouseIteco\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDateIteco\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDateIteco\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ID\", res.json().id);\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что ошибка соответствует ожидаемой\", function () {\r",
													"     pm.expect(jsonData.error).to.eql(\"Нельзя перевести в статус Отменено из Исполняется от роли ТК\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tkItekoOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"status\": \"Canceled\",\n    \"comment\": \"{{comment}} Status\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/{{ID}}/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"{{ID}}",
												"status"
											]
										}
									},
									"response": []
								},
								{
									"name": "Изменение статуса с Исполняется на ОтменаТК от ТК",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 1,\r",
													"    \"Pallets\": 1,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ID\", res.json().id);\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"const statusName = \"CarrierCanceled\";\r",
													"const companyType = \"Carrier\";\r",
													"const statusComment = pm.variables.get(\"comment\") + \" Status\";\r",
													"\r",
													"pm.test(\"Проверка, что статус изменен\", function () {\r",
													"  pm.expect(jsonData.status).to.eql(statusName);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что комментарий компании добавлен\", function () { \r",
													"    commentNode = jsonData.comments.find(x => x.company.type === companyType);\r",
													"    pm.expect(commentNode.comment).to.eql(statusComment);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tkFmOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"status\": \"CarrierCanceled\",\n    \"comment\": \"{{comment}} Status\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/{{ID}}/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"{{ID}}",
												"status"
											]
										}
									},
									"response": []
								},
								{
									"name": "Ошибка при попытке изменения статуса с Исполняется на ОтменаТК от ТС",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 1,\r",
													"    \"Pallets\": 1,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ID\", res.json().id);\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что ошибка соответствует ожидаемой\", function () {\r",
													"     pm.expect(jsonData.error).to.eql(\"Недостаточно прав\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tsTanderOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"status\": \"CarrierCanceled\",\n    \"comment\": \"{{comment}} Status\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/{{ID}}/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"{{ID}}",
												"status"
											]
										}
									},
									"response": []
								},
								{
									"name": "Откат статуса по номеру с Доставлено на Исполняется от Админа",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 1,\r",
													"    \"Pallets\": 1,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ReservationNumber\", res.json().number);\r",
													"\r",
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations/number/\" + pm.variables.get(\"ReservationNumber\") + \"/status\",\r",
													"    method: \"PUT\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"tkFmOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"    mode: 'raw',\r",
													"    raw: JSON.stringify({ \r",
													"        \"status\": \"Delivered\",\r",
													"        \"comment\": null\r",
													"\r",
													"})  \r",
													"    } \r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.json().status).to.be.eql(\"Delivered\");\r",
													"        pm.variables.set(\"ReservationNumber\", res.json().number);\r",
													"     }\r",
													"     )\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"const statusName = \"InProgress\";\r",
													"const companyType = \"Consignor\";\r",
													"const statusComment = pm.variables.get(\"comment\") + \" Status\";\r",
													"\r",
													"pm.test(\"Проверка, что статус изменен\", function () {\r",
													"  pm.expect(jsonData.status).to.eql(statusName);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что комментарий компании добавлен\", function () { \r",
													"    commentNode = jsonData.comments.find(x => x.company.type === companyType);\r",
													"    pm.expect(commentNode.comment).to.eql(statusComment);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{goAdminRekitOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"status\": \"InProgress\",\n    \"comment\": \"{{comment}} Status\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/number/{{ReservationNumber}}/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"number",
												"{{ReservationNumber}}",
												"status"
											]
										}
									},
									"response": []
								},
								{
									"name": "Откат статуса по номеру со Счет выставлен на Стоимость подтверждена от Админа",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 1,\r",
													"    \"Pallets\": 1,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ReservationNumber\", res.json().number);\r",
													"\r",
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations/number/\" + pm.variables.get(\"ReservationNumber\") + \"/status\",\r",
													"    method: \"PUT\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"tkFmOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"    mode: 'raw',\r",
													"    raw: JSON.stringify({ \r",
													"        \"status\": \"Delivered\",\r",
													"        \"comment\": null\r",
													"\r",
													"})  \r",
													"    } \r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.json().status).to.be.eql(\"Delivered\");\r",
													"        pm.variables.set(\"ReservationNumber\", res.json().number);\r",
													"\r",
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations/number/\" + pm.variables.get(\"ReservationNumber\") + \"/status\",\r",
													"    method: \"PUT\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"    mode: 'raw',\r",
													"    raw: JSON.stringify({ \r",
													"        \"status\": \"CostConfirmed\",\r",
													"        \"comment\": null\r",
													"\r",
													"})  \r",
													"    } \r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.json().status).to.be.eql(\"CostConfirmed\");\r",
													"        pm.variables.set(\"ReservationNumber\", res.json().number);\r",
													"\r",
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations/number/\" + pm.variables.get(\"ReservationNumber\") + \"/status\",\r",
													"    method: \"PUT\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"tkFmOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"    mode: 'raw',\r",
													"    raw: JSON.stringify({ \r",
													"        \"status\": \"Invoiced\",\r",
													"        \"comment\": null\r",
													"\r",
													"})  \r",
													"    } \r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.json().status).to.be.eql(\"Invoiced\");\r",
													"        pm.variables.set(\"ReservationNumber\", res.json().number);\r",
													"     }\r",
													"     )\r",
													"     }\r",
													"     )\r",
													"     }\r",
													"     )\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"const statusName = \"CostConfirmed\";\r",
													"const companyType = \"Consignor\";\r",
													"const statusComment = pm.variables.get(\"comment\") + \" Status\";\r",
													"\r",
													"pm.test(\"Проверка, что статус изменен\", function () {\r",
													"  pm.expect(jsonData.status).to.eql(statusName);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что комментарий компании добавлен\", function () { \r",
													"    commentNode = jsonData.comments.find(x => x.company.type === companyType);\r",
													"    pm.expect(commentNode.comment).to.eql(statusComment);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{goAdminRekitOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"status\": \"CostConfirmed\",\n    \"comment\": \"{{comment}} Status\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/number/{{ReservationNumber}}/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"number",
												"{{ReservationNumber}}",
												"status"
											]
										}
									},
									"response": []
								},
								{
									"name": "Откат статуса по номеру со Счет выставлен на Стоимость отклонена от Админа",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 1,\r",
													"    \"Pallets\": 1,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ReservationNumber\", res.json().number);\r",
													"\r",
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations/number/\" + pm.variables.get(\"ReservationNumber\") + \"/status\",\r",
													"    method: \"PUT\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"tkFmOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"    mode: 'raw',\r",
													"    raw: JSON.stringify({ \r",
													"        \"status\": \"Delivered\",\r",
													"        \"comment\": null\r",
													"\r",
													"})  \r",
													"    } \r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.json().status).to.be.eql(\"Delivered\");\r",
													"        pm.variables.set(\"ReservationNumber\", res.json().number);\r",
													"\r",
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations/number/\" + pm.variables.get(\"ReservationNumber\") + \"/status\",\r",
													"    method: \"PUT\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"    mode: 'raw',\r",
													"    raw: JSON.stringify({ \r",
													"        \"status\": \"CostConfirmed\",\r",
													"        \"comment\": null\r",
													"\r",
													"})  \r",
													"    } \r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.json().status).to.be.eql(\"CostConfirmed\");\r",
													"        pm.variables.set(\"ReservationNumber\", res.json().number);\r",
													"\r",
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations/number/\" + pm.variables.get(\"ReservationNumber\") + \"/status\",\r",
													"    method: \"PUT\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"tkFmOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"    mode: 'raw',\r",
													"    raw: JSON.stringify({ \r",
													"        \"status\": \"Invoiced\",\r",
													"        \"comment\": null\r",
													"\r",
													"})  \r",
													"    } \r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.json().status).to.be.eql(\"Invoiced\");\r",
													"        pm.variables.set(\"ReservationNumber\", res.json().number);\r",
													"     }\r",
													"     )\r",
													"     }\r",
													"     )\r",
													"     }\r",
													"     )\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"const statusName = \"CostDeclined\";\r",
													"const companyType = \"Consignor\";\r",
													"const statusComment = pm.variables.get(\"comment\") + \" Status\";\r",
													"\r",
													"pm.test(\"Проверка, что статус изменен\", function () {\r",
													"  pm.expect(jsonData.status).to.eql(statusName);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что комментарий компании добавлен\", function () { \r",
													"    commentNode = jsonData.comments.find(x => x.company.type === companyType);\r",
													"    pm.expect(commentNode.comment).to.eql(statusComment);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{goAdminRekitOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"status\": \"CostDeclined\",\n    \"comment\": \"{{comment}} Status\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/number/{{ReservationNumber}}/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"number",
												"{{ReservationNumber}}",
												"status"
											]
										}
									},
									"response": []
								},
								{
									"name": "Откат статуса по номеру с Завершена на Счет выставлен от Админа",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 1,\r",
													"    \"Pallets\": 1,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ReservationNumber\", res.json().number);\r",
													"\r",
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations/number/\" + pm.variables.get(\"ReservationNumber\") + \"/status\",\r",
													"    method: \"PUT\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"tkFmOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"    mode: 'raw',\r",
													"    raw: JSON.stringify({ \r",
													"        \"status\": \"Delivered\",\r",
													"        \"comment\": null\r",
													"\r",
													"})  \r",
													"    } \r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.json().status).to.be.eql(\"Delivered\");\r",
													"        pm.variables.set(\"ReservationNumber\", res.json().number);\r",
													"\r",
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations/number/\" + pm.variables.get(\"ReservationNumber\") + \"/status\",\r",
													"    method: \"PUT\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"    mode: 'raw',\r",
													"    raw: JSON.stringify({ \r",
													"        \"status\": \"CostConfirmed\",\r",
													"        \"comment\": null\r",
													"\r",
													"})  \r",
													"    } \r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.json().status).to.be.eql(\"CostConfirmed\");\r",
													"        pm.variables.set(\"ReservationNumber\", res.json().number);\r",
													"\r",
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations/number/\" + pm.variables.get(\"ReservationNumber\") + \"/status\",\r",
													"    method: \"PUT\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"tkFmOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"    mode: 'raw',\r",
													"    raw: JSON.stringify({ \r",
													"        \"status\": \"Invoiced\",\r",
													"        \"comment\": null\r",
													"\r",
													"})  \r",
													"    } \r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.json().status).to.be.eql(\"Invoiced\");\r",
													"        pm.variables.set(\"ReservationNumber\", res.json().number);\r",
													"\r",
													"        pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations/number/\" + pm.variables.get(\"ReservationNumber\") + \"/status\",\r",
													"    method: \"PUT\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"    mode: 'raw',\r",
													"    raw: JSON.stringify({ \r",
													"        \"status\": \"Closed\",\r",
													"        \"comment\": null\r",
													"\r",
													"})  \r",
													"    } \r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.json().status).to.be.eql(\"Closed\");\r",
													"        pm.variables.set(\"ReservationNumber\", res.json().number);\r",
													"     }\r",
													"     )\r",
													"     }\r",
													"     )\r",
													"     }\r",
													"     )\r",
													"     }\r",
													"     )\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"const statusName = \"Invoiced\";\r",
													"const companyType = \"Consignor\";\r",
													"const statusComment = pm.variables.get(\"comment\") + \" Status\";\r",
													"\r",
													"pm.test(\"Проверка, что статус изменен\", function () {\r",
													"  pm.expect(jsonData.status).to.eql(statusName);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что комментарий компании добавлен\", function () { \r",
													"    commentNode = jsonData.comments.find(x => x.company.type === companyType);\r",
													"    pm.expect(commentNode.comment).to.eql(statusComment);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{goAdminRekitOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"status\": \"Invoiced\",\n    \"comment\": \"{{comment}} Status\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/number/{{ReservationNumber}}/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"number",
												"{{ReservationNumber}}",
												"status"
											]
										}
									},
									"response": []
								},
								{
									"name": "Изменение статуса по номеру с Исполняется на Доставлено от ТК",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 1,\r",
													"    \"Pallets\": 1,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ReservationNumber\", res.json().number);\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"const statusName = \"Delivered\";\r",
													"const companyType = \"Carrier\";\r",
													"const statusComment = pm.variables.get(\"comment\") + \" Status\";\r",
													"\r",
													"pm.test(\"Проверка, что статус изменен\", function () {\r",
													"  pm.expect(jsonData.status).to.eql(statusName);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что комментарий компании добавлен\", function () { \r",
													"    commentNode = jsonData.comments.find(x => x.company.type === companyType);\r",
													"    pm.expect(commentNode.comment).to.eql(statusComment);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tkFmOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"status\": \"Delivered\",\n    \"comment\": \"{{comment}} Status\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/number/{{ReservationNumber}}/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"number",
												"{{ReservationNumber}}",
												"status"
											]
										}
									},
									"response": []
								},
								{
									"name": "Изменение статуса по номеру с Исполняется на Доставлено от ГО",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 1,\r",
													"    \"Pallets\": 1,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ReservationNumber\", res.json().number);\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"const statusName = \"Delivered\";\r",
													"const companyType = \"Consignor\";\r",
													"const statusComment = pm.variables.get(\"comment\") + \" Status\";\r",
													"\r",
													"pm.test(\"Проверка, что статус изменен\", function () {\r",
													"  pm.expect(jsonData.status).to.eql(statusName);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что комментарий компании добавлен\", function () { \r",
													"    commentNode = jsonData.comments.find(x => x.company.type === companyType);\r",
													"    pm.expect(commentNode.comment).to.eql(statusComment);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{goPoolingOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"status\": \"Delivered\",\n    \"comment\": \"{{comment}} Status\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/number/{{ReservationNumber}}/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"number",
												"{{ReservationNumber}}",
												"status"
											]
										}
									},
									"response": []
								},
								{
									"name": "Изменение статуса по номеру с Доставлено на Стоимость подтверждена от ГО",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 1,\r",
													"    \"Pallets\": 1,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ReservationNumber\", res.json().number);\r",
													"\r",
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations/number/\" + pm.variables.get(\"ReservationNumber\") + \"/status\",\r",
													"    method: \"PUT\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"tkFmOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"    mode: 'raw',\r",
													"    raw: JSON.stringify({ \r",
													"        \"status\": \"Delivered\",\r",
													"        \"comment\": null\r",
													"\r",
													"})  \r",
													"    } \r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.json().status).to.be.eql(\"Delivered\");\r",
													"        pm.variables.set(\"ReservationNumber\", res.json().number);\r",
													"     }\r",
													"    )\r",
													"     });\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"const statusName = \"CostConfirmed\";\r",
													"const companyType = \"Consignor\";\r",
													"const statusComment = pm.variables.get(\"comment\") + \" Status\";\r",
													"\r",
													"pm.test(\"Проверка, что статус изменен\", function () {\r",
													"  pm.expect(jsonData.status).to.eql(statusName);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что комментарий компании добавлен\", function () { \r",
													"    commentNode = jsonData.comments.find(x => x.company.type === companyType);\r",
													"    pm.expect(commentNode.comment).to.eql(statusComment);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{goPoolingOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"status\": \"CostConfirmed\",\n    \"comment\": \"{{comment}} Status\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/number/{{ReservationNumber}}/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"number",
												"{{ReservationNumber}}",
												"status"
											]
										}
									},
									"response": []
								},
								{
									"name": "Ошибка при попытке изменения статуса по номеру с Исполняется на Стоимость подтверждена от ГО",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 1,\r",
													"    \"Pallets\": 1,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ReservationNumber\", res.json().number);\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что ошибка соответствует ожидаемой\", function () {\r",
													"     pm.expect(jsonData.error).to.eql(\"Нельзя перевести в статус Стоимость согласована из Исполняется\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{goPoolingOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"status\": \"CostConfirmed\",\n    \"comment\": \"{{comment}} Status\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/number/{{ReservationNumber}}/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"number",
												"{{ReservationNumber}}",
												"status"
											]
										}
									},
									"response": []
								},
								{
									"name": "Изменение статуса по номеру с Доставлено на Стоимость отклонена от ГО",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 1,\r",
													"    \"Pallets\": 1,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ReservationNumber\", res.json().number);\r",
													"\r",
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations/number/\" + pm.variables.get(\"ReservationNumber\") + \"/status\",\r",
													"    method: \"PUT\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"tkFmOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"    mode: 'raw',\r",
													"    raw: JSON.stringify({ \r",
													"        \"status\": \"Delivered\",\r",
													"        \"comment\": null\r",
													"\r",
													"})  \r",
													"    } \r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.json().status).to.be.eql(\"Delivered\");\r",
													"        pm.variables.set(\"ReservationNumber\", res.json().number);\r",
													"     }\r",
													"    )\r",
													"     });\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"const statusName = \"CostDeclined\";\r",
													"const companyType = \"Consignor\";\r",
													"const statusComment = pm.variables.get(\"comment\") + \" Status\";\r",
													"\r",
													"pm.test(\"Проверка, что статус изменен\", function () {\r",
													"  pm.expect(jsonData.status).to.eql(statusName);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что комментарий компании добавлен\", function () { \r",
													"    commentNode = jsonData.comments.find(x => x.company.type === companyType);\r",
													"    pm.expect(commentNode.comment).to.eql(statusComment);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{goPoolingOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"status\": \"CostDeclined\",\n    \"comment\": \"{{comment}} Status\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/number/{{ReservationNumber}}/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"number",
												"{{ReservationNumber}}",
												"status"
											]
										}
									},
									"response": []
								},
								{
									"name": "Ошибка при попытке изменения статуса по номеру с Доставлено на Стоимость отклонена от TK",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 1,\r",
													"    \"Pallets\": 1,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ReservationNumber\", res.json().number);\r",
													"\r",
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations/number/\" + pm.variables.get(\"ReservationNumber\") + \"/status\",\r",
													"    method: \"PUT\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"tkFmOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"    mode: 'raw',\r",
													"    raw: JSON.stringify({ \r",
													"        \"status\": \"Delivered\",\r",
													"        \"comment\": null\r",
													"\r",
													"})  \r",
													"    } \r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.json().status).to.be.eql(\"Delivered\");\r",
													"        pm.variables.set(\"ReservationNumber\", res.json().number);\r",
													"     }\r",
													"    )\r",
													"     });\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что ошибка соответствует ожидаемой\", function () {\r",
													"     pm.expect(jsonData.error).to.eql(\"Нельзя перевести в статус Стоимость не согласована из Доставлено от роли ТК\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tkFmOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"status\": \"CostDeclined\",\n    \"comment\": \"{{comment}} Status\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/number/{{ReservationNumber}}/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"number",
												"{{ReservationNumber}}",
												"status"
											]
										}
									},
									"response": []
								},
								{
									"name": "Изменение статуса со Стоимость подтверждена на Счет выставлен от ТК",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 1,\r",
													"    \"Pallets\": 1,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ID\", res.json().id);\r",
													"\r",
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations/\" + pm.variables.get(\"ID\") + \"/status\",\r",
													"    method: \"PUT\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"tkFmOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"    mode: 'raw',\r",
													"    raw: JSON.stringify({ \r",
													"        \"status\": \"Delivered\",\r",
													"        \"comment\": null\r",
													"\r",
													"})  \r",
													"    } \r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.json().status).to.be.eql(\"Delivered\");\r",
													"        pm.variables.set(\"ID\", res.json().id);\r",
													"\r",
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations/\" + pm.variables.get(\"ID\") + \"/status\",\r",
													"    method: \"PUT\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"    mode: 'raw',\r",
													"    raw: JSON.stringify({ \r",
													"        \"status\": \"CostConfirmed\",\r",
													"        \"comment\": null\r",
													"\r",
													"})  \r",
													"    } \r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.json().status).to.be.eql(\"CostConfirmed\");\r",
													"        pm.variables.set(\"ID\", res.json().id);\r",
													"     }\r",
													"    )\r",
													"     }\r",
													"    )\r",
													"     });\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"const statusName = \"Invoiced\";\r",
													"const companyType = \"Carrier\";\r",
													"const statusComment = pm.variables.get(\"comment\") + \" Status\";\r",
													"\r",
													"pm.test(\"Проверка, что статус изменен\", function () {\r",
													"  pm.expect(jsonData.status).to.eql(statusName);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что комментарий компании добавлен\", function () { \r",
													"    commentNode = jsonData.comments.find(x => x.company.type === companyType);\r",
													"    pm.expect(commentNode.comment).to.eql(statusComment);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tkFmOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"status\": \"Invoiced\",\n    \"comment\": \"{{comment}} Status\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/{{ID}}/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"{{ID}}",
												"status"
											]
										}
									},
									"response": []
								},
								{
									"name": "Изменение статуса Счет выставлен на Завершено от ГО",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 1,\r",
													"    \"Pallets\": 1,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ID\", res.json().id);\r",
													"\r",
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations/\" + pm.variables.get(\"ID\") + \"/status\",\r",
													"    method: \"PUT\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"tkFmOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"    mode: 'raw',\r",
													"    raw: JSON.stringify({ \r",
													"        \"status\": \"Delivered\",\r",
													"        \"comment\": null\r",
													"\r",
													"})  \r",
													"    } \r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.json().status).to.be.eql(\"Delivered\");\r",
													"        pm.variables.set(\"ID\", res.json().id);\r",
													"\r",
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations/\" + pm.variables.get(\"ID\") + \"/status\",\r",
													"    method: \"PUT\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"    mode: 'raw',\r",
													"    raw: JSON.stringify({ \r",
													"        \"status\": \"CostConfirmed\",\r",
													"        \"comment\": null\r",
													"\r",
													"})  \r",
													"    } \r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.json().status).to.be.eql(\"CostConfirmed\");\r",
													"        pm.variables.set(\"ID\", res.json().id);\r",
													"\r",
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations/\" + pm.variables.get(\"ID\") + \"/status\",\r",
													"    method: \"PUT\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"tkFmOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"    mode: 'raw',\r",
													"    raw: JSON.stringify({ \r",
													"        \"status\": \"Invoiced\",\r",
													"        \"comment\": null\r",
													"\r",
													"})  \r",
													"    } \r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.json().status).to.be.eql(\"Invoiced\");\r",
													"        pm.variables.set(\"ID\", res.json().id);\r",
													"     }\r",
													"     )\r",
													"     }\r",
													"     )\r",
													"     }\r",
													"     )\r",
													"     });\r",
													"\r",
													"\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"const statusName = \"Closed\";\r",
													"const companyType = \"Consignor\";\r",
													"const statusComment = pm.variables.get(\"comment\") + \" Status\";\r",
													"\r",
													"pm.test(\"Проверка, что статус изменен\", function () {\r",
													"  pm.expect(jsonData.status).to.eql(statusName);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что комментарий компании добавлен\", function () { \r",
													"    commentNode = jsonData.comments.find(x => x.company.type === companyType);\r",
													"    pm.expect(commentNode.comment).to.eql(statusComment);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{goPoolingOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"status\": \"Closed\",\n    \"comment\": \"{{comment}} Status\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/{{ID}}/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"{{ID}}",
												"status"
											]
										}
									},
									"response": []
								},
								{
									"name": "Ошибка при попытке изменения статуса Исполняется на Холостая подача",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 1,\r",
													"    \"Pallets\": 1,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ID\", res.json().id);\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что ошибка соответствует ожидаемой\", function () {\r",
													"     pm.expect(jsonData.error).to.eql(\"Нельзя перевести в статус Холостая подача из Исполняется\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tkFmOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"status\": \"Idled\",\n    \"comment\": \"{{comment}} Status\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/{{ID}}/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"{{ID}}",
												"status"
											]
										}
									},
									"response": []
								},
								{
									"name": "Ошибка при попытке изменения статуса Исполняется на Срыв поставки",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 1,\r",
													"    \"Pallets\": 1,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ID\", res.json().id);\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что ошибка соответствует ожидаемой\", function () {\r",
													"     pm.expect(jsonData.error).to.eql(\"Нельзя перевести в статус Срыв поставки из Исполняется\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{goPoolingOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"status\": \"Disrupted\",\n    \"comment\": \"{{comment}} Status\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/{{ID}}/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"{{ID}}",
												"status"
											]
										}
									},
									"response": []
								},
								{
									"name": "Ошибка при попытке изменения статуса Исполняется на На подтверждении в ТК",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 1,\r",
													"    \"Pallets\": 1,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ID\", res.json().id);\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что ошибка соответствует ожидаемой\", function () {\r",
													"     pm.expect(jsonData.error).to.eql(\"Нельзя перевести в статус На подтверждении в ТК из Исполняется\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{goPoolingOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"status\": \"OnConfirmation\",\n    \"comment\": \"{{comment}} Status\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/{{ID}}/status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"{{ID}}",
												"status"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var moment = require('moment');",
											"pm.variables.set(\"currentDate\", moment().add(1, 'week').format(\"YYYY-MM-DD\"));",
											"pm.variables.set(\"currentDate + a week\", moment().add(2, 'week').format(\"YYYY-MM-DD\"));",
											"",
											"const number = pm.variables.replaceIn(\"{{$randomInt}}\");",
											"pm.variables.set(\"number\", number);",
											"",
											"const com = pm.variables.replaceIn(\"{{$randomCity}}\");",
											"pm.variables.set(\"comment\", com);",
											"",
											"pm.sendRequest({",
											"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/slots?consolidationDateFrom=\" + pm.variables.get(\"currentDate\") + \"&consolidationDateTo=\" + pm.variables.get(\"currentDate + a week\") + \"&shippingRegionId=\" + pm.globals.get(\"MoscowShippingRegion\") + \"&UnloadingWarehouseId=\" + pm.globals.get(\"KirovUnloadingWarehouse\") + \"&carrierId=\" + pm.globals.get(\"FMCarrier\"),",
											"    method: \"GET\",",
											"    header: {",
											"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),",
											"    },",
											"},",
											"    function (err, res) {",
											"        console.log(res.json());",
											"        pm.expect(res.status).to.eql(\"OK\");",
											"        pm.expect(res.json()).to.not.be.empty;",
											"        pm.variables.set(\"slotId\", res.json()[1].id);",
											"        pm.variables.set(\"productType\", res.json()[1].productTypes[0]);",
											"        pm.variables.set(\"carrier\", res.json()[1].carrier.id);",
											"        pm.variables.set(\"client\", res.json()[1].client.id);",
											"        pm.variables.set(\"carType\", res.json()[1].carType);",
											"        pm.variables.set(\"unloadingWarehouse\", res.json()[1].unloadingWarehouse.id);",
											"        pm.variables.set(\"consolidationDate\", res.json()[1].consolidationDate);",
											"         pm.variables.set(\"departureDate\", res.json()[1].departureDate); ",
											"        pm.variables.set(\"deliveryDate\", res.json()[1].deliveryDate);",
											"        pm.variables.set(\"deliveryDate\", res.json()[1].deliveryDate);",
											"    });",
											"",
											"pm.sendRequest({",
											"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/slots?consolidationDateFrom=\" + pm.variables.get(\"currentDate\") + \"&consolidationDateTo=\" + pm.variables.get(\"currentDate + a week\") + \"&shippingRegionId=\" + pm.globals.get(\"MoscowShippingRegion\") + \"&UnloadingWarehouseId=\" + pm.globals.get(\"KirovUnloadingWarehouse\") + \"&carrierId=\" + pm.globals.get(\"ItecoCarrier\"),",
											"    method: \"GET\",",
											"    header: {",
											"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),",
											"    },",
											"},",
											"    function (err, res) {",
											"        console.log(res.json());",
											"        pm.expect(res.status).to.eql(\"OK\");",
											"        pm.expect(res.json()).to.not.be.empty;",
											"        pm.variables.set(\"slotIdIteco\", res.json()[0].id);",
											"        pm.variables.set(\"productTypeIteco\", res.json()[0].productTypes[0]);",
											"        pm.variables.set(\"carrierIteco\", res.json()[0].carrier.id);",
											"        pm.variables.set(\"clientIteco\", res.json()[0].client.id);",
											"        pm.variables.set(\"carTypeIteco\", res.json()[0].carType);",
											"        pm.variables.set(\"unloadingWarehouseIteco\", res.json()[0].unloadingWarehouse.id);",
											"        pm.variables.set(\"consolidationDateIteco\", res.json()[0].consolidationDate);",
											"        pm.variables.set(\"departureDateIteco\", res.json()[0].departureDate); ",
											"        pm.variables.set(\"deliveryDateIteco\", res.json()[0].deliveryDate);",
											"        pm.variables.set(\"deliveryDateIteco\", res.json()[0].deliveryDate);",
											"    });"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "PointStatus",
							"item": [
								{
									"name": "Изменение статусов путевых точек бронирования, Машина назначена от ТК",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 3,\r",
													"    \"Pallets\": 3,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 2,\r",
													"        \"PositionTo\": 2,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 3,\r",
													"        \"PositionTo\": 3,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ID\", res.json().id);\r",
													"        pm.variables.set(\"loadDateTimeArrived\", res.json().loadingPoints[0].dateTimeArrived);\r",
													"        pm.variables.set(\"loadDateTimeDeparted\", res.json().loadingPoints[0].dateTimeDeparted);\r",
													"        pm.variables.set(\"loadDateTimeArrivedByController\", res.json().loadingPoints[0].dateTimeArrivedByController);\r",
													"        pm.variables.set(\"loadDateTimeDepartedByController\", res.json().loadingPoints[0].dateTimeDepartedByController); \r",
													"        pm.variables.set(\"unloadDateTimeArrived\", res.json().unloadingPoints[0].dateTimeArrived);\r",
													"        pm.variables.set(\"unloadDateTimeDeparted\", res.json().unloadingPoints[0].dateTimeDeparted);\r",
													"        pm.variables.set(\"unloadDateTimeArrivedByController\", res.json().unloadingPoints[0].dateTimeArrivedByController);\r",
													"        pm.variables.set(\"unloadDateTimeDepartedByController\", res.json().unloadingPoints[0].dateTimeDepartedByController);\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"const statusName = \"Appointed\";\r",
													"const oldLoadDateTimeArrived = pm.variables.get(\"loadDateTimeArrived\");\r",
													"const oldLoadDateTimeDeparted = pm.variables.get(\"loadDateTimeDeparted\");\r",
													"const oldLoadDateTimeArrivedByController = pm.variables.get(\"loadDateTimeArrivedByController\");\r",
													"const oldLoadDateTimeDepartedByController = pm.variables.get(\"loadDateTimeDepartedByController\");\r",
													"const oldUnloadDateTimeArrived = pm.variables.get(\"unloadDateTimeArrived\");\r",
													"const oldUnloadDateTimeDeparted = pm.variables.get(\"unloadDateTimeDeparted\");\r",
													"const oldUnloadDateTimeArrivedByController = pm.variables.get(\"unloadDateTimeArrivedByController\");\r",
													"const oldUnloadDateTimeDepartedByController = pm.variables.get(\"unloadDateTimeDepartedByController\");\r",
													"\r",
													"pm.test(\"Проверка, что статус путевой точки отправки изменен\", function () {\r",
													"  pm.expect(jsonData.loadingPoints[0].status).to.eql(statusName);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что статус путевой точки доставки изменен\", function () {\r",
													"  pm.expect(jsonData.loadingPoints[0].status).to.eql(statusName);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что даты в путевых точках НЕ изменены\", function () {\r",
													"  pm.expect(jsonData.loadingPoints[0].dateTimeArrived).to.eql(oldLoadDateTimeArrived);\r",
													"  pm.expect(jsonData.loadingPoints[0].dateTimeDeparted).to.eql(oldLoadDateTimeDeparted);\r",
													"  pm.expect(jsonData.loadingPoints[0].dateTimeArrivedByController).to.eql(oldLoadDateTimeArrivedByController);\r",
													"  pm.expect(jsonData.loadingPoints[0].dateTimeDepartedByController).to.eql(oldLoadDateTimeDepartedByController);\r",
													"  pm.expect(jsonData.unloadingPoints[0].dateTimeArrived).to.eql(oldUnloadDateTimeArrived);\r",
													"  pm.expect(jsonData.unloadingPoints[0].dateTimeDeparted).to.eql(oldUnloadDateTimeDeparted);\r",
													"  pm.expect(jsonData.unloadingPoints[0].dateTimeArrivedByController).to.eql(oldUnloadDateTimeArrivedByController);\r",
													"  pm.expect(jsonData.unloadingPoints[0].dateTimeDepartedByController).to.eql(oldUnloadDateTimeDepartedByController);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tkFmOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"status\": \"Appointed\",\n        \"type\": \"Loading\",\n        \"index\": 0,\n        \"warehouse\": {\n            \"id\": \"000000000000000000000000\",\n            \"foreignId\": null\n        },\n        \"dateTimeArrived\": \"{{consolidationDate}}T04:46:30\",\n        \"dateTimeDeparted\": \"{{consolidationDate}}T16:56:33\"\n    },\n    {\n        \"status\": \"Appointed\",\n        \"type\": \"Unloading\",\n        \"index\": 0,\n        \"warehouse\": {\n            \"id\": \"000000000000000000000000\",\n            \"foreignId\": null\n        },\n        \"dateTimeArrived\": \"{{consolidationDate}}T14:51:58\",\n        \"dateTimeDeparted\": \"{{consolidationDate}}T17:38:10\"\n    }\n]\n"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/{{ID}}/point-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"{{ID}}",
												"point-status"
											]
										}
									},
									"response": []
								},
								{
									"name": "Изменение статусов путевых точек бронирования, Машина прибыла от ТК",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 3,\r",
													"    \"Pallets\": 3,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 2,\r",
													"        \"PositionTo\": 2,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 3,\r",
													"        \"PositionTo\": 3,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ID\", res.json().id);\r",
													"        pm.variables.set(\"loadDateTimeArrived\", res.json().loadingPoints[0].dateTimeArrived);\r",
													"        pm.variables.set(\"loadDateTimeDeparted\", res.json().loadingPoints[0].dateTimeDeparted);\r",
													"        pm.variables.set(\"loadDateTimeArrivedByController\", res.json().loadingPoints[0].dateTimeArrivedByController);\r",
													"        pm.variables.set(\"loadDateTimeDepartedByController\", res.json().loadingPoints[0].dateTimeDepartedByController); \r",
													"        pm.variables.set(\"unloadDateTimeArrived\", res.json().unloadingPoints[0].dateTimeArrived);\r",
													"        pm.variables.set(\"unloadDateTimeDeparted\", res.json().unloadingPoints[0].dateTimeDeparted);\r",
													"        pm.variables.set(\"unloadDateTimeArrivedByController\", res.json().unloadingPoints[0].dateTimeArrivedByController);\r",
													"        pm.variables.set(\"unloadDateTimeDepartedByController\", res.json().unloadingPoints[0].dateTimeDepartedByController);\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"const statusName = \"Arrived\";\r",
													"const oldLoadDateTimeArrived = pm.variables.get(\"loadDateTimeArrived\");\r",
													"const oldLoadDateTimeDeparted = pm.variables.get(\"loadDateTimeDeparted\");\r",
													"const oldLoadDateTimeArrivedByController = pm.variables.get(\"loadDateTimeArrivedByController\");\r",
													"const oldLoadDateTimeDepartedByController = pm.variables.get(\"loadDateTimeDepartedByController\");\r",
													"const oldUnloadDateTimeArrived = pm.variables.get(\"unloadDateTimeArrived\");\r",
													"const oldUnloadDateTimeDeparted = pm.variables.get(\"unloadDateTimeDeparted\");\r",
													"const oldUnloadDateTimeArrivedByController = pm.variables.get(\"unloadDateTimeArrivedByController\");\r",
													"const oldUnloadDateTimeDepartedByController = pm.variables.get(\"unloadDateTimeDepartedByController\");\r",
													"\r",
													"pm.test(\"Проверка, что статус путевой точки отправки изменен\", function () {\r",
													"  pm.expect(jsonData.loadingPoints[0].status).to.eql(statusName);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что статус путевой точки доставки изменен\", function () {\r",
													"  pm.expect(jsonData.loadingPoints[0].status).to.eql(statusName);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что даты прибытия в путевых точках изменены\", function () {\r",
													"  pm.expect(jsonData.loadingPoints[0].dateTimeArrived).not.to.eql(oldLoadDateTimeArrived);\r",
													"  pm.expect(jsonData.unloadingPoints[0].dateTimeArrived).not.to.eql(oldUnloadDateTimeArrived);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что даты убытия в путевых точках НЕ изменены\", function () {\r",
													"  pm.expect(jsonData.loadingPoints[0].dateTimeDeparted).to.eql(oldLoadDateTimeDeparted);\r",
													"  pm.expect(jsonData.unloadingPoints[0].dateTimeDeparted).to.eql(oldUnloadDateTimeDeparted);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что даты по версии контролера в путевых точках НЕ изменены\", function () {\r",
													"  pm.expect(jsonData.loadingPoints[0].dateTimeArrivedByController).to.eql(oldLoadDateTimeArrivedByController);\r",
													"  pm.expect(jsonData.loadingPoints[0].dateTimeDepartedByController).to.eql(oldLoadDateTimeDepartedByController);\r",
													"  pm.expect(jsonData.unloadingPoints[0].dateTimeArrivedByController).to.eql(oldUnloadDateTimeArrivedByController);\r",
													"  pm.expect(jsonData.unloadingPoints[0].dateTimeDepartedByController).to.eql(oldUnloadDateTimeDepartedByController);\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tkFmOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"status\": \"Arrived\",\n        \"type\": \"Loading\",\n        \"index\": 0,\n        \"warehouse\": {\n            \"id\": \"000000000000000000000000\",\n            \"foreignId\": null\n        },\n        \"dateTimeArrived\": \"{{consolidationDate}}T04:46:30\",\n        \"dateTimeDeparted\": \"{{consolidationDate}}T16:56:33\"\n    },\n    {\n        \"status\": \"Arrived\",\n        \"type\": \"Unloading\",\n        \"index\": 0,\n        \"warehouse\": {\n            \"id\": \"000000000000000000000000\",\n            \"foreignId\": null\n        },\n        \"dateTimeArrived\": \"{{consolidationDate}}T14:51:58\",\n        \"dateTimeDeparted\": \"{{consolidationDate}}T17:38:10\"\n    }\n]\n"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/{{ID}}/point-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"{{ID}}",
												"point-status"
											]
										}
									},
									"response": []
								},
								{
									"name": "Изменение статусов путевых точек бронирования, Машина убыла от ТК",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 3,\r",
													"    \"Pallets\": 3,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 2,\r",
													"        \"PositionTo\": 2,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 3,\r",
													"        \"PositionTo\": 3,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ID\", res.json().id);\r",
													"        pm.variables.set(\"loadDateTimeArrived\", res.json().loadingPoints[0].dateTimeArrived);\r",
													"        pm.variables.set(\"loadDateTimeDeparted\", res.json().loadingPoints[0].dateTimeDeparted);\r",
													"        pm.variables.set(\"loadDateTimeArrivedByController\", res.json().loadingPoints[0].dateTimeArrivedByController);\r",
													"        pm.variables.set(\"loadDateTimeDepartedByController\", res.json().loadingPoints[0].dateTimeDepartedByController); \r",
													"        pm.variables.set(\"unloadDateTimeArrived\", res.json().unloadingPoints[0].dateTimeArrived);\r",
													"        pm.variables.set(\"unloadDateTimeDeparted\", res.json().unloadingPoints[0].dateTimeDeparted);\r",
													"        pm.variables.set(\"unloadDateTimeArrivedByController\", res.json().unloadingPoints[0].dateTimeArrivedByController);\r",
													"        pm.variables.set(\"unloadDateTimeDepartedByController\", res.json().unloadingPoints[0].dateTimeDepartedByController);\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"const statusName = \"Departed\";\r",
													"const oldLoadDateTimeArrived = pm.variables.get(\"loadDateTimeArrived\");\r",
													"const oldLoadDateTimeDeparted = pm.variables.get(\"loadDateTimeDeparted\");\r",
													"const oldLoadDateTimeArrivedByController = pm.variables.get(\"loadDateTimeArrivedByController\");\r",
													"const oldLoadDateTimeDepartedByController = pm.variables.get(\"loadDateTimeDepartedByController\");\r",
													"const oldUnloadDateTimeArrived = pm.variables.get(\"unloadDateTimeArrived\");\r",
													"const oldUnloadDateTimeDeparted = pm.variables.get(\"unloadDateTimeDeparted\");\r",
													"const oldUnloadDateTimeArrivedByController = pm.variables.get(\"unloadDateTimeArrivedByController\");\r",
													"const oldUnloadDateTimeDepartedByController = pm.variables.get(\"unloadDateTimeDepartedByController\");\r",
													"\r",
													"pm.test(\"Проверка, что статус путевой точки отправки изменен\", function () {\r",
													"  pm.expect(jsonData.loadingPoints[0].status).to.eql(statusName);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что статус путевой точки доставки изменен\", function () {\r",
													"  pm.expect(jsonData.loadingPoints[0].status).to.eql(statusName);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что даты в путевых точках изменены\", function () {\r",
													"  pm.expect(jsonData.loadingPoints[0].dateTimeArrived).not.to.eql(oldLoadDateTimeArrived);\r",
													"  pm.expect(jsonData.unloadingPoints[0].dateTimeArrived).not.to.eql(oldUnloadDateTimeArrived);\r",
													"  pm.expect(jsonData.loadingPoints[0].dateTimeDeparted).not.to.eql(oldLoadDateTimeDeparted);\r",
													"  pm.expect(jsonData.unloadingPoints[0].dateTimeDeparted).not.to.eql(oldUnloadDateTimeDeparted);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что даты по версии контролера в путевых точках НЕ изменены\", function () {\r",
													"  pm.expect(jsonData.loadingPoints[0].dateTimeArrivedByController).to.eql(oldLoadDateTimeArrivedByController);\r",
													"  pm.expect(jsonData.loadingPoints[0].dateTimeDepartedByController).to.eql(oldLoadDateTimeDepartedByController);\r",
													"  pm.expect(jsonData.unloadingPoints[0].dateTimeArrivedByController).to.eql(oldUnloadDateTimeArrivedByController);\r",
													"  pm.expect(jsonData.unloadingPoints[0].dateTimeDepartedByController).to.eql(oldUnloadDateTimeDepartedByController);\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tkFmOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"status\": \"Departed\",\n        \"type\": \"Loading\",\n        \"index\": 0,\n        \"warehouse\": {\n            \"id\": \"000000000000000000000000\",\n            \"foreignId\": null\n        },\n        \"dateTimeArrived\": \"{{consolidationDate}}T04:46:30\",\n        \"dateTimeDeparted\": \"{{consolidationDate}}T16:56:33\"\n    },\n    {\n        \"status\": \"Departed\",\n        \"type\": \"Unloading\",\n        \"index\": 0,\n        \"warehouse\": {\n            \"id\": \"000000000000000000000000\",\n            \"foreignId\": null\n        },\n        \"dateTimeArrived\": \"{{consolidationDate}}T14:51:58\",\n        \"dateTimeDeparted\": \"{{consolidationDate}}T17:38:10\"\n    }\n]\n"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/{{ID}}/point-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"{{ID}}",
												"point-status"
											]
										}
									},
									"response": []
								},
								{
									"name": "Изменение статусов путевых точек бронирования, Машина убыла от ТС",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 3,\r",
													"    \"Pallets\": 3,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 2,\r",
													"        \"PositionTo\": 2,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 3,\r",
													"        \"PositionTo\": 3,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ID\", res.json().id);\r",
													"        pm.variables.set(\"loadDateTimeArrived\", res.json().loadingPoints[0].dateTimeArrived);\r",
													"        pm.variables.set(\"loadDateTimeDeparted\", res.json().loadingPoints[0].dateTimeDeparted);\r",
													"        pm.variables.set(\"loadDateTimeArrivedByController\", res.json().loadingPoints[0].dateTimeArrivedByController);\r",
													"        pm.variables.set(\"loadDateTimeDepartedByController\", res.json().loadingPoints[0].dateTimeDepartedByController); \r",
													"        pm.variables.set(\"unloadDateTimeArrived\", res.json().unloadingPoints[0].dateTimeArrived);\r",
													"        pm.variables.set(\"unloadDateTimeDeparted\", res.json().unloadingPoints[0].dateTimeDeparted);\r",
													"        pm.variables.set(\"unloadDateTimeArrivedByController\", res.json().unloadingPoints[0].dateTimeArrivedByController);\r",
													"        pm.variables.set(\"unloadDateTimeDepartedByController\", res.json().unloadingPoints[0].dateTimeDepartedByController);\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"const statusName = \"Departed\";\r",
													"const oldLoadDateTimeArrived = pm.variables.get(\"loadDateTimeArrived\");\r",
													"const oldLoadDateTimeDeparted = pm.variables.get(\"loadDateTimeDeparted\");\r",
													"const oldLoadDateTimeArrivedByController = pm.variables.get(\"loadDateTimeArrivedByController\");\r",
													"const oldLoadDateTimeDepartedByController = pm.variables.get(\"loadDateTimeDepartedByController\");\r",
													"const oldUnloadDateTimeArrived = pm.variables.get(\"unloadDateTimeArrived\");\r",
													"const oldUnloadDateTimeDeparted = pm.variables.get(\"unloadDateTimeDeparted\");\r",
													"const oldUnloadDateTimeArrivedByController = pm.variables.get(\"unloadDateTimeArrivedByController\");\r",
													"const oldUnloadDateTimeDepartedByController = pm.variables.get(\"unloadDateTimeDepartedByController\");\r",
													"\r",
													"pm.test(\"Проверка, что статус путевой точки отправки изменен\", function () {\r",
													"    pm.expect(jsonData.loadingPoints[0].status).to.eql(statusName);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что статус путевой точки доставки изменен\", function () {\r",
													"    pm.expect(jsonData.loadingPoints[0].status).to.eql(statusName);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что даты по версии контролера в путевых точках изменены\", function () {\r",
													"    pm.expect(jsonData.loadingPoints[0].dateTimeArrivedByController).not.to.eql(oldLoadDateTimeArrivedByController);\r",
													"    pm.expect(jsonData.unloadingPoints[0].dateTimeArrivedByController).not.to.eql(oldUnloadDateTimeArrivedByController);\r",
													"    pm.expect(jsonData.loadingPoints[0].dateTimeDepartedByController).not.to.eql(oldLoadDateTimeDepartedByController);\r",
													"    pm.expect(jsonData.unloadingPoints[0].dateTimeDepartedByController).not.to.eql(oldUnloadDateTimeDepartedByController);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что даты от ТК в путевых точках НЕ изменены\", function () {\r",
													"    pm.expect(jsonData.loadingPoints[0].dateTimeArrived).to.eql(oldLoadDateTimeArrived);\r",
													"    pm.expect(jsonData.unloadingPoints[0].dateTimeArrived).to.eql(oldUnloadDateTimeArrived);\r",
													"    pm.expect(jsonData.loadingPoints[0].dateTimeDeparted).to.eql(oldLoadDateTimeDeparted);\r",
													"    pm.expect(jsonData.unloadingPoints[0].dateTimeDeparted).to.eql(oldUnloadDateTimeDeparted);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tsTanderOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"status\": \"Departed\",\n        \"type\": \"Loading\",\n        \"index\": 0,\n        \"warehouse\": {\n            \"id\": \"000000000000000000000000\",\n            \"foreignId\": null\n        },\n        \"dateTimeArrived\": \"{{consolidationDate}}T04:46:30\",\n        \"dateTimeDeparted\": \"{{consolidationDate}}T16:56:33\"\n    },\n    {\n        \"status\": \"Departed\",\n        \"type\": \"Unloading\",\n        \"index\": 0,\n        \"warehouse\": {\n            \"id\": \"000000000000000000000000\",\n            \"foreignId\": null\n        },\n        \"dateTimeArrived\": \"{{consolidationDate}}T14:51:58\",\n        \"dateTimeDeparted\": \"{{consolidationDate}}T17:38:10\"\n    }\n]\n"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/{{ID}}/point-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"{{ID}}",
												"point-status"
											]
										}
									},
									"response": []
								},
								{
									"name": "Изменение статусов путевых точек бронирования, Машина убыла от ГО на статусе Доставлено",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 3,\r",
													"    \"Pallets\": 3,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 2,\r",
													"        \"PositionTo\": 2,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 3,\r",
													"        \"PositionTo\": 3,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ID\", res.json().id);\r",
													"        pm.variables.set(\"loadDateTimeArrived\", res.json().loadingPoints[0].dateTimeArrived);\r",
													"        pm.variables.set(\"loadDateTimeDeparted\", res.json().loadingPoints[0].dateTimeDeparted);\r",
													"        pm.variables.set(\"loadDateTimeArrivedByController\", res.json().loadingPoints[0].dateTimeArrivedByController);\r",
													"        pm.variables.set(\"loadDateTimeDepartedByController\", res.json().loadingPoints[0].dateTimeDepartedByController); \r",
													"        pm.variables.set(\"unloadDateTimeArrived\", res.json().unloadingPoints[0].dateTimeArrived);\r",
													"        pm.variables.set(\"unloadDateTimeDeparted\", res.json().unloadingPoints[0].dateTimeDeparted);\r",
													"        pm.variables.set(\"unloadDateTimeArrivedByController\", res.json().unloadingPoints[0].dateTimeArrivedByController);\r",
													"        pm.variables.set(\"unloadDateTimeDepartedByController\", res.json().unloadingPoints[0].dateTimeDepartedByController);\r",
													"\r",
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations/\" + pm.variables.get(\"ID\") + \"/status\",\r",
													"    method: \"PUT\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"tkFmOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"    mode: 'raw',\r",
													"    raw: JSON.stringify({ \r",
													"        \"status\": \"Delivered\",\r",
													"        \"comment\": null\r",
													"\r",
													"})  \r",
													"    } \r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.json().status).to.be.eql(\"Delivered\");\r",
													"        pm.variables.set(\"ID\", res.json().id);\r",
													"     }\r",
													"     )\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"const statusName = \"Departed\";\r",
													"const oldLoadDateTimeArrived = pm.variables.get(\"loadDateTimeArrived\");\r",
													"const oldLoadDateTimeDeparted = pm.variables.get(\"loadDateTimeDeparted\");\r",
													"const oldLoadDateTimeArrivedByController = pm.variables.get(\"loadDateTimeArrivedByController\");\r",
													"const oldLoadDateTimeDepartedByController = pm.variables.get(\"loadDateTimeDepartedByController\");\r",
													"const oldUnloadDateTimeArrived = pm.variables.get(\"unloadDateTimeArrived\");\r",
													"const oldUnloadDateTimeDeparted = pm.variables.get(\"unloadDateTimeDeparted\");\r",
													"const oldUnloadDateTimeArrivedByController = pm.variables.get(\"unloadDateTimeArrivedByController\");\r",
													"const oldUnloadDateTimeDepartedByController = pm.variables.get(\"unloadDateTimeDepartedByController\");\r",
													"\r",
													"pm.test(\"Проверка, что статус путевой точки отправки изменен\", function () {\r",
													"    pm.expect(jsonData.loadingPoints[0].status).to.eql(statusName);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что статус путевой точки доставки изменен\", function () {\r",
													"    pm.expect(jsonData.loadingPoints[0].status).to.eql(statusName);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что даты по версии контролера в путевых точках изменены\", function () {\r",
													"    pm.expect(jsonData.loadingPoints[0].dateTimeArrivedByController).not.to.eql(oldLoadDateTimeArrivedByController);\r",
													"    pm.expect(jsonData.unloadingPoints[0].dateTimeArrivedByController).not.to.eql(oldUnloadDateTimeArrivedByController);\r",
													"    pm.expect(jsonData.loadingPoints[0].dateTimeDepartedByController).not.to.eql(oldLoadDateTimeDepartedByController);\r",
													"    pm.expect(jsonData.unloadingPoints[0].dateTimeDepartedByController).not.to.eql(oldUnloadDateTimeDepartedByController);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что даты от ТК в путевых точках НЕ изменены\", function () {\r",
													"    pm.expect(jsonData.loadingPoints[0].dateTimeArrived).to.eql(oldLoadDateTimeArrived);\r",
													"    pm.expect(jsonData.unloadingPoints[0].dateTimeArrived).to.eql(oldUnloadDateTimeArrived);\r",
													"    pm.expect(jsonData.loadingPoints[0].dateTimeDeparted).to.eql(oldLoadDateTimeDeparted);\r",
													"    pm.expect(jsonData.unloadingPoints[0].dateTimeDeparted).to.eql(oldUnloadDateTimeDeparted);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{goPoolingOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"status\": \"Departed\",\n        \"type\": \"Loading\",\n        \"index\": 0,\n        \"warehouse\": {\n            \"id\": \"000000000000000000000000\",\n            \"foreignId\": null\n        },\n        \"dateTimeArrived\": \"{{consolidationDate}}T04:46:30\",\n        \"dateTimeDeparted\": \"{{consolidationDate}}T16:56:33\"\n    },\n    {\n        \"status\": \"Departed\",\n        \"type\": \"Unloading\",\n        \"index\": 0,\n        \"warehouse\": {\n            \"id\": \"000000000000000000000000\",\n            \"foreignId\": null\n        },\n        \"dateTimeArrived\": \"{{consolidationDate}}T14:51:58\",\n        \"dateTimeDeparted\": \"{{consolidationDate}}T17:38:10\"\n    }\n]\n"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/{{ID}}/point-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"{{ID}}",
												"point-status"
											]
										}
									},
									"response": []
								},
								{
									"name": "Изменение статусов путевых точек бронирования, Машина убыла от  TK на статусе Доставлено",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 3,\r",
													"    \"Pallets\": 3,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 2,\r",
													"        \"PositionTo\": 2,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 3,\r",
													"        \"PositionTo\": 3,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ID\", res.json().id);\r",
													"        pm.variables.set(\"loadDateTimeArrived\", res.json().loadingPoints[0].dateTimeArrived);\r",
													"        pm.variables.set(\"loadDateTimeDeparted\", res.json().loadingPoints[0].dateTimeDeparted);\r",
													"        pm.variables.set(\"loadDateTimeArrivedByController\", res.json().loadingPoints[0].dateTimeArrivedByController);\r",
													"        pm.variables.set(\"loadDateTimeDepartedByController\", res.json().loadingPoints[0].dateTimeDepartedByController); \r",
													"        pm.variables.set(\"unloadDateTimeArrived\", res.json().unloadingPoints[0].dateTimeArrived);\r",
													"        pm.variables.set(\"unloadDateTimeDeparted\", res.json().unloadingPoints[0].dateTimeDeparted);\r",
													"        pm.variables.set(\"unloadDateTimeArrivedByController\", res.json().unloadingPoints[0].dateTimeArrivedByController);\r",
													"        pm.variables.set(\"unloadDateTimeDepartedByController\", res.json().unloadingPoints[0].dateTimeDepartedByController);\r",
													"\r",
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations/\" + pm.variables.get(\"ID\") + \"/status\",\r",
													"    method: \"PUT\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"tkFmOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"    mode: 'raw',\r",
													"    raw: JSON.stringify({ \r",
													"        \"status\": \"Delivered\",\r",
													"        \"comment\": null\r",
													"\r",
													"})  \r",
													"    } \r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.json().status).to.be.eql(\"Delivered\");\r",
													"        pm.variables.set(\"ID\", res.json().id);\r",
													"     }\r",
													"     )\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"const statusName = \"Departed\";\r",
													"const oldLoadDateTimeArrived = pm.variables.get(\"loadDateTimeArrived\");\r",
													"const oldLoadDateTimeDeparted = pm.variables.get(\"loadDateTimeDeparted\");\r",
													"const oldLoadDateTimeArrivedByController = pm.variables.get(\"loadDateTimeArrivedByController\");\r",
													"const oldLoadDateTimeDepartedByController = pm.variables.get(\"loadDateTimeDepartedByController\");\r",
													"const oldUnloadDateTimeArrived = pm.variables.get(\"unloadDateTimeArrived\");\r",
													"const oldUnloadDateTimeDeparted = pm.variables.get(\"unloadDateTimeDeparted\");\r",
													"const oldUnloadDateTimeArrivedByController = pm.variables.get(\"unloadDateTimeArrivedByController\");\r",
													"const oldUnloadDateTimeDepartedByController = pm.variables.get(\"unloadDateTimeDepartedByController\");\r",
													"\r",
													"pm.test(\"Проверка, что статус путевой точки отправки изменен\", function () {\r",
													"  pm.expect(jsonData.loadingPoints[0].status).to.eql(statusName);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что статус путевой точки доставки изменен\", function () {\r",
													"  pm.expect(jsonData.loadingPoints[0].status).to.eql(statusName);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что даты в путевых точках изменены\", function () {\r",
													"  pm.expect(jsonData.loadingPoints[0].dateTimeArrived).not.to.eql(oldLoadDateTimeArrived);\r",
													"  pm.expect(jsonData.unloadingPoints[0].dateTimeArrived).not.to.eql(oldUnloadDateTimeArrived);\r",
													"  pm.expect(jsonData.loadingPoints[0].dateTimeDeparted).not.to.eql(oldLoadDateTimeDeparted);\r",
													"  pm.expect(jsonData.unloadingPoints[0].dateTimeDeparted).not.to.eql(oldUnloadDateTimeDeparted);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что даты по версии контролера в путевых точках НЕ изменены\", function () {\r",
													"  pm.expect(jsonData.loadingPoints[0].dateTimeArrivedByController).to.eql(oldLoadDateTimeArrivedByController);\r",
													"  pm.expect(jsonData.loadingPoints[0].dateTimeDepartedByController).to.eql(oldLoadDateTimeDepartedByController);\r",
													"  pm.expect(jsonData.unloadingPoints[0].dateTimeArrivedByController).to.eql(oldUnloadDateTimeArrivedByController);\r",
													"  pm.expect(jsonData.unloadingPoints[0].dateTimeDepartedByController).to.eql(oldUnloadDateTimeDepartedByController);\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tkFmOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"status\": \"Departed\",\n        \"type\": \"Loading\",\n        \"index\": 0,\n        \"warehouse\": {\n            \"id\": \"000000000000000000000000\",\n            \"foreignId\": null\n        },\n        \"dateTimeArrived\": \"{{consolidationDate}}T04:46:30\",\n        \"dateTimeDeparted\": \"{{consolidationDate}}T16:56:33\"\n    },\n    {\n        \"status\": \"Departed\",\n        \"type\": \"Unloading\",\n        \"index\": 0,\n        \"warehouse\": {\n            \"id\": \"000000000000000000000000\",\n            \"foreignId\": null\n        },\n        \"dateTimeArrived\": \"{{consolidationDate}}T14:51:58\",\n        \"dateTimeDeparted\": \"{{consolidationDate}}T17:38:10\"\n    }\n]\n"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/{{ID}}/point-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"{{ID}}",
												"point-status"
											]
										}
									},
									"response": []
								},
								{
									"name": "Изменение статусов путевых точек бронирования, с  UnitsFact от ТК",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 3,\r",
													"    \"Pallets\": 3,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 2,\r",
													"        \"PositionTo\": 2,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 3,\r",
													"        \"PositionTo\": 3,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ID\", res.json().id);\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"const statusName = \"Departed\";\r",
													"\r",
													"pm.test(\"Проверка, что статус путевой точки отправки изменен\", function () {\r",
													"  pm.expect(jsonData.loadingPoints[0].status).to.eql(statusName);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что статус путевой точки доставки изменен\", function () {\r",
													"  pm.expect(jsonData.unloadingPoints[0].status).to.eql(statusName);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что UnitsFact в путевых точках изменены\", function () {\r",
													"  pm.expect(jsonData.loadingPoints[0].unitsFact.pallets).to.eql(3);\r",
													"  pm.expect(jsonData.loadingPoints[0].unitsFact.items).to.eql(4);\r",
													"  pm.expect(jsonData.unloadingPoints[0].unitsFact.weight).to.eql(100.0);\r",
													"  pm.expect(jsonData.unloadingPoints[0].unitsFact.cost).to.eql(10.09);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tkFmOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"status\": \"Departed\",\n        \"type\": \"Loading\",\n        \"index\": 0,\n        \"warehouse\": {\n            \"id\": \"000000000000000000000000\",\n            \"foreignId\": null\n        },\n        \"dateTimeArrived\": \"{{consolidationDate}}T04:46:30\",\n        \"dateTimeDeparted\": \"{{consolidationDate}}T16:56:33\",\n        \"unitsFact\": {\n            \"palletType\": \"Euro\",\n            \"positionFrom\": 1,\n            \"positionTo\": 3,\n            \"pallets\": 3,\n            \"boxes\": 3,\n            \"items\": 4,\n            \"weight\": 100.11,\n            \"cost\": 2000.33,\n            \"volume\": 10,\n            \"length\": 10,\n            \"width\": 10,\n            \"height\": 10\n    }\n    },\n    {\n        \"status\": \"Departed\",\n        \"type\": \"Unloading\",\n        \"index\": 0,\n        \"warehouse\": {\n            \"id\": \"000000000000000000000000\",\n            \"foreignId\": null\n        },\n        \"dateTimeArrived\": \"{{consolidationDate}}T14:51:58\",\n        \"dateTimeDeparted\": \"{{consolidationDate}}T17:38:10\",\n        \"unitsFact\": {\n            \"palletType\": \"Euro\",\n            \"positionFrom\": 1,\n            \"positionTo\": 3,\n            \"pallets\": 3,\n            \"boxes\": 4,\n            \"items\": 4,\n            \"weight\": 100,\n            \"cost\": 10.09,\n            \"volume\": 20,\n            \"length\": 20,\n            \"width\": 20,\n            \"height\": 20\n    }\n    }\n]\n"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/{{ID}}/point-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"{{ID}}",
												"point-status"
											]
										}
									},
									"response": []
								},
								{
									"name": "Изменение статусов путевых точек бронирования, Машина убыла от ТК (поиск склада по foreinId)",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"tkFmOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 3,\r",
													"    \"Pallets\": 3,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 2,\r",
													"        \"PositionTo\": 2,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 3,\r",
													"        \"PositionTo\": 3,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ID\", res.json().id);\r",
													"        pm.variables.set(\"loadDateTimeArrived\", res.json().loadingPoints[0].dateTimeArrived);\r",
													"        pm.variables.set(\"loadDateTimeDeparted\", res.json().loadingPoints[0].dateTimeDeparted);\r",
													"        pm.variables.set(\"loadDateTimeArrivedByController\", res.json().loadingPoints[0].dateTimeArrivedByController);\r",
													"        pm.variables.set(\"loadDateTimeDepartedByController\", res.json().loadingPoints[0].dateTimeDepartedByController); \r",
													"        pm.variables.set(\"unloadDateTimeArrived\", res.json().unloadingPoints[0].dateTimeArrived);\r",
													"        pm.variables.set(\"unloadDateTimeDeparted\", res.json().unloadingPoints[0].dateTimeDeparted);\r",
													"        pm.variables.set(\"unloadDateTimeArrivedByController\", res.json().unloadingPoints[0].dateTimeArrivedByController);\r",
													"        pm.variables.set(\"unloadDateTimeDepartedByController\", res.json().unloadingPoints[0].dateTimeDepartedByController);\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"const statusName = \"Departed\";\r",
													"const oldLoadDateTimeArrived = pm.variables.get(\"loadDateTimeArrived\");\r",
													"const oldLoadDateTimeDeparted = pm.variables.get(\"loadDateTimeDeparted\");\r",
													"const oldLoadDateTimeArrivedByController = pm.variables.get(\"loadDateTimeArrivedByController\");\r",
													"const oldLoadDateTimeDepartedByController = pm.variables.get(\"loadDateTimeDepartedByController\");\r",
													"const oldUnloadDateTimeArrived = pm.variables.get(\"unloadDateTimeArrived\");\r",
													"const oldUnloadDateTimeDeparted = pm.variables.get(\"unloadDateTimeDeparted\");\r",
													"const oldUnloadDateTimeArrivedByController = pm.variables.get(\"unloadDateTimeArrivedByController\");\r",
													"const oldUnloadDateTimeDepartedByController = pm.variables.get(\"unloadDateTimeDepartedByController\");\r",
													"\r",
													"pm.test(\"Проверка, что статус путевой точки отправки изменен\", function () {\r",
													"  pm.expect(jsonData.loadingPoints[0].status).to.eql(statusName);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что статус путевой точки доставки изменен\", function () {\r",
													"  pm.expect(jsonData.loadingPoints[0].status).to.eql(statusName);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что даты в путевых точках НЕ изменены\", function () {\r",
													"  pm.expect(jsonData.loadingPoints[0].dateTimeArrived).to.eql(oldLoadDateTimeArrived);\r",
													"  pm.expect(jsonData.unloadingPoints[0].dateTimeArrived).to.eql(oldUnloadDateTimeArrived);\r",
													"  pm.expect(jsonData.loadingPoints[0].dateTimeDeparted).to.eql(oldLoadDateTimeDeparted);\r",
													"  pm.expect(jsonData.unloadingPoints[0].dateTimeDeparted).to.eql(oldUnloadDateTimeDeparted);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что даты по версии контролера в путевых точках изменены\", function () {\r",
													"  pm.expect(jsonData.loadingPoints[0].dateTimeArrivedByController).not.to.eql(oldLoadDateTimeArrivedByController);\r",
													"  pm.expect(jsonData.loadingPoints[0].dateTimeDepartedByController).not.to.eql(oldLoadDateTimeDepartedByController);\r",
													"  pm.expect(jsonData.unloadingPoints[0].dateTimeArrivedByController).not.to.eql(oldUnloadDateTimeArrivedByController);\r",
													"  pm.expect(jsonData.unloadingPoints[0].dateTimeDepartedByController).not.to.eql(oldUnloadDateTimeDepartedByController);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tkFmOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"status\": \"Departed\",\n        \"type\": \"Loading\",\n        \"warehouse\": {\n            \"id\": \"000000000000000000000000\",\n            \"foreignId\": \"ФМКОЛЕДИНО\"\n        },\n        \"dateTimeArrived\": \"{{consolidationDate}}T04:46:30\",\n        \"dateTimeDeparted\": \"{{consolidationDate}}T16:56:33\"\n    },\n    {\n        \"status\": \"Departed\",\n        \"type\": \"Unloading\",\n        \"warehouse\": {\n            \"id\": \"000000000000000000000000\",\n            \"foreignId\": \"ТАНДЕРКИРОВ\"\n        },\n        \"dateTimeArrived\": \"{{consolidationDate}}T14:51:58\",\n        \"dateTimeDeparted\": \"{{consolidationDate}}T17:38:10\"\n    }\n]\n"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/{{ID}}/point-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"{{ID}}",
												"point-status"
											]
										}
									},
									"response": []
								},
								{
									"name": "Изменение статусов путевых точек бронирования, с изменением даты отправки от ТК",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 3,\r",
													"    \"Pallets\": 3,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 2,\r",
													"        \"PositionTo\": 2,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 3,\r",
													"        \"PositionTo\": 3,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ID\", res.json().id);\r",
													"        pm.variables.set(\"loadDateTimeArrived\", res.json().loadingPoints[0].dateTimeArrived);\r",
													"        pm.variables.set(\"loadDateTimeDeparted\", res.json().loadingPoints[0].dateTimeDeparted);\r",
													"        pm.variables.set(\"loadDateTimeArrivedByController\", res.json().loadingPoints[0].dateTimeArrivedByController);\r",
													"        pm.variables.set(\"loadDateTimeDepartedByController\", res.json().loadingPoints[0].dateTimeDepartedByController); \r",
													"        pm.variables.set(\"unloadDateTimeArrived\", res.json().unloadingPoints[0].dateTimeArrived);\r",
													"        pm.variables.set(\"unloadDateTimeDeparted\", res.json().unloadingPoints[0].dateTimeDeparted);\r",
													"        pm.variables.set(\"unloadDateTimeArrivedByController\", res.json().unloadingPoints[0].dateTimeArrivedByController);\r",
													"        pm.variables.set(\"unloadDateTimeDepartedByController\", res.json().unloadingPoints[0].dateTimeDepartedByController);\r",
													"        pm.variables.set(\"loadingPointsDateTimeFrom\", res.json().loadingPoints[0].dateTime.from);\r",
													"        pm.variables.set(\"loadingPointsDateTimeTo\", res.json().loadingPoints[0].dateTime.to);\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"const statusName = \"Departed\";\r",
													"const oldLoadDateTimeArrived = pm.variables.get(\"loadDateTimeArrived\");\r",
													"const oldLoadDateTimeDeparted = pm.variables.get(\"loadDateTimeDeparted\");\r",
													"const oldLoadDateTimeArrivedByController = pm.variables.get(\"loadDateTimeArrivedByController\");\r",
													"const oldLoadDateTimeDepartedByController = pm.variables.get(\"loadDateTimeDepartedByController\");\r",
													"const oldUnloadDateTimeArrived = pm.variables.get(\"unloadDateTimeArrived\");\r",
													"const oldUnloadDateTimeDeparted = pm.variables.get(\"unloadDateTimeDeparted\");\r",
													"const oldUnloadDateTimeArrivedByController = pm.variables.get(\"unloadDateTimeArrivedByController\");\r",
													"const oldUnloadDateTimeDepartedByController = pm.variables.get(\"unloadDateTimeDepartedByController\");\r",
													"const oldLoadingPointsDateTimeFrom = pm.variables.get(\"loadingPointsDateTimeFrom\");\r",
													"const oldLoadingPointsDateTimeTo = pm.variables.get(\"loadingPointsDateTimeTo\");\r",
													"\r",
													"pm.test(\"Проверка, что статус путевой точки отправки изменен\", function () {\r",
													"  pm.expect(jsonData.loadingPoints[0].status).to.eql(statusName);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что статус путевой точки доставки изменен\", function () {\r",
													"  pm.expect(jsonData.loadingPoints[0].status).to.eql(statusName);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что даты в путевых точках изменены\", function () {\r",
													"  pm.expect(jsonData.loadingPoints[0].dateTimeArrived).not.to.eql(oldLoadDateTimeArrived);\r",
													"  pm.expect(jsonData.unloadingPoints[0].dateTimeArrived).not.to.eql(oldUnloadDateTimeArrived);\r",
													"  pm.expect(jsonData.loadingPoints[0].dateTimeDeparted).not.to.eql(oldLoadDateTimeDeparted);\r",
													"  pm.expect(jsonData.unloadingPoints[0].dateTimeDeparted).not.to.eql(oldUnloadDateTimeDeparted);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что даты по версии контролера в путевых точках НЕ изменены\", function () {\r",
													"  pm.expect(jsonData.loadingPoints[0].dateTimeArrivedByController).to.eql(oldLoadDateTimeArrivedByController);\r",
													"  pm.expect(jsonData.loadingPoints[0].dateTimeDepartedByController).to.eql(oldLoadDateTimeDepartedByController);\r",
													"  pm.expect(jsonData.unloadingPoints[0].dateTimeArrivedByController).to.eql(oldUnloadDateTimeArrivedByController);\r",
													"  pm.expect(jsonData.unloadingPoints[0].dateTimeDepartedByController).to.eql(oldUnloadDateTimeDepartedByController);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что даты отправки изменены\", function () {\r",
													"  pm.expect(jsonData.loadingPoints[0].dateTime.from).not.to.eql(oldLoadingPointsDateTimeFrom);\r",
													"  pm.expect(jsonData.unloadingPoints[0].dateTime.to).not.to.eql(oldLoadingPointsDateTimeTo);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tkFmOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"status\": \"Departed\",\n        \"type\": \"Loading\",\n        \"index\": 0,\n        \"warehouse\": {\n            \"id\": \"000000000000000000000000\",\n            \"foreignId\": null\n        },\n        \"dateTimeArrived\": \"{{consolidationDate}}T04:46:30\",\n        \"dateTimeDeparted\": \"{{consolidationDate}}T16:56:33\",\n        \"dateTime\": {\n            \"from\": \"{{consolidationDate}}T02:00:00\",\n            \"to\": \"{{consolidationDate}}T03:30:00\"\n    }\n    },\n    {\n        \"status\": \"Departed\",\n        \"type\": \"Unloading\",\n        \"index\": 0,\n        \"warehouse\": {\n            \"id\": \"000000000000000000000000\",\n            \"foreignId\": null\n        },\n        \"dateTimeArrived\": \"{{consolidationDate}}T14:51:58\",\n        \"dateTimeDeparted\": \"{{consolidationDate}}T17:38:10\"\n    }\n]\n"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/{{ID}}/point-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"{{ID}}",
												"point-status"
											]
										}
									},
									"response": []
								},
								{
									"name": "Ошибка при попытке изменения статусов путевых точек бронирования, с изменением даты отправки от ТК на статусе Доставлено",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 3,\r",
													"    \"Pallets\": 3,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 2,\r",
													"        \"PositionTo\": 2,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 3,\r",
													"        \"PositionTo\": 3,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ID\", res.json().id);\r",
													"\r",
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations/\" + pm.variables.get(\"ID\") + \"/status\",\r",
													"    method: \"PUT\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"tkFmOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"    mode: 'raw',\r",
													"    raw: JSON.stringify({ \r",
													"        \"status\": \"Delivered\",\r",
													"        \"comment\": null\r",
													"\r",
													"})  \r",
													"    } \r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.json().status).to.be.eql(\"Delivered\");\r",
													"        pm.variables.set(\"ID\", res.json().id);\r",
													"     }\r",
													"     )\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что ошибка соответствует ожидаемой\", function () {\r",
													"     pm.expect(jsonData.error).to.eql(\"Невозможно редактировать поле LoadingPoints.DateFrom в статусе Delivered, Невозможно редактировать поле LoadingPoints.DateTo в статусе Delivered\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tkFmOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"status\": \"Departed\",\n        \"type\": \"Loading\",\n        \"index\": 0,\n        \"warehouse\": {\n            \"id\": \"000000000000000000000000\",\n            \"foreignId\": null\n        },\n        \"dateTimeArrived\": \"{{consolidationDate}}T04:46:30\",\n        \"dateTimeDeparted\": \"{{consolidationDate}}T16:56:33\",\n        \"dateTime\": {\n            \"from\": \"{{consolidationDate}}T02:00:00\",\n            \"to\": \"{{consolidationDate}}T03:30:00\"\n    }\n    },\n    {\n        \"status\": \"Departed\",\n        \"type\": \"Unloading\",\n        \"index\": 0,\n        \"warehouse\": {\n            \"id\": \"000000000000000000000000\",\n            \"foreignId\": null\n        },\n        \"dateTimeArrived\": \"{{consolidationDate}}T14:51:58\",\n        \"dateTimeDeparted\": \"{{consolidationDate}}T17:38:10\"\n    }\n]\n"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/{{ID}}/point-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"{{ID}}",
												"point-status"
											]
										}
									},
									"response": []
								},
								{
									"name": "Ошибка при попытке изменения статусов путевых точек бронирования, Машина убыла от  TK на статусе Отменено ТК",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 3,\r",
													"    \"Pallets\": 3,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 2,\r",
													"        \"PositionTo\": 2,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 3,\r",
													"        \"PositionTo\": 3,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ID\", res.json().id);\r",
													"\r",
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations/\" + pm.variables.get(\"ID\") + \"/status\",\r",
													"    method: \"PUT\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"tkFmOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"    mode: 'raw',\r",
													"    raw: JSON.stringify({ \r",
													"        \"status\": \"CarrierCanceled\",\r",
													"        \"comment\": null\r",
													"\r",
													"})  \r",
													"    } \r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.json().status).to.be.eql(\"CarrierCanceled\");\r",
													"        pm.variables.set(\"ID\", res.json().id);\r",
													"     }\r",
													"     )\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что ошибка соответствует ожидаемой\", function () {\r",
													"     pm.expect(jsonData.error).to.eql(\"Невозможно редактировать поле LoadingPoints.Status в статусе CarrierCanceled, Невозможно редактировать поле LoadingPoints.DateTimeArrived в статусе CarrierCanceled, Невозможно редактировать поле LoadingPoints.DateTimeDeparted в статусе CarrierCanceled, Невозможно редактировать поле UnloadingPoints.S...\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tkFmOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"status\": \"Departed\",\n        \"type\": \"Loading\",\n        \"index\": 0,\n        \"warehouse\": {\n            \"id\": \"000000000000000000000000\",\n            \"foreignId\": null\n        },\n        \"dateTimeArrived\": \"{{consolidationDate}}T04:46:30\",\n        \"dateTimeDeparted\": \"{{consolidationDate}}T16:56:33\"\n    },\n    {\n        \"status\": \"Departed\",\n        \"type\": \"Unloading\",\n        \"index\": 0,\n        \"warehouse\": {\n            \"id\": \"000000000000000000000000\",\n            \"foreignId\": null\n        },\n        \"dateTimeArrived\": \"{{consolidationDate}}T14:51:58\",\n        \"dateTimeDeparted\": \"{{consolidationDate}}T17:38:10\"\n    }\n]\n"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/{{ID}}/point-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"{{ID}}",
												"point-status"
											]
										}
									},
									"response": []
								},
								{
									"name": "Изменение статусов путевых точек бронирования по номеру, Машина назначена от ГО",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 3,\r",
													"    \"Pallets\": 3,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 2,\r",
													"        \"PositionTo\": 2,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 3,\r",
													"        \"PositionTo\": 3,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ReservationNumber\", res.json().number);\r",
													"        pm.variables.set(\"loadDateTimeArrived\", res.json().loadingPoints[0].dateTimeArrived);\r",
													"        pm.variables.set(\"loadDateTimeDeparted\", res.json().loadingPoints[0].dateTimeDeparted);\r",
													"        pm.variables.set(\"loadDateTimeArrivedByController\", res.json().loadingPoints[0].dateTimeArrivedByController);\r",
													"        pm.variables.set(\"loadDateTimeDepartedByController\", res.json().loadingPoints[0].dateTimeDepartedByController); \r",
													"        pm.variables.set(\"unloadDateTimeArrived\", res.json().unloadingPoints[0].dateTimeArrived);\r",
													"        pm.variables.set(\"unloadDateTimeDeparted\", res.json().unloadingPoints[0].dateTimeDeparted);\r",
													"        pm.variables.set(\"unloadDateTimeArrivedByController\", res.json().unloadingPoints[0].dateTimeArrivedByController);\r",
													"        pm.variables.set(\"unloadDateTimeDepartedByController\", res.json().unloadingPoints[0].dateTimeDepartedByController);\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"const statusName = \"Appointed\";\r",
													"const oldLoadDateTimeArrived = pm.variables.get(\"loadDateTimeArrived\");\r",
													"const oldLoadDateTimeDeparted = pm.variables.get(\"loadDateTimeDeparted\");\r",
													"const oldLoadDateTimeArrivedByController = pm.variables.get(\"loadDateTimeArrivedByController\");\r",
													"const oldLoadDateTimeDepartedByController = pm.variables.get(\"loadDateTimeDepartedByController\");\r",
													"const oldUnloadDateTimeArrived = pm.variables.get(\"unloadDateTimeArrived\");\r",
													"const oldUnloadDateTimeDeparted = pm.variables.get(\"unloadDateTimeDeparted\");\r",
													"const oldUnloadDateTimeArrivedByController = pm.variables.get(\"unloadDateTimeArrivedByController\");\r",
													"const oldUnloadDateTimeDepartedByController = pm.variables.get(\"unloadDateTimeDepartedByController\");\r",
													"\r",
													"pm.test(\"Проверка, что статус путевой точки отправки изменен\", function () {\r",
													"  pm.expect(jsonData.loadingPoints[0].status).to.eql(statusName);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что статус путевой точки доставки изменен\", function () {\r",
													"  pm.expect(jsonData.loadingPoints[0].status).to.eql(statusName);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что даты в путевых точках НЕ изменены\", function () {\r",
													"  pm.expect(jsonData.loadingPoints[0].dateTimeArrived).to.eql(oldLoadDateTimeArrived);\r",
													"  pm.expect(jsonData.loadingPoints[0].dateTimeDeparted).to.eql(oldLoadDateTimeDeparted);\r",
													"  pm.expect(jsonData.loadingPoints[0].dateTimeArrivedByController).to.eql(oldLoadDateTimeArrivedByController);\r",
													"  pm.expect(jsonData.loadingPoints[0].dateTimeDepartedByController).to.eql(oldLoadDateTimeDepartedByController);\r",
													"  pm.expect(jsonData.unloadingPoints[0].dateTimeArrived).to.eql(oldUnloadDateTimeArrived);\r",
													"  pm.expect(jsonData.unloadingPoints[0].dateTimeDeparted).to.eql(oldUnloadDateTimeDeparted);\r",
													"  pm.expect(jsonData.unloadingPoints[0].dateTimeArrivedByController).to.eql(oldUnloadDateTimeArrivedByController);\r",
													"  pm.expect(jsonData.unloadingPoints[0].dateTimeDepartedByController).to.eql(oldUnloadDateTimeDepartedByController);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{goPoolingOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"status\": \"Appointed\",\n        \"type\": \"Loading\",\n        \"index\": 0,\n        \"warehouse\": {\n            \"id\": \"000000000000000000000000\",\n            \"foreignId\": null\n        },\n        \"dateTimeArrived\": \"{{consolidationDate}}T04:46:30\",\n        \"dateTimeDeparted\": \"{{consolidationDate}}T16:56:33\"\n    },\n    {\n        \"status\": \"Appointed\",\n        \"type\": \"Unloading\",\n        \"index\": 0,\n        \"warehouse\": {\n            \"id\": \"000000000000000000000000\",\n            \"foreignId\": null\n        },\n        \"dateTimeArrived\": \"{{consolidationDate}}T14:51:58\",\n        \"dateTimeDeparted\": \"{{consolidationDate}}T17:38:10\"\n    }\n]\n"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/number/{{ReservationNumber}}/point-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"number",
												"{{ReservationNumber}}",
												"point-status"
											]
										}
									},
									"response": []
								},
								{
									"name": "Изменение статусов путевых точек бронирования по номеру, Машина прибыла от ГО",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 3,\r",
													"    \"Pallets\": 3,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 2,\r",
													"        \"PositionTo\": 2,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 3,\r",
													"        \"PositionTo\": 3,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ReservationNumber\", res.json().number);\r",
													"        pm.variables.set(\"loadDateTimeArrived\", res.json().loadingPoints[0].dateTimeArrived);\r",
													"        pm.variables.set(\"loadDateTimeDeparted\", res.json().loadingPoints[0].dateTimeDeparted);\r",
													"        pm.variables.set(\"loadDateTimeArrivedByController\", res.json().loadingPoints[0].dateTimeArrivedByController);\r",
													"        pm.variables.set(\"loadDateTimeDepartedByController\", res.json().loadingPoints[0].dateTimeDepartedByController); \r",
													"        pm.variables.set(\"unloadDateTimeArrived\", res.json().unloadingPoints[0].dateTimeArrived);\r",
													"        pm.variables.set(\"unloadDateTimeDeparted\", res.json().unloadingPoints[0].dateTimeDeparted);\r",
													"        pm.variables.set(\"unloadDateTimeArrivedByController\", res.json().unloadingPoints[0].dateTimeArrivedByController);\r",
													"        pm.variables.set(\"unloadDateTimeDepartedByController\", res.json().unloadingPoints[0].dateTimeDepartedByController);\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"const statusName = \"Arrived\";\r",
													"const oldLoadDateTimeArrived = pm.variables.get(\"loadDateTimeArrived\");\r",
													"const oldLoadDateTimeDeparted = pm.variables.get(\"loadDateTimeDeparted\");\r",
													"const oldLoadDateTimeArrivedByController = pm.variables.get(\"loadDateTimeArrivedByController\");\r",
													"const oldLoadDateTimeDepartedByController = pm.variables.get(\"loadDateTimeDepartedByController\");\r",
													"const oldUnloadDateTimeArrived = pm.variables.get(\"unloadDateTimeArrived\");\r",
													"const oldUnloadDateTimeDeparted = pm.variables.get(\"unloadDateTimeDeparted\");\r",
													"const oldUnloadDateTimeArrivedByController = pm.variables.get(\"unloadDateTimeArrivedByController\");\r",
													"const oldUnloadDateTimeDepartedByController = pm.variables.get(\"unloadDateTimeDepartedByController\");\r",
													"\r",
													"pm.test(\"Проверка, что статус путевой точки отправки изменен\", function () {\r",
													"    pm.expect(jsonData.loadingPoints[0].status).to.eql(statusName);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что статус путевой точки доставки изменен\", function () {\r",
													"    pm.expect(jsonData.loadingPoints[0].status).to.eql(statusName);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что даты прибытия по версии контролера в путевых точках изменены\", function () {\r",
													"    pm.expect(jsonData.loadingPoints[0].dateTimeArrivedByController).not.to.eql(oldLoadDateTimeArrivedByController);\r",
													"    pm.expect(jsonData.unloadingPoints[0].dateTimeArrivedByController).not.to.eql(oldUnloadDateTimeArrivedByController);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что даты убытия по версии контролера в путевых точках НЕ изменены\", function () {\r",
													"    pm.expect(jsonData.loadingPoints[0].dateTimeDepartedByController).to.eql(oldLoadDateTimeDepartedByController);\r",
													"    pm.expect(jsonData.unloadingPoints[0].dateTimeDepartedByController).to.eql(oldUnloadDateTimeDepartedByController);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что даты от ТК в путевых точках НЕ изменены\", function () {\r",
													"    pm.expect(jsonData.loadingPoints[0].dateTimeArrived).to.eql(oldLoadDateTimeArrived);\r",
													"    pm.expect(jsonData.unloadingPoints[0].dateTimeArrived).to.eql(oldUnloadDateTimeArrived);\r",
													"    pm.expect(jsonData.loadingPoints[0].dateTimeDeparted).to.eql(oldLoadDateTimeDeparted);\r",
													"    pm.expect(jsonData.unloadingPoints[0].dateTimeDeparted).to.eql(oldUnloadDateTimeDeparted);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{goPoolingOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"status\": \"Arrived\",\n        \"type\": \"Loading\",\n        \"index\": 0,\n        \"warehouse\": {\n            \"id\": \"000000000000000000000000\",\n            \"foreignId\": null\n        },\n        \"dateTimeArrived\": \"{{consolidationDate}}T04:46:30\",\n        \"dateTimeDeparted\": \"{{consolidationDate}}T16:56:33\"\n    },\n    {\n        \"status\": \"Arrived\",\n        \"type\": \"Unloading\",\n        \"index\": 0,\n        \"warehouse\": {\n            \"id\": \"000000000000000000000000\",\n            \"foreignId\": null\n        },\n        \"dateTimeArrived\": \"{{consolidationDate}}T14:51:58\",\n        \"dateTimeDeparted\": \"{{consolidationDate}}T17:38:10\"\n    }\n]\n"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/number/{{ReservationNumber}}/point-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"number",
												"{{ReservationNumber}}",
												"point-status"
											]
										}
									},
									"response": []
								},
								{
									"name": "Изменение статусов путевых точек бронирования по номеру, Машина убыла от ГО",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 3,\r",
													"    \"Pallets\": 3,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 2,\r",
													"        \"PositionTo\": 2,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 3,\r",
													"        \"PositionTo\": 3,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ReservationNumber\", res.json().number);\r",
													"        pm.variables.set(\"loadDateTimeArrived\", res.json().loadingPoints[0].dateTimeArrived);\r",
													"        pm.variables.set(\"loadDateTimeDeparted\", res.json().loadingPoints[0].dateTimeDeparted);\r",
													"        pm.variables.set(\"loadDateTimeArrivedByController\", res.json().loadingPoints[0].dateTimeArrivedByController);\r",
													"        pm.variables.set(\"loadDateTimeDepartedByController\", res.json().loadingPoints[0].dateTimeDepartedByController); \r",
													"        pm.variables.set(\"unloadDateTimeArrived\", res.json().unloadingPoints[0].dateTimeArrived);\r",
													"        pm.variables.set(\"unloadDateTimeDeparted\", res.json().unloadingPoints[0].dateTimeDeparted);\r",
													"        pm.variables.set(\"unloadDateTimeArrivedByController\", res.json().unloadingPoints[0].dateTimeArrivedByController);\r",
													"        pm.variables.set(\"unloadDateTimeDepartedByController\", res.json().unloadingPoints[0].dateTimeDepartedByController);\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"const statusName = \"Departed\";\r",
													"const oldLoadDateTimeArrived = pm.variables.get(\"loadDateTimeArrived\");\r",
													"const oldLoadDateTimeDeparted = pm.variables.get(\"loadDateTimeDeparted\");\r",
													"const oldLoadDateTimeArrivedByController = pm.variables.get(\"loadDateTimeArrivedByController\");\r",
													"const oldLoadDateTimeDepartedByController = pm.variables.get(\"loadDateTimeDepartedByController\");\r",
													"const oldUnloadDateTimeArrived = pm.variables.get(\"unloadDateTimeArrived\");\r",
													"const oldUnloadDateTimeDeparted = pm.variables.get(\"unloadDateTimeDeparted\");\r",
													"const oldUnloadDateTimeArrivedByController = pm.variables.get(\"unloadDateTimeArrivedByController\");\r",
													"const oldUnloadDateTimeDepartedByController = pm.variables.get(\"unloadDateTimeDepartedByController\");\r",
													"\r",
													"pm.test(\"Проверка, что статус путевой точки отправки изменен\", function () {\r",
													"    pm.expect(jsonData.loadingPoints[0].status).to.eql(statusName);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что статус путевой точки доставки изменен\", function () {\r",
													"    pm.expect(jsonData.loadingPoints[0].status).to.eql(statusName);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что даты по версии контролера в путевых точках изменены\", function () {\r",
													"    pm.expect(jsonData.loadingPoints[0].dateTimeArrivedByController).not.to.eql(oldLoadDateTimeArrivedByController);\r",
													"    pm.expect(jsonData.unloadingPoints[0].dateTimeArrivedByController).not.to.eql(oldUnloadDateTimeArrivedByController);\r",
													"    pm.expect(jsonData.loadingPoints[0].dateTimeDepartedByController).not.to.eql(oldLoadDateTimeDepartedByController);\r",
													"    pm.expect(jsonData.unloadingPoints[0].dateTimeDepartedByController).not.to.eql(oldUnloadDateTimeDepartedByController);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что даты от ТК в путевых точках НЕ изменены\", function () {\r",
													"    pm.expect(jsonData.loadingPoints[0].dateTimeArrived).to.eql(oldLoadDateTimeArrived);\r",
													"    pm.expect(jsonData.unloadingPoints[0].dateTimeArrived).to.eql(oldUnloadDateTimeArrived);\r",
													"    pm.expect(jsonData.loadingPoints[0].dateTimeDeparted).to.eql(oldLoadDateTimeDeparted);\r",
													"    pm.expect(jsonData.unloadingPoints[0].dateTimeDeparted).to.eql(oldUnloadDateTimeDeparted);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{goPoolingOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"status\": \"Departed\",\n        \"type\": \"Loading\",\n        \"index\": 0,\n        \"warehouse\": {\n            \"id\": \"000000000000000000000000\",\n            \"foreignId\": null\n        },\n        \"dateTimeArrived\": \"{{consolidationDate}}T04:46:30\",\n        \"dateTimeDeparted\": \"{{consolidationDate}}T16:56:33\"\n    },\n    {\n        \"status\": \"Departed\",\n        \"type\": \"Unloading\",\n        \"index\": 0,\n        \"warehouse\": {\n            \"id\": \"000000000000000000000000\",\n            \"foreignId\": null\n        },\n        \"dateTimeArrived\": \"{{consolidationDate}}T14:51:58\",\n        \"dateTimeDeparted\": \"{{consolidationDate}}T17:38:10\"\n    }\n]\n"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/number/{{ReservationNumber}}/point-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"number",
												"{{ReservationNumber}}",
												"point-status"
											]
										}
									},
									"response": []
								},
								{
									"name": "Изменение статусов путевых точек бронирования по номеру, Машина убыла от ГО на статусе Счет выставлен",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 3,\r",
													"    \"Pallets\": 3,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 2,\r",
													"        \"PositionTo\": 2,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 3,\r",
													"        \"PositionTo\": 3,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ReservationNumber\", res.json().number);\r",
													"        pm.variables.set(\"loadDateTimeArrived\", res.json().loadingPoints[0].dateTimeArrived);\r",
													"        pm.variables.set(\"loadDateTimeDeparted\", res.json().loadingPoints[0].dateTimeDeparted);\r",
													"        pm.variables.set(\"loadDateTimeArrivedByController\", res.json().loadingPoints[0].dateTimeArrivedByController);\r",
													"        pm.variables.set(\"loadDateTimeDepartedByController\", res.json().loadingPoints[0].dateTimeDepartedByController); \r",
													"        pm.variables.set(\"unloadDateTimeArrived\", res.json().unloadingPoints[0].dateTimeArrived);\r",
													"        pm.variables.set(\"unloadDateTimeDeparted\", res.json().unloadingPoints[0].dateTimeDeparted);\r",
													"        pm.variables.set(\"unloadDateTimeArrivedByController\", res.json().unloadingPoints[0].dateTimeArrivedByController);\r",
													"        pm.variables.set(\"unloadDateTimeDepartedByController\", res.json().unloadingPoints[0].dateTimeDepartedByController);\r",
													"\r",
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations/number/\" + pm.variables.get(\"ReservationNumber\") + \"/status\",\r",
													"    method: \"PUT\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"tkFmOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"    mode: 'raw',\r",
													"    raw: JSON.stringify({ \r",
													"        \"status\": \"Delivered\",\r",
													"        \"comment\": null\r",
													"\r",
													"})  \r",
													"    } \r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.json().status).to.be.eql(\"Delivered\");\r",
													"        pm.variables.set(\"ReservationNumber\", res.json().number);\r",
													"\r",
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations/number/\" + pm.variables.get(\"ReservationNumber\") + \"/status\",\r",
													"    method: \"PUT\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"    mode: 'raw',\r",
													"    raw: JSON.stringify({ \r",
													"        \"status\": \"CostConfirmed\",\r",
													"        \"comment\": null\r",
													"\r",
													"})  \r",
													"    } \r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.json().status).to.be.eql(\"CostConfirmed\");\r",
													"        pm.variables.set(\"ReservationNumber\", res.json().number);\r",
													"\r",
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations/number/\" + pm.variables.get(\"ReservationNumber\") + \"/status\",\r",
													"    method: \"PUT\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"tkFmOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"    mode: 'raw',\r",
													"    raw: JSON.stringify({ \r",
													"        \"status\": \"Invoiced\",\r",
													"        \"comment\": null\r",
													"\r",
													"})  \r",
													"    } \r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.json().status).to.be.eql(\"Invoiced\");\r",
													"        pm.variables.set(\"ReservationNumber\", res.json().number);\r",
													"     }\r",
													"     )\r",
													"     }\r",
													"     )\r",
													"     }\r",
													"     )\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"const statusName = \"Departed\";\r",
													"const oldLoadDateTimeArrived = pm.variables.get(\"loadDateTimeArrived\");\r",
													"const oldLoadDateTimeDeparted = pm.variables.get(\"loadDateTimeDeparted\");\r",
													"const oldLoadDateTimeArrivedByController = pm.variables.get(\"loadDateTimeArrivedByController\");\r",
													"const oldLoadDateTimeDepartedByController = pm.variables.get(\"loadDateTimeDepartedByController\");\r",
													"const oldUnloadDateTimeArrived = pm.variables.get(\"unloadDateTimeArrived\");\r",
													"const oldUnloadDateTimeDeparted = pm.variables.get(\"unloadDateTimeDeparted\");\r",
													"const oldUnloadDateTimeArrivedByController = pm.variables.get(\"unloadDateTimeArrivedByController\");\r",
													"const oldUnloadDateTimeDepartedByController = pm.variables.get(\"unloadDateTimeDepartedByController\");\r",
													"\r",
													"pm.test(\"Проверка, что статус путевой точки отправки изменен\", function () {\r",
													"    pm.expect(jsonData.loadingPoints[0].status).to.eql(statusName);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что статус путевой точки доставки изменен\", function () {\r",
													"    pm.expect(jsonData.loadingPoints[0].status).to.eql(statusName);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что даты по версии контролера в путевых точках изменены\", function () {\r",
													"    pm.expect(jsonData.loadingPoints[0].dateTimeArrivedByController).not.to.eql(oldLoadDateTimeArrivedByController);\r",
													"    pm.expect(jsonData.unloadingPoints[0].dateTimeArrivedByController).not.to.eql(oldUnloadDateTimeArrivedByController);\r",
													"    pm.expect(jsonData.loadingPoints[0].dateTimeDepartedByController).not.to.eql(oldLoadDateTimeDepartedByController);\r",
													"    pm.expect(jsonData.unloadingPoints[0].dateTimeDepartedByController).not.to.eql(oldUnloadDateTimeDepartedByController);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что даты от ТК в путевых точках НЕ изменены\", function () {\r",
													"    pm.expect(jsonData.loadingPoints[0].dateTimeArrived).to.eql(oldLoadDateTimeArrived);\r",
													"    pm.expect(jsonData.unloadingPoints[0].dateTimeArrived).to.eql(oldUnloadDateTimeArrived);\r",
													"    pm.expect(jsonData.loadingPoints[0].dateTimeDeparted).to.eql(oldLoadDateTimeDeparted);\r",
													"    pm.expect(jsonData.unloadingPoints[0].dateTimeDeparted).to.eql(oldUnloadDateTimeDeparted);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{goPoolingOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"status\": \"Departed\",\n        \"type\": \"Loading\",\n        \"index\": 0,\n        \"warehouse\": {\n            \"id\": \"000000000000000000000000\",\n            \"foreignId\": null\n        },\n        \"dateTimeArrived\": \"{{consolidationDate}}T04:46:30\",\n        \"dateTimeDeparted\": \"{{consolidationDate}}T16:56:33\"\n    },\n    {\n        \"status\": \"Departed\",\n        \"type\": \"Unloading\",\n        \"index\": 0,\n        \"warehouse\": {\n            \"id\": \"000000000000000000000000\",\n            \"foreignId\": null\n        },\n        \"dateTimeArrived\": \"{{consolidationDate}}T14:51:58\",\n        \"dateTimeDeparted\": \"{{consolidationDate}}T17:38:10\"\n    }\n]\n"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/number/{{ReservationNumber}}/point-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"number",
												"{{ReservationNumber}}",
												"point-status"
											]
										}
									},
									"response": []
								},
								{
									"name": "Изменение статусов путевых точек бронирования по номеру, Машина убыла от ТК на статусе Счет выставлен",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 3,\r",
													"    \"Pallets\": 3,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 2,\r",
													"        \"PositionTo\": 2,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 3,\r",
													"        \"PositionTo\": 3,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ReservationNumber\", res.json().number);\r",
													"        pm.variables.set(\"loadDateTimeArrived\", res.json().loadingPoints[0].dateTimeArrived);\r",
													"        pm.variables.set(\"loadDateTimeDeparted\", res.json().loadingPoints[0].dateTimeDeparted);\r",
													"        pm.variables.set(\"loadDateTimeArrivedByController\", res.json().loadingPoints[0].dateTimeArrivedByController);\r",
													"        pm.variables.set(\"loadDateTimeDepartedByController\", res.json().loadingPoints[0].dateTimeDepartedByController); \r",
													"        pm.variables.set(\"unloadDateTimeArrived\", res.json().unloadingPoints[0].dateTimeArrived);\r",
													"        pm.variables.set(\"unloadDateTimeDeparted\", res.json().unloadingPoints[0].dateTimeDeparted);\r",
													"        pm.variables.set(\"unloadDateTimeArrivedByController\", res.json().unloadingPoints[0].dateTimeArrivedByController);\r",
													"        pm.variables.set(\"unloadDateTimeDepartedByController\", res.json().unloadingPoints[0].dateTimeDepartedByController);\r",
													"\r",
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations/number/\" + pm.variables.get(\"ReservationNumber\") + \"/status\",\r",
													"    method: \"PUT\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"tkFmOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"    mode: 'raw',\r",
													"    raw: JSON.stringify({ \r",
													"        \"status\": \"Delivered\",\r",
													"        \"comment\": null\r",
													"\r",
													"})  \r",
													"    } \r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.json().status).to.be.eql(\"Delivered\");\r",
													"        pm.variables.set(\"ReservationNumber\", res.json().number);\r",
													"\r",
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations/number/\" + pm.variables.get(\"ReservationNumber\") + \"/status\",\r",
													"    method: \"PUT\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"    mode: 'raw',\r",
													"    raw: JSON.stringify({ \r",
													"        \"status\": \"CostConfirmed\",\r",
													"        \"comment\": null\r",
													"\r",
													"})  \r",
													"    } \r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.json().status).to.be.eql(\"CostConfirmed\");\r",
													"        pm.variables.set(\"ReservationNumber\", res.json().number);\r",
													"\r",
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations/number/\" + pm.variables.get(\"ReservationNumber\") + \"/status\",\r",
													"    method: \"PUT\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"tkFmOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"    mode: 'raw',\r",
													"    raw: JSON.stringify({ \r",
													"        \"status\": \"Invoiced\",\r",
													"        \"comment\": null\r",
													"\r",
													"})  \r",
													"    } \r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.json().status).to.be.eql(\"Invoiced\");\r",
													"        pm.variables.set(\"ReservationNumber\", res.json().number);\r",
													"     }\r",
													"     )\r",
													"     }\r",
													"     )\r",
													"     }\r",
													"     )\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"const statusName = \"Departed\";\r",
													"const oldLoadDateTimeArrived = pm.variables.get(\"loadDateTimeArrived\");\r",
													"const oldLoadDateTimeDeparted = pm.variables.get(\"loadDateTimeDeparted\");\r",
													"const oldLoadDateTimeArrivedByController = pm.variables.get(\"loadDateTimeArrivedByController\");\r",
													"const oldLoadDateTimeDepartedByController = pm.variables.get(\"loadDateTimeDepartedByController\");\r",
													"const oldUnloadDateTimeArrived = pm.variables.get(\"unloadDateTimeArrived\");\r",
													"const oldUnloadDateTimeDeparted = pm.variables.get(\"unloadDateTimeDeparted\");\r",
													"const oldUnloadDateTimeArrivedByController = pm.variables.get(\"unloadDateTimeArrivedByController\");\r",
													"const oldUnloadDateTimeDepartedByController = pm.variables.get(\"unloadDateTimeDepartedByController\");\r",
													"\r",
													"pm.test(\"Проверка, что статус путевой точки отправки изменен\", function () {\r",
													"  pm.expect(jsonData.loadingPoints[0].status).to.eql(statusName);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что статус путевой точки доставки изменен\", function () {\r",
													"  pm.expect(jsonData.loadingPoints[0].status).to.eql(statusName);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что даты в путевых точках изменены\", function () {\r",
													"  pm.expect(jsonData.loadingPoints[0].dateTimeArrived).not.to.eql(oldLoadDateTimeArrived);\r",
													"  pm.expect(jsonData.unloadingPoints[0].dateTimeArrived).not.to.eql(oldUnloadDateTimeArrived);\r",
													"  pm.expect(jsonData.loadingPoints[0].dateTimeDeparted).not.to.eql(oldLoadDateTimeDeparted);\r",
													"  pm.expect(jsonData.unloadingPoints[0].dateTimeDeparted).not.to.eql(oldUnloadDateTimeDeparted);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что даты по версии контролера в путевых точках НЕ изменены\", function () {\r",
													"  pm.expect(jsonData.loadingPoints[0].dateTimeArrivedByController).to.eql(oldLoadDateTimeArrivedByController);\r",
													"  pm.expect(jsonData.loadingPoints[0].dateTimeDepartedByController).to.eql(oldLoadDateTimeDepartedByController);\r",
													"  pm.expect(jsonData.unloadingPoints[0].dateTimeArrivedByController).to.eql(oldUnloadDateTimeArrivedByController);\r",
													"  pm.expect(jsonData.unloadingPoints[0].dateTimeDepartedByController).to.eql(oldUnloadDateTimeDepartedByController);\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tkFmOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"status\": \"Departed\",\n        \"type\": \"Loading\",\n        \"index\": 0,\n        \"warehouse\": {\n            \"id\": \"000000000000000000000000\",\n            \"foreignId\": null\n        },\n        \"dateTimeArrived\": \"{{consolidationDate}}T04:46:30\",\n        \"dateTimeDeparted\": \"{{consolidationDate}}T16:56:33\"\n    },\n    {\n        \"status\": \"Departed\",\n        \"type\": \"Unloading\",\n        \"index\": 0,\n        \"warehouse\": {\n            \"id\": \"000000000000000000000000\",\n            \"foreignId\": null\n        },\n        \"dateTimeArrived\": \"{{consolidationDate}}T14:51:58\",\n        \"dateTimeDeparted\": \"{{consolidationDate}}T17:38:10\"\n    }\n]\n"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/number/{{ReservationNumber}}/point-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"number",
												"{{ReservationNumber}}",
												"point-status"
											]
										}
									},
									"response": []
								},
								{
									"name": "Изменение статусов путевых точек бронирования по номеру, UnitsFact от ГО",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 3,\r",
													"    \"Pallets\": 3,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 2,\r",
													"        \"PositionTo\": 2,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 3,\r",
													"        \"PositionTo\": 3,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ReservationNumber\", res.json().number);\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"const statusName = \"Departed\";\r",
													"\r",
													"pm.test(\"Проверка, что статус путевой точки отправки изменен\", function () {\r",
													"  pm.expect(jsonData.loadingPoints[0].status).to.eql(statusName);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что статус путевой точки доставки изменен\", function () {\r",
													"  pm.expect(jsonData.loadingPoints[0].status).to.eql(statusName);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что UnitsFact в путевых точках изменены\", function () {\r",
													"  pm.expect(jsonData.loadingPoints[0].unitsFact.pallets).to.eql(3);\r",
													"  pm.expect(jsonData.loadingPoints[0].unitsFact.items).to.eql(4);\r",
													"  pm.expect(jsonData.unloadingPoints[0].unitsFact.weight).to.eql(100.0);\r",
													"  pm.expect(jsonData.unloadingPoints[0].unitsFact.cost).to.eql(10.09);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{goPoolingOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"status\": \"Departed\",\n        \"type\": \"Loading\",\n        \"index\": 0,\n        \"warehouse\": {\n            \"id\": \"000000000000000000000000\",\n            \"foreignId\": null\n        },\n        \"dateTimeArrived\": \"{{consolidationDate}}T04:46:30\",\n        \"dateTimeDeparted\": \"{{consolidationDate}}T16:56:33\",\n        \"unitsFact\": {\n            \"palletType\": \"Euro\",\n            \"positionFrom\": 1,\n            \"positionTo\": 3,\n            \"pallets\": 3,\n            \"boxes\": 3,\n            \"items\": 4,\n            \"weight\": 100.11,\n            \"cost\": 2000.33,\n            \"volume\": 10,\n            \"length\": 10,\n            \"width\": 10,\n            \"height\": 10\n    }\n    },\n    {\n        \"status\": \"Departed\",\n        \"type\": \"Unloading\",\n        \"index\": 0,\n        \"warehouse\": {\n            \"id\": \"000000000000000000000000\",\n            \"foreignId\": null\n        },\n        \"dateTimeArrived\": \"{{consolidationDate}}T14:51:58\",\n        \"dateTimeDeparted\": \"{{consolidationDate}}T17:38:10\",\n        \"unitsFact\": {\n            \"palletType\": \"Euro\",\n            \"positionFrom\": 1,\n            \"positionTo\": 3,\n            \"pallets\": 3,\n            \"boxes\": 4,\n            \"items\": 4,\n            \"weight\": 100,\n            \"cost\": 10.09,\n            \"volume\": 20,\n            \"length\": 20,\n            \"width\": 20,\n            \"height\": 20\n    }\n    }\n]\n"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/number/{{ReservationNumber}}/point-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"number",
												"{{ReservationNumber}}",
												"point-status"
											]
										}
									},
									"response": []
								},
								{
									"name": "Изменение статусов путевых точек бронирования по номеру, с изменением даты отправки от ГО",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 3,\r",
													"    \"Pallets\": 3,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 2,\r",
													"        \"PositionTo\": 2,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 3,\r",
													"        \"PositionTo\": 3,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ReservationNumber\", res.json().number);\r",
													"        pm.variables.set(\"loadDateTimeArrived\", res.json().loadingPoints[0].dateTimeArrived);\r",
													"        pm.variables.set(\"loadDateTimeDeparted\", res.json().loadingPoints[0].dateTimeDeparted);\r",
													"        pm.variables.set(\"loadDateTimeArrivedByController\", res.json().loadingPoints[0].dateTimeArrivedByController);\r",
													"        pm.variables.set(\"loadDateTimeDepartedByController\", res.json().loadingPoints[0].dateTimeDepartedByController); \r",
													"        pm.variables.set(\"unloadDateTimeArrived\", res.json().unloadingPoints[0].dateTimeArrived);\r",
													"        pm.variables.set(\"unloadDateTimeDeparted\", res.json().unloadingPoints[0].dateTimeDeparted);\r",
													"        pm.variables.set(\"unloadDateTimeArrivedByController\", res.json().unloadingPoints[0].dateTimeArrivedByController);\r",
													"        pm.variables.set(\"unloadDateTimeDepartedByController\", res.json().unloadingPoints[0].dateTimeDepartedByController);\r",
													"        pm.variables.set(\"loadingPointsDateTimeFrom\", res.json().loadingPoints[0].dateTime.from);\r",
													"        pm.variables.set(\"loadingPointsDateTimeTo\", res.json().loadingPoints[0].dateTime.to);\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"const statusName = \"Departed\";\r",
													"const oldLoadDateTimeArrived = pm.variables.get(\"loadDateTimeArrived\");\r",
													"const oldLoadDateTimeDeparted = pm.variables.get(\"loadDateTimeDeparted\");\r",
													"const oldLoadDateTimeArrivedByController = pm.variables.get(\"loadDateTimeArrivedByController\");\r",
													"const oldLoadDateTimeDepartedByController = pm.variables.get(\"loadDateTimeDepartedByController\");\r",
													"const oldUnloadDateTimeArrived = pm.variables.get(\"unloadDateTimeArrived\");\r",
													"const oldUnloadDateTimeDeparted = pm.variables.get(\"unloadDateTimeDeparted\");\r",
													"const oldUnloadDateTimeArrivedByController = pm.variables.get(\"unloadDateTimeArrivedByController\");\r",
													"const oldUnloadDateTimeDepartedByController = pm.variables.get(\"unloadDateTimeDepartedByController\");\r",
													"const oldLoadingPointsDateTimeFrom = pm.variables.get(\"loadingPointsDateTimeFrom\");\r",
													"const oldLoadingPointsDateTimeTo = pm.variables.get(\"loadingPointsDateTimeTo\");\r",
													"\r",
													"pm.test(\"Проверка, что статус путевой точки отправки изменен\", function () {\r",
													"  pm.expect(jsonData.loadingPoints[0].status).to.eql(statusName);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что статус путевой точки доставки изменен\", function () {\r",
													"  pm.expect(jsonData.loadingPoints[0].status).to.eql(statusName);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что даты в путевых точках НЕ изменены\", function () {\r",
													"  pm.expect(jsonData.loadingPoints[0].dateTimeArrived).to.eql(oldLoadDateTimeArrived);\r",
													"  pm.expect(jsonData.unloadingPoints[0].dateTimeArrived).to.eql(oldUnloadDateTimeArrived);\r",
													"  pm.expect(jsonData.loadingPoints[0].dateTimeDeparted).to.eql(oldLoadDateTimeDeparted);\r",
													"  pm.expect(jsonData.unloadingPoints[0].dateTimeDeparted).to.eql(oldUnloadDateTimeDeparted);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что даты по версии контролера в путевых точках изменены\", function () {\r",
													"  pm.expect(jsonData.loadingPoints[0].dateTimeArrivedByController).not.to.eql(oldLoadDateTimeArrivedByController);\r",
													"  pm.expect(jsonData.loadingPoints[0].dateTimeDepartedByController).not.to.eql(oldLoadDateTimeDepartedByController);\r",
													"  pm.expect(jsonData.unloadingPoints[0].dateTimeArrivedByController).not.to.eql(oldUnloadDateTimeArrivedByController);\r",
													"  pm.expect(jsonData.unloadingPoints[0].dateTimeDepartedByController).not.to.eql(oldUnloadDateTimeDepartedByController);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что даты отправки изменены\", function () {\r",
													"  pm.expect(jsonData.loadingPoints[0].dateTime.from).not.to.eql(oldLoadingPointsDateTimeFrom);\r",
													"  pm.expect(jsonData.unloadingPoints[0].dateTime.to).not.to.eql(oldLoadingPointsDateTimeTo);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{goPoolingOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"status\": \"Departed\",\n        \"type\": \"Loading\",\n        \"index\": 0,\n        \"warehouse\": {\n            \"id\": \"000000000000000000000000\",\n            \"foreignId\": null\n        },\n        \"dateTimeArrived\": \"{{consolidationDate}}T04:46:30\",\n        \"dateTimeDeparted\": \"{{consolidationDate}}T16:56:33\",\n        \"dateTime\": {\n            \"from\": \"{{consolidationDate}}T02:00:00\",\n            \"to\": \"{{consolidationDate}}T03:30:00\"\n    }\n    },\n    {\n        \"status\": \"Departed\",\n        \"type\": \"Unloading\",\n        \"index\": 0,\n        \"warehouse\": {\n            \"id\": \"000000000000000000000000\",\n            \"foreignId\": null\n        },\n        \"dateTimeArrived\": \"{{consolidationDate}}T14:51:58\",\n        \"dateTimeDeparted\": \"{{consolidationDate}}T17:38:10\"\n    }\n]\n"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/number/{{ReservationNumber}}/point-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"number",
												"{{ReservationNumber}}",
												"point-status"
											]
										}
									},
									"response": []
								},
								{
									"name": "Ошибка при попытке изменения статусов путевых точек бронирования по номеру, с изменением даты отправки от ГО на статусе Доставлено",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 3,\r",
													"    \"Pallets\": 3,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 2,\r",
													"        \"PositionTo\": 2,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 3,\r",
													"        \"PositionTo\": 3,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ReservationNumber\", res.json().number);\r",
													"\r",
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations/number/\" + pm.variables.get(\"ReservationNumber\") + \"/status\",\r",
													"    method: \"PUT\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"tkFmOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"    mode: 'raw',\r",
													"    raw: JSON.stringify({ \r",
													"        \"status\": \"Delivered\",\r",
													"        \"comment\": null\r",
													"\r",
													"})  \r",
													"    } \r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.json().status).to.be.eql(\"Delivered\");\r",
													"        pm.variables.set(\"ReservationNumber\", res.json().number);\r",
													"     }\r",
													"     )\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что ошибка соответствует ожидаемой\", function () {\r",
													"     pm.expect(jsonData.error).to.eql(\"Невозможно редактировать поле LoadingPoints.DateFrom в статусе Delivered, Невозможно редактировать поле LoadingPoints.DateTo в статусе Delivered\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{goPoolingOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"status\": \"Departed\",\n        \"type\": \"Loading\",\n        \"index\": 0,\n        \"warehouse\": {\n            \"id\": \"000000000000000000000000\",\n            \"foreignId\": null\n        },\n        \"dateTimeArrived\": \"{{consolidationDate}}T04:46:30\",\n        \"dateTimeDeparted\": \"{{consolidationDate}}T16:56:33\",\n        \"dateTime\": {\n            \"from\": \"{{consolidationDate}}T02:00:00\",\n            \"to\": \"{{consolidationDate}}T03:30:00\"\n    }\n    },\n    {\n        \"status\": \"Departed\",\n        \"type\": \"Unloading\",\n        \"index\": 0,\n        \"warehouse\": {\n            \"id\": \"000000000000000000000000\",\n            \"foreignId\": null\n        },\n        \"dateTimeArrived\": \"{{consolidationDate}}T14:51:58\",\n        \"dateTimeDeparted\": \"{{consolidationDate}}T17:38:10\"\n    }\n]\n"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/number/{{ReservationNumber}}/point-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"number",
												"{{ReservationNumber}}",
												"point-status"
											]
										}
									},
									"response": []
								},
								{
									"name": "Ошибка при попытке изменения статусов путевых точек бронирования по номеру, UnitsFact от ТС на статусе Счет выставлен",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 3,\r",
													"    \"Pallets\": 3,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 2,\r",
													"        \"PositionTo\": 2,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 3,\r",
													"        \"PositionTo\": 3,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ReservationNumber\", res.json().number);\r",
													"\r",
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations/number/\" + pm.variables.get(\"ReservationNumber\") + \"/status\",\r",
													"    method: \"PUT\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"tkFmOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"    mode: 'raw',\r",
													"    raw: JSON.stringify({ \r",
													"        \"status\": \"Delivered\",\r",
													"        \"comment\": null\r",
													"\r",
													"})  \r",
													"    } \r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.json().status).to.be.eql(\"Delivered\");\r",
													"        pm.variables.set(\"ReservationNumber\", res.json().number);\r",
													"\r",
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations/number/\" + pm.variables.get(\"ReservationNumber\") + \"/status\",\r",
													"    method: \"PUT\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"    mode: 'raw',\r",
													"    raw: JSON.stringify({ \r",
													"        \"status\": \"CostConfirmed\",\r",
													"        \"comment\": null\r",
													"\r",
													"})  \r",
													"    } \r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.json().status).to.be.eql(\"CostConfirmed\");\r",
													"        pm.variables.set(\"ReservationNumber\", res.json().number);\r",
													"\r",
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations/number/\" + pm.variables.get(\"ReservationNumber\") + \"/status\",\r",
													"    method: \"PUT\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"tkFmOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"    mode: 'raw',\r",
													"    raw: JSON.stringify({ \r",
													"        \"status\": \"Invoiced\",\r",
													"        \"comment\": null\r",
													"\r",
													"})  \r",
													"    } \r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.json().status).to.be.eql(\"Invoiced\");\r",
													"        pm.variables.set(\"ReservationNumber\", res.json().number);\r",
													"     }\r",
													"     )\r",
													"     }\r",
													"     )\r",
													"     }\r",
													"     )\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что ошибка соответствует ожидаемой\", function () {\r",
													"     pm.expect(jsonData.error).to.eql(\"Невозможно редактировать поле LoadingPoints.UnitsFact в статусе Invoiced, Невозможно редактировать поле LoadingPoints.UnitsFact в роли Client, Невозможно редактировать поле UnloadingPoints.UnitsFact в статусе Invoiced, Невозможно редактировать поле UnloadingPoints.UnitsFact в роли Client\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tsTanderOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"status\": \"Departed\",\n        \"type\": \"Loading\",\n        \"index\": 0,\n        \"warehouse\": {\n            \"id\": \"000000000000000000000000\",\n            \"foreignId\": null\n        },\n        \"dateTimeArrived\": \"{{consolidationDate}}T04:46:30\",\n        \"dateTimeDeparted\": \"{{consolidationDate}}T16:56:33\",\n        \"unitsFact\": {\n            \"palletType\": \"Euro\",\n            \"positionFrom\": 1,\n            \"positionTo\": 3,\n            \"pallets\": 3,\n            \"boxes\": 3,\n            \"items\": 4,\n            \"weight\": 100.11,\n            \"cost\": 2000.33,\n            \"volume\": 10,\n            \"length\": 10,\n            \"width\": 10,\n            \"height\": 10\n    }\n    },\n    {\n        \"status\": \"Departed\",\n        \"type\": \"Unloading\",\n        \"index\": 0,\n        \"warehouse\": {\n            \"id\": \"000000000000000000000000\",\n            \"foreignId\": null\n        },\n        \"dateTimeArrived\": \"{{consolidationDate}}T14:51:58\",\n        \"dateTimeDeparted\": \"{{consolidationDate}}T17:38:10\",\n        \"unitsFact\": {\n            \"palletType\": \"Euro\",\n            \"positionFrom\": 1,\n            \"positionTo\": 3,\n            \"pallets\": 3,\n            \"boxes\": 4,\n            \"items\": 4,\n            \"weight\": 100,\n            \"cost\": 10.09,\n            \"volume\": 20,\n            \"length\": 20,\n            \"width\": 20,\n            \"height\": 20\n    }\n    }\n]\n"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/number/{{ReservationNumber}}/point-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"number",
												"{{ReservationNumber}}",
												"point-status"
											]
										}
									},
									"response": []
								},
								{
									"name": "Ошибка при попытке изменения статусов путевых точек бронирования по номеру, Машина убыла от ГО на статусе Отменено",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 3,\r",
													"    \"Pallets\": 3,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 2,\r",
													"        \"PositionTo\": 2,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 3,\r",
													"        \"PositionTo\": 3,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ReservationNumber\", res.json().number);\r",
													"\r",
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations/number/\" + pm.variables.get(\"ReservationNumber\") + \"/status\",\r",
													"    method: \"PUT\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"    mode: 'raw',\r",
													"    raw: JSON.stringify({ \r",
													"        \"status\": \"Canceled\",\r",
													"        \"comment\": null\r",
													"\r",
													"})  \r",
													"    } \r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.json().status).to.be.eql(\"Canceled\");\r",
													"        pm.variables.set(\"ReservationNumber\", res.json().number);\r",
													"\r",
													"     }\r",
													"     )\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что ошибка соответствует ожидаемой\", function () {\r",
													"     pm.expect(jsonData.error).to.eql(\"Невозможно редактировать поле LoadingPoints.Status в статусе Canceled, Невозможно редактировать поле LoadingPoints.DateTimeArrivedByController в статусе Canceled, Невозможно редактировать поле LoadingPoints.DateTimeDepartedByController в статусе Canceled, Невозможно редактировать поле UnloadingPoint...\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{goPoolingOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n    {\n        \"status\": \"Departed\",\n        \"type\": \"Loading\",\n        \"index\": 0,\n        \"warehouse\": {\n            \"id\": \"000000000000000000000000\",\n            \"foreignId\": null\n        },\n        \"dateTimeArrived\": \"{{consolidationDate}}T04:46:30\",\n        \"dateTimeDeparted\": \"{{consolidationDate}}T16:56:33\"\n    },\n    {\n        \"status\": \"Departed\",\n        \"type\": \"Unloading\",\n        \"index\": 0,\n        \"warehouse\": {\n            \"id\": \"000000000000000000000000\",\n            \"foreignId\": null\n        },\n        \"dateTimeArrived\": \"{{consolidationDate}}T14:51:58\",\n        \"dateTimeDeparted\": \"{{consolidationDate}}T17:38:10\"\n    }\n]\n"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/number/{{ReservationNumber}}/point-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"number",
												"{{ReservationNumber}}",
												"point-status"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var moment = require('moment');",
											"pm.variables.set(\"currentDate\", moment().add(1, 'week').format(\"YYYY-MM-DD\"));",
											"pm.variables.set(\"currentDate + a week\", moment().add(2, 'week').format(\"YYYY-MM-DD\"));",
											"",
											"const number = pm.variables.replaceIn(\"{{$randomInt}}\");",
											"pm.variables.set(\"number\", number);",
											"",
											"const com = pm.variables.replaceIn(\"{{$randomCity}}\");",
											"pm.variables.set(\"comment\", com);",
											"",
											"pm.sendRequest({",
											"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/slots?consolidationDateFrom=\" + pm.variables.get(\"currentDate\") + \"&consolidationDateTo=\" + pm.variables.get(\"currentDate + a week\") + \"&shippingRegionId=\" + pm.globals.get(\"MoscowShippingRegion\") + \"&UnloadingWarehouseId=\" + pm.globals.get(\"KirovUnloadingWarehouse\") + \"&carrierId=\" + pm.globals.get(\"FMCarrier\"),",
											"    method: \"GET\",",
											"    header: {",
											"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),",
											"    },",
											"},",
											"    function (err, res) {",
											"        console.log(res.json());",
											"        pm.expect(res.status).to.eql(\"OK\");",
											"        pm.variables.set(\"slotId\", res.json()[1].id);",
											"        pm.variables.set(\"productType\", res.json()[1].productTypes[0]);",
											"        pm.variables.set(\"carrier\", res.json()[1].carrier.id);",
											"        pm.variables.set(\"client\", res.json()[1].client.id);",
											"        pm.variables.set(\"carType\", res.json()[1].carType);",
											"        pm.variables.set(\"unloadingWarehouse\", res.json()[1].unloadingWarehouse.id);",
											"        pm.variables.set(\"consolidationDate\", res.json()[1].consolidationDate);",
											"         pm.variables.set(\"departureDate\", res.json()[1].departureDate); ",
											"        pm.variables.set(\"deliveryDate\", res.json()[1].deliveryDate);",
											"        pm.variables.set(\"deliveryDate\", res.json()[1].deliveryDate);",
											"    });",
											"",
											"pm.sendRequest({",
											"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/slots?consolidationDateFrom=\" + pm.variables.get(\"currentDate\") + \"&consolidationDateTo=\" + pm.variables.get(\"currentDate + a week\") + \"&shippingRegionId=\" + pm.globals.get(\"MoscowShippingRegion\") + \"&UnloadingWarehouseId=\" + pm.globals.get(\"KirovUnloadingWarehouse\") + \"&carrierId=\" + pm.globals.get(\"ItecoCarrier\"),",
											"    method: \"GET\",",
											"    header: {",
											"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),",
											"    },",
											"},",
											"    function (err, res) {",
											"        console.log(res.json());",
											"        pm.expect(res.status).to.eql(\"OK\");",
											"        pm.variables.set(\"slotIdIteco\", res.json()[0].id);",
											"        pm.variables.set(\"productTypeIteco\", res.json()[0].productTypes[0]);",
											"        pm.variables.set(\"carrierIteco\", res.json()[0].carrier.id);",
											"        pm.variables.set(\"clientIteco\", res.json()[0].client.id);",
											"        pm.variables.set(\"carTypeIteco\", res.json()[0].carType);",
											"        pm.variables.set(\"unloadingWarehouseIteco\", res.json()[0].unloadingWarehouse.id);",
											"        pm.variables.set(\"consolidationDateIteco\", res.json()[0].consolidationDate);",
											"        pm.variables.set(\"departureDateIteco\", res.json()[0].departureDate); ",
											"        pm.variables.set(\"deliveryDateIteco\", res.json()[0].deliveryDate);",
											"        pm.variables.set(\"deliveryDateIteco\", res.json()[0].deliveryDate);",
											"    });"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Info",
							"item": [
								{
									"name": "Изменение данных в точке загрузки от ТК",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 1,\r",
													"    \"Pallets\": 1,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ID\", res.json().id);\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"const carriage = pm.variables.get(\"number\");\r",
													"const infoVehicleComment = pm.variables.get(\"comment\") + \" infoVehicleLoad\";\r",
													"const infoDriverComment = pm.variables.get(\"comment\") + \" infoDriverLoad\";\r",
													"\r",
													"pm.test(\"Проверка, что данные о ТС в точке загрузки изменены\", function () {\r",
													"    vehicleLoadNode = jsonData.vehicles.find(x => x.type === \"Loading\");\r",
													"    pm.expect(vehicleLoadNode.registrationNumber).to.eql(\"A780PP180\");\r",
													"    pm.expect(vehicleLoadNode.model).to.eql(\"MERSEDES\");\r",
													"    pm.expect(vehicleLoadNode.carCapacityType).to.eql(\"t20\");\r",
													"    pm.expect(vehicleLoadNode.features).to.have.members([\"ThermalRecorder\", \"HydraulicLift\"]);\r",
													"    pm.expect(vehicleLoadNode.comment).to.eql(infoVehicleComment);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что данные о водителе в точке загрузки изменены\", function () {\r",
													"    driverLoadNode = jsonData.drivers.find(x => x.type === \"Loading\");\r",
													"    pm.expect(driverLoadNode.name).to.eql(\"Теплов Алексей Александрович\");\r",
													"    pm.expect(driverLoadNode.passport.number).to.eql(\"765548\");\r",
													"    pm.expect(driverLoadNode.drivingLicense.number).to.eql(\"A65I8\");\r",
													"    pm.expect(driverLoadNode.features).to.have.members([\"MedicalBook\", \"FreightForwarder\"]);\r",
													"    pm.expect(driverLoadNode.comment).to.eql(infoDriverComment);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что номер перевозки изменен\", function () {\r",
													"    pm.expect(jsonData.carriageString).to.eql(carriage);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что финансовая информация изменена\", function () {\r",
													"    pm.expect(jsonData.financials.baseCost).to.eql(170.69);\r",
													"    _isContains = eval(pm.globals.get(\"_isContains\"));\r",
													"    pm.expect(_isContains(jsonData.financials.additionalCosts, \"type\", \"Returning\")).to.have.true;\r",
													"\r",
													"    additionalCostsNode = jsonData.financials.additionalCosts.find(x => x.type === \"Returning\");\r",
													"    pm.expect(additionalCostsNode.cost).to.eql(70.69);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что UnitsFact в путевых точках изменены\", function () {\r",
													"    pm.expect(jsonData.unitsFact.pallets).to.eql(3);\r",
													"    pm.expect(jsonData.unitsFact.items).to.eql(5);\r",
													"    pm.expect(jsonData.unitsFact.cost).to.eql(20000.75);\r",
													"    pm.expect(jsonData.orders[0].unitsFact.items).to.eql(1);\r",
													"    pm.expect(jsonData.orders[0].unitsFact.weight).to.eql(30.0);\r",
													"    pm.expect(jsonData.orders[0].unitsFact.boxes).to.eql(2);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tkFmOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"vehicle\": {\n    \"registrationNumber\": \"A780PP180\",\n    \"trailerRegistrationNumber\": \"BT110255\",\n    \"model\": \"MERSEDES\",\n    \"type\": \"Loading\",\n    \"trailerModel\": \"VB\",\n    \"carCapacityType\": \"t20\",\n    \"features\": [\n      \"ThermalRecorder\", \"HydraulicLift\"\n    ],\n    \"comment\": \"{{comment}} infoVehicleLoad\"\n  },\n  \"driver\": {\n    \"name\": \"Теплов Алексей Александрович\",\n    \"phone\": \"8(909)132-12-12\",\n    \"passport\": {\n      \"series\": \"WE23\",\n      \"number\": \"765548\",\n      \"issuedBy\": \"ГУ МВД России по Московской области\",\n      \"issuedDate\": \"2021-10-01\"\n    },\n    \"type\": \"Loading\",\n    \"drivingLicense\": {\n      \"number\": \"A65I8\",\n      \"issuedDate\": \"2021-10-01\",\n      \"expirationDate\": \"2023-10-01\"\n    },\n    \"features\": [\n      \"MedicalBook\", \"FreightForwarder\"\n    ],\n    \"comment\": \"{{comment}} infoDriverLoad\"\n  },\n  \"carriage\": \"{{number}}\",\n  \"financials\": {\n    \"baseCost\": 170.69,\n    \"additionalCosts\": [\n      {\n        \"type\": \"Returning\",\n        \"cost\": 70.69\n      }\n    ]\n  },\n  \"unitsFact\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 1,\n    \"positionTo\": 3,\n    \"pallets\": 3,\n    \"boxes\": 4,\n    \"items\": 5,\n    \"weight\": 3000,\n    \"cost\": 20000.75,\n    \"volume\": 10,\n    \"length\": 10,\n    \"width\": 10,\n    \"height\": 10\n  },\n  \"orders\": [\n    {\n      \"orderIndex\": 0,\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 1,\n        \"positionTo\": 1,\n        \"pallets\": 1,\n        \"boxes\": 2,\n        \"items\": 1,\n        \"weight\": 30,\n        \"cost\": 2000,\n        \"volume\": 10,\n        \"length\": 10,\n        \"width\": 10,\n        \"height\": 10\n      }\n    }\n  ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/{{ID}}/info",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"{{ID}}",
												"info"
											]
										}
									},
									"response": []
								},
								{
									"name": "Изменение данных в точке выгрузки от ТК",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 1,\r",
													"    \"Pallets\": 1,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ID\", res.json().id);\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"const carriage = pm.variables.get(\"number\");\r",
													"const infoVehicleComment = pm.variables.get(\"comment\") + \" infoVehicleUnload\";\r",
													"const infoDriverComment = pm.variables.get(\"comment\") + \" infoDriverUnload\";\r",
													"\r",
													"pm.test(\"Проверка, что данные о ТС в точке загрузки изменены\", function () {\r",
													"    vehicleUnloadNode = jsonData.vehicles.find(x => x.type === \"Unloading\");\r",
													"    pm.expect(vehicleUnloadNode.registrationNumber).to.eql(\"A780PP180\");\r",
													"    pm.expect(vehicleUnloadNode.model).to.eql(\"MERSEDES\");\r",
													"    pm.expect(vehicleUnloadNode.carCapacityType).to.eql(\"t20\");\r",
													"    pm.expect(vehicleUnloadNode.features).to.have.members([\"ThermalRecorder\", \"HydraulicLift\"]);\r",
													"    pm.expect(vehicleUnloadNode.comment).to.eql(infoVehicleComment);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что данные о водителе в точке загрузки изменены\", function () {\r",
													"    driverUnloadNode = jsonData.drivers.find(x => x.type === \"Unloading\");\r",
													"    pm.expect(driverUnloadNode.name).to.eql(\"Теплов Алексей Александрович\");\r",
													"    pm.expect(driverUnloadNode.passport.number).to.eql(\"765548\");\r",
													"    pm.expect(driverUnloadNode.drivingLicense.number).to.eql(\"A65I8\");\r",
													"    pm.expect(driverUnloadNode.features).to.have.members([\"MedicalBook\", \"FreightForwarder\"]);\r",
													"    pm.expect(driverUnloadNode.comment).to.eql(infoDriverComment);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что номер перевозки изменен\", function () {\r",
													"    pm.expect(jsonData.carriageString).to.eql(carriage);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что финансовая информация изменена\", function () {\r",
													"    pm.expect(jsonData.financials.baseCost).to.eql(170.69);\r",
													"    _isContains = eval(pm.globals.get(\"_isContains\"));\r",
													"    pm.expect(_isContains(jsonData.financials.additionalCosts, \"type\", \"Returning\")).to.have.true;\r",
													"\r",
													"    additionalCostsNode = jsonData.financials.additionalCosts.find(x => x.type === \"Returning\");\r",
													"    pm.expect(additionalCostsNode.cost).to.eql(70.69);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что UnitsFact в путевых точках изменены\", function () {\r",
													"    pm.expect(jsonData.unitsFact.pallets).to.eql(3);\r",
													"    pm.expect(jsonData.unitsFact.items).to.eql(5);\r",
													"    pm.expect(jsonData.unitsFact.cost).to.eql(20000.75);\r",
													"    pm.expect(jsonData.orders[0].unitsFact.items).to.eql(1);\r",
													"    pm.expect(jsonData.orders[0].unitsFact.weight).to.eql(30.0);\r",
													"    pm.expect(jsonData.orders[0].unitsFact.boxes).to.eql(2);\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tkFmOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"vehicle\": {\n    \"registrationNumber\": \"A780PP180\",\n    \"trailerRegistrationNumber\": \"BT110255\",\n    \"model\": \"MERSEDES\",\n    \"type\": \"Unloading\",\n    \"trailerModel\": \"VB\",\n    \"carCapacityType\": \"t20\",\n    \"features\": [\n      \"ThermalRecorder\", \"HydraulicLift\"\n    ],\n    \"comment\": \"{{comment}} infoVehicleUnload\"\n  },\n  \"driver\": {\n    \"name\": \"Теплов Алексей Александрович\",\n    \"phone\": \"8(909)132-12-12\",\n    \"passport\": {\n      \"series\": \"WE23\",\n      \"number\": \"765548\",\n      \"issuedBy\": \"ГУ МВД России по Московской области\",\n      \"issuedDate\": \"2021-10-01\"\n    },\n    \"type\": \"Unloading\",\n    \"drivingLicense\": {\n      \"number\": \"A65I8\",\n      \"issuedDate\": \"2021-10-01\",\n      \"expirationDate\": \"2023-10-01\"\n    },\n    \"features\": [\n      \"MedicalBook\", \"FreightForwarder\"\n    ],\n    \"comment\": \"{{comment}} infoDriverUnload\"\n  },\n  \"carriage\": {{number}},\n  \"financials\": {\n    \"baseCost\": 170.69,\n    \"additionalCosts\": [\n      {\n        \"type\": \"Returning\",\n        \"cost\": 70.69\n      }\n    ]\n  },\n  \"unitsFact\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 1,\n    \"positionTo\": 3,\n    \"pallets\": 3,\n    \"boxes\": 4,\n    \"items\": 5,\n    \"weight\": 3000,\n    \"cost\": 20000.75,\n    \"volume\": 10,\n    \"length\": 10,\n    \"width\": 10,\n    \"height\": 10\n  },\n  \"orders\": [\n    {\n      \"orderIndex\": 0,\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 1,\n        \"positionTo\": 1,\n        \"pallets\": 1,\n        \"boxes\": 2,\n        \"items\": 1,\n        \"weight\": 30,\n        \"cost\": 2000,\n        \"volume\": 10,\n        \"length\": 10,\n        \"width\": 10,\n        \"height\": 10\n      }\n    }\n  ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/{{ID}}/info",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"{{ID}}",
												"info"
											]
										}
									},
									"response": []
								},
								{
									"name": "Ошибка при попытке изменения данных в точке выгрузки от ГО в статусе Доставлено",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 1,\r",
													"    \"Pallets\": 1,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ID\", res.json().id);\r",
													"\r",
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations/\" + pm.variables.get(\"ID\") + \"/status\",\r",
													"    method: \"PUT\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"tkFmOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"    mode: 'raw',\r",
													"    raw: JSON.stringify({ \r",
													"        \"status\": \"Delivered\",\r",
													"        \"comment\": null\r",
													"\r",
													"})  \r",
													"    } \r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.json().status).to.be.eql(\"Delivered\");\r",
													"        pm.variables.set(\"ID\", res.json().id);\r",
													"     }\r",
													"     )\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что ошибка соответствует ожидаемой\", function () {\r",
													"     pm.expect(jsonData.error).to.eql(\"Невозможно редактировать поле Carriage в статусе Delivered\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{goPoolingOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"carriage\": {{number}},\n  \"unitsFact\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 1,\n    \"positionTo\": 3,\n    \"pallets\": 3,\n    \"boxes\": 4,\n    \"items\": 5,\n    \"weight\": 3000,\n    \"cost\": 20000.75,\n    \"volume\": 10,\n    \"length\": 10,\n    \"width\": 10,\n    \"height\": 10\n  },\n  \"orders\": [\n    {\n      \"orderIndex\": 0,\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 1,\n        \"positionTo\": 1,\n        \"pallets\": 1,\n        \"boxes\": 2,\n        \"items\": 1,\n        \"weight\": 30,\n        \"cost\": 2000,\n        \"volume\": 10,\n        \"length\": 10,\n        \"width\": 10,\n        \"height\": 10\n      }\n    }\n  ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/{{ID}}/info",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"{{ID}}",
												"info"
											]
										}
									},
									"response": []
								},
								{
									"name": "Ошибка при попытке изменения данных в точке выгрузки от TK в статусе Отменено",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 1,\r",
													"    \"Pallets\": 1,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ID\", res.json().id);\r",
													"\r",
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations/\" + pm.variables.get(\"ID\") + \"/status\",\r",
													"    method: \"PUT\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"    mode: 'raw',\r",
													"    raw: JSON.stringify({ \r",
													"        \"status\": \"Canceled\",\r",
													"        \"comment\": null\r",
													"\r",
													"})  \r",
													"    } \r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.json().status).to.be.eql(\"Canceled\");\r",
													"        pm.variables.set(\"ID\", res.json().id);\r",
													"     }\r",
													"     )\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что ошибка соответствует ожидаемой\", function () {\r",
													"     pm.expect(jsonData.error).to.eql(\"Невозможно редактировать поле Carriage в статусе Canceled, Невозможно редактировать поле Vehicles в статусе Canceled, Невозможно редактировать поле Drivers в статусе Canceled\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tkFmOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"vehicle\": {\n    \"registrationNumber\": \"A780PP180\",\n    \"trailerRegistrationNumber\": \"BT110255\",\n    \"model\": \"MERSEDES\",\n    \"type\": \"Loading\",\n    \"trailerModel\": \"VB\",\n    \"carCapacityType\": \"t20\",\n    \"features\": [\n      \"ThermalRecorder\", \"HydraulicLift\"\n    ],\n    \"comment\": \"{{comment}} infoVehicleLoad\"\n  },\n  \"driver\": {\n    \"name\": \"Теплов Алексей Александрович\",\n    \"phone\": \"8(909)132-12-12\",\n    \"passport\": {\n      \"series\": \"WE23\",\n      \"number\": \"765548\",\n      \"issuedBy\": \"ГУ МВД России по Московской области\",\n      \"issuedDate\": \"2021-10-01\"\n    },\n    \"type\": \"Loading\",\n    \"drivingLicense\": {\n      \"number\": \"A65I8\",\n      \"issuedDate\": \"2021-10-01\",\n      \"expirationDate\": \"2023-10-01\"\n    },\n    \"features\": [\n      \"MedicalBook\", \"FreightForwarder\"\n    ],\n    \"comment\": \"{{comment}} infoDriverLoad\"\n  },\n  \"carriage\": \"{{number}}\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/{{ID}}/info",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"{{ID}}",
												"info"
											]
										}
									},
									"response": []
								},
								{
									"name": "Ошибка при попытке изменения данных в точке выгрузки от ТС",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 1,\r",
													"    \"Pallets\": 1,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ID\", res.json().id);\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что ошибка соответствует ожидаемой\", function () {\r",
													"     pm.expect(jsonData.error).to.eql(\"Невозможно редактировать поле Orders.UnitsFact в роли Client, Невозможно редактировать поле UnitsFact в роли Client\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{tsTanderOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"carriage\": {{number}},\n  \"unitsFact\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 1,\n    \"positionTo\": 3,\n    \"pallets\": 3,\n    \"boxes\": 4,\n    \"items\": 5,\n    \"weight\": 3000,\n    \"cost\": 20000.75,\n    \"volume\": 10,\n    \"length\": 10,\n    \"width\": 10,\n    \"height\": 10\n  },\n  \"orders\": [\n    {\n      \"orderIndex\": 0,\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 1,\n        \"positionTo\": 1,\n        \"pallets\": 1,\n        \"boxes\": 2,\n        \"items\": 1,\n        \"weight\": 30,\n        \"cost\": 2000,\n        \"volume\": 10,\n        \"length\": 10,\n        \"width\": 10,\n        \"height\": 10\n      }\n    }\n  ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/{{ID}}/info",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"{{ID}}",
												"info"
											]
										}
									},
									"response": []
								},
								{
									"name": "Изменение данных в точке загрузки по номеру от ГО",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 1,\r",
													"    \"Pallets\": 1,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ReservationNumber\", res.json().number);\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Проверка, что номер перевозки изменен\", function () {\r",
													"    pm.expect(jsonData.carriageString).to.eql(\"736899\");\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что UnitsFact в путевых точках изменены\", function () {\r",
													"    pm.expect(jsonData.unitsFact.pallets).to.eql(3);\r",
													"    pm.expect(jsonData.unitsFact.items).to.eql(5);\r",
													"    pm.expect(jsonData.unitsFact.cost).to.eql(20000.75);\r",
													"    pm.expect(jsonData.orders[0].unitsFact.items).to.eql(1);\r",
													"    pm.expect(jsonData.orders[0].unitsFact.weight).to.eql(30.0);\r",
													"    pm.expect(jsonData.orders[0].unitsFact.boxes).to.eql(2);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{goPoolingOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"carriage\": \"736899\",\n  \"unitsFact\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 1,\n    \"positionTo\": 3,\n    \"pallets\": 3,\n    \"boxes\": 4,\n    \"items\": 5,\n    \"weight\": 3000,\n    \"cost\": 20000.75,\n    \"volume\": 10,\n    \"length\": 10,\n    \"width\": 10,\n    \"height\": 10\n  },\n  \"orders\": [\n    {\n      \"orderIndex\": 0,\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 1,\n        \"positionTo\": 1,\n        \"pallets\": 1,\n        \"boxes\": 2,\n        \"items\": 1,\n        \"weight\": 30,\n        \"cost\": 2000,\n        \"volume\": 10,\n        \"length\": 10,\n        \"width\": 10,\n        \"height\": 10\n      }\n    }\n  ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/number/{{ReservationNumber}}/info",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"number",
												"{{ReservationNumber}}",
												"info"
											]
										}
									},
									"response": []
								},
								{
									"name": "Ошибка при попытке изменения данных в точке загрузки по номеру от ГО",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 1,\r",
													"    \"Pallets\": 1,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ReservationNumber\", res.json().number);\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что ошибка соответствует ожидаемой\", function () {\r",
													"     pm.expect(jsonData.error).to.eql(\"Редактирование финансовой информации доступно только перевозчику, на которого назначена данная заявка\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{goPoolingOT}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"vehicle\": {\n    \"registrationNumber\": \"A780PP180\",\n    \"trailerRegistrationNumber\": \"BT110255\",\n    \"model\": \"MERSEDES\",\n    \"type\": \"Loading\",\n    \"trailerModel\": \"VB\",\n    \"carCapacityType\": \"t20\",\n    \"features\": [\n      \"ThermalRecorder\", \"HydraulicLift\"\n    ],\n    \"comment\": \"{{comment}} infoVehicleLoad\"\n  },\n  \"driver\": {\n    \"name\": \"Теплов Алексей Александрович\",\n    \"phone\": \"8(909)132-12-12\",\n    \"passport\": {\n      \"series\": \"WE23\",\n      \"number\": \"765548\",\n      \"issuedBy\": \"ГУ МВД России по Московской области\",\n      \"issuedDate\": \"2021-10-01\"\n    },\n    \"type\": \"Loading\",\n    \"drivingLicense\": {\n      \"number\": \"A65I8\",\n      \"issuedDate\": \"2021-10-01\",\n      \"expirationDate\": \"2023-10-01\"\n    },\n    \"features\": [\n      \"MedicalBook\", \"FreightForwarder\"\n    ],\n    \"comment\": \"{{comment}} infoDriverLoad\"\n  },\n  \"carriage\": \"736899\",\n  \"financials\": {\n    \"baseCost\": 170.69,\n    \"additionalCosts\": [\n      {\n        \"type\": \"Returning\",\n        \"cost\": 70.69\n      }\n    ]\n  },\n  \"unitsFact\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 1,\n    \"positionTo\": 3,\n    \"pallets\": 3,\n    \"boxes\": 4,\n    \"items\": 5,\n    \"weight\": 3000,\n    \"cost\": 20000.75,\n    \"volume\": 10,\n    \"length\": 10,\n    \"width\": 10,\n    \"height\": 10\n  },\n  \"orders\": [\n    {\n      \"orderIndex\": 0,\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 1,\n        \"positionTo\": 1,\n        \"pallets\": 1,\n        \"boxes\": 2,\n        \"items\": 1,\n        \"weight\": 30,\n        \"cost\": 2000,\n        \"volume\": 10,\n        \"length\": 10,\n        \"width\": 10,\n        \"height\": 10\n      }\n    }\n  ]\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/number/{{ReservationNumber}}/info",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"number",
												"{{ReservationNumber}}",
												"info"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var moment = require('moment');",
											"pm.variables.set(\"currentDate\", moment().add(1, 'week').format(\"YYYY-MM-DD\"));",
											"pm.variables.set(\"currentDate + a week\", moment().add(2, 'week').format(\"YYYY-MM-DD\"));",
											"",
											"const number = pm.variables.replaceIn(\"{{$randomInt}}\");",
											"pm.variables.set(\"number\", number);",
											"",
											"const com = pm.variables.replaceIn(\"{{$randomCity}}\");",
											"pm.variables.set(\"comment\", com);",
											"",
											"pm.sendRequest({",
											"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/slots?consolidationDateFrom=\" + pm.variables.get(\"currentDate\") + \"&consolidationDateTo=\" + pm.variables.get(\"currentDate + a week\") + \"&shippingRegionId=\" + pm.globals.get(\"MoscowShippingRegion\") + \"&UnloadingWarehouseId=\" + pm.globals.get(\"KirovUnloadingWarehouse\") + \"&carrierId=\" + pm.globals.get(\"FMCarrier\"),",
											"    method: \"GET\",",
											"    header: {",
											"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),",
											"    },",
											"},",
											"    function (err, res) {",
											"        console.log(res.json());",
											"        pm.expect(res.status).to.eql(\"OK\");",
											"        pm.variables.set(\"pre-requestStatus1\", res.status);",
											"        pm.variables.set(\"slotId\", res.json()[1].id);",
											"        pm.variables.set(\"productType\", res.json()[1].productTypes[0]);",
											"        pm.variables.set(\"carrier\", res.json()[1].carrier.id);",
											"        pm.variables.set(\"client\", res.json()[1].client.id);",
											"        pm.variables.set(\"carType\", res.json()[1].carType);",
											"        pm.variables.set(\"unloadingWarehouse\", res.json()[1].unloadingWarehouse.id);",
											"        pm.variables.set(\"consolidationDate\", res.json()[1].consolidationDate);",
											"         pm.variables.set(\"departureDate\", res.json()[1].departureDate); ",
											"        pm.variables.set(\"deliveryDate\", res.json()[1].deliveryDate);",
											"    });",
											"",
											"pm.sendRequest({",
											"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/slots?consolidationDateFrom=\" + pm.variables.get(\"currentDate\") + \"&consolidationDateTo=\" + pm.variables.get(\"currentDate + a week\") + \"&shippingRegionId=\" + pm.globals.get(\"MoscowShippingRegion\") + \"&UnloadingWarehouseId=\" + pm.globals.get(\"KirovUnloadingWarehouse\") + \"&carrierId=\" + pm.globals.get(\"ItecoCarrier\"),",
											"    method: \"GET\",",
											"    header: {",
											"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),",
											"    },",
											"},",
											"    function (err, res) {",
											"        console.log(res.json());",
											"        pm.expect(res.status).to.eql(\"OK\");",
											"        pm.variables.set(\"slotIdIteco\", res.json()[0].id);",
											"        pm.variables.set(\"productTypeIteco\", res.json()[0].productTypes[0]);",
											"        pm.variables.set(\"carrierIteco\", res.json()[0].carrier.id);",
											"        pm.variables.set(\"clientIteco\", res.json()[0].client.id);",
											"        pm.variables.set(\"carTypeIteco\", res.json()[0].carType);",
											"        pm.variables.set(\"unloadingWarehouseIteco\", res.json()[0].unloadingWarehouse.id);",
											"        pm.variables.set(\"consolidationDateIteco\", res.json()[0].consolidationDate);",
											"        pm.variables.set(\"departureDateIteco\", res.json()[0].departureDate); ",
											"        pm.variables.set(\"deliveryDateIteco\", res.json()[0].deliveryDate);",
											"    });"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Cancel",
							"item": [
								{
									"name": "Отмена бронирования",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 3,\r",
													"    \"Pallets\": 3,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 2,\r",
													"        \"PositionTo\": 2,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 3,\r",
													"        \"PositionTo\": 3,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ID\", res.json().id);\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"const isStatus = \"Canceled\";\r",
													"\r",
													"pm.test(\"Проверка, что бронирование отменено\", function () {\r",
													"   pm.expect(jsonData.id).to.eql(pm.variables.get(\"ID\"));\r",
													"   pm.expect(jsonData.status).to.eql(isStatus);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{goPoolingOT}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/{{ID}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"{{ID}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Отмена бронирования по номеру",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 3,\r",
													"    \"Pallets\": 3,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 2,\r",
													"        \"PositionTo\": 2,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 3,\r",
													"        \"PositionTo\": 3,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ReservationNumber\", res.json().number);\r",
													"     });"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"const isStatus = \"Canceled\";\r",
													"\r",
													"pm.test(\"Проверка, что бронирование отменено\", function () {\r",
													"   pm.expect(jsonData.number).to.eql(pm.variables.get(\"ReservationNumber\"));\r",
													"   pm.expect(jsonData.status).to.eql(isStatus);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{goPoolingOT}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/number/{{ReservationNumber}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"number",
												"{{ReservationNumber}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Ошибка при отмене бронирования, когда бронь уже отменена",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",\r",
													"    method: \"POST\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"        \"content-type\": \"application/json\"\r",
													"    },\r",
													"    body: {\r",
													"        mode: 'raw',\r",
													"        raw: JSON.stringify({ \r",
													"  \"SlotId\": pm.variables.get(\"slotId\"),\r",
													"  \"ForeignId\": null,\r",
													"  \"ShippingType\": \"Pooling\",\r",
													"  \"ReservationType\": \"Basic\",\r",
													"  \"CarType\": pm.variables.get(\"carType\"),\r",
													"  \"Carrier\": {\r",
													"    \"id\": pm.variables.get(\"carrier\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"Client\": {\r",
													"   \"id\": pm.variables.get(\"client\"),\r",
													"    \"ForeignId\": null\r",
													"  },\r",
													"  \"ProductType\": pm.variables.get(\"productType\"),\r",
													"  \"CarCapacityType\": \"t15\",\r",
													"  \"Units\": {\r",
													"    \"PositionFrom\": 1,\r",
													"    \"PositionTo\": 3,\r",
													"    \"Pallets\": 3,\r",
													"    \"Weight\": 401.079,\r",
													"    \"Cost\": 38866.65,\r",
													"    \"Boxes\": null\r",
													"  },\r",
													"  \"LoadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": \"5d3ad3c0c6bbff14e8e1eb38\",\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\",\r",
													"                \"to\": pm.variables.get(\"consolidationDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"UnloadingPoints\": [\r",
													"    {\r",
													"      \"OrderNumbers\": [\r",
													"        \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"BK03000\" + pm.variables.get(\"number\")\r",
													"      ],\r",
													"      \"Warehouse\": {\r",
													"         \"id\": pm.variables.get(\"unloadingWarehouse\"),\r",
													"        \"ForeignId\": null\r",
													"      },\r",
													"      \"AddressInfo\": null,\r",
													"      \"DateTime\": {\r",
													"        \"from\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\",\r",
													"        \"to\": pm.variables.get(\"deliveryDate\") + \"T14:32:13\"\r",
													"      },\r",
													"      \"Status\": \"Scheduled\",\r",
													"      \"DateTimeArrived\": null,\r",
													"      \"DateTimeDeparted\": null\r",
													"    }\r",
													"  ],\r",
													"  \"Orders\": [\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 1,\r",
													"        \"PositionTo\": 1,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BL03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 2,\r",
													"        \"PositionTo\": 2,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 54.258,\r",
													"        \"Cost\": 11197.68,\r",
													"        \"Boxes\": 7\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\"),\r",
													"        \"type\": \"Transit\"\r",
													"    },\r",
													"    {\r",
													"      \"Units\": {\r",
													"        \"PositionFrom\": 3,\r",
													"        \"PositionTo\": 3,\r",
													"        \"Pallets\": null,\r",
													"        \"Weight\": 308.301,\r",
													"        \"Cost\": 27668.97,\r",
													"        \"Boxes\": 25\r",
													"      },\r",
													"       \"number\": \"BK03000\" + pm.variables.get(\"number\"),\r",
													"        \"waybillNumber\": pm.variables.get(\"number\"),\r",
													"        \"consignorNumber\": \"HS\" + pm.variables.get(\"number\")\r",
													"    }\r",
													"  ],\r",
													"  \"Temperature\": {\r",
													"    \"From\": 2,\r",
													"    \"To\": 25\r",
													"  },\r",
													"  \"ServicesNeeded\": [\r",
													"    \"Basic\"\r",
													"  ],\r",
													"  \"comment\": pm.variables.get(\"comment\"),\r",
													"  \"Version\": null,\r",
													"  \"Status\": null\r",
													"} )\r",
													"       \r",
													"    }\r",
													"},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.status).to.eql(\"OK\");\r",
													"        pm.variables.set(\"ReservationNumber\", res.json().number);\r",
													"\r",
													"pm.sendRequest({\r",
													"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations/number/\" + pm.variables.get(\"ReservationNumber\"),\r",
													"    method: \"DELETE\",\r",
													"    header: {\r",
													"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
													"    }},\r",
													"    function (err, res) {\r",
													"        console.log(res.json());\r",
													"        pm.expect(res.json().status).to.be.eql(\"Canceled\");\r",
													"        pm.variables.set(\"ReservationNumber\", res.json().number);\r",
													"     }\r",
													"    )\r",
													"     });\r",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что ошибка соответствует ожидаемой\", function () {\r",
													"     pm.expect(jsonData.error).to.eql(\"Бронирование уже в статусе Отменено\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{goPoolingOT}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/number/{{ReservationNumber}}",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"number",
												"{{ReservationNumber}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Ошибка при отмене бронирования, когда бронь не найдена",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Проверка, что код ответа 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"Проверка, что ошибка соответствует ожидаемой\", function () {\r",
													"     pm.expect(jsonData.error).to.eql(\"Заявка не найдена\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{goPoolingOT}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v2/reservations/000000000000000000000001",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v2",
												"reservations",
												"000000000000000000000001"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var moment = require('moment');",
											"pm.variables.set(\"currentDate\", moment().add(1, 'week').format(\"YYYY-MM-DD\"));",
											"pm.variables.set(\"currentDate + a week\", moment().add(2, 'week').format(\"YYYY-MM-DD\"));",
											"",
											"const number = pm.variables.replaceIn(\"{{$randomInt}}\");",
											"pm.variables.set(\"number\", number);",
											"",
											"const com = pm.variables.replaceIn(\"{{$randomCity}}\");",
											"pm.variables.set(\"comment\", com);",
											"",
											"pm.sendRequest({",
											"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/slots?consolidationDateFrom=\" + pm.variables.get(\"currentDate\") + \"&consolidationDateTo=\" + pm.variables.get(\"currentDate + a week\") + \"&shippingRegionId=\" + pm.globals.get(\"MoscowShippingRegion\") + \"&UnloadingWarehouseId=\" + pm.globals.get(\"IvanovoUnloadingWarehouse\") + \"&carrierId=\" + pm.globals.get(\"FMCarrier\"),",
											"    method: \"GET\",",
											"    header: {",
											"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),",
											"    },",
											"},",
											"    function (err, res) {",
											"        console.log(res.json());",
											"        pm.expect(res.status).to.eql(\"OK\");",
											"        pm.variables.set(\"pre-requestStatus1\", res.status);",
											"        pm.variables.set(\"slotId\", res.json()[0].id);",
											"        pm.variables.set(\"productType\", res.json()[0].productTypes[0]);",
											"        pm.variables.set(\"carrier\", res.json()[0].carrier.id);",
											"        pm.variables.set(\"client\", res.json()[0].client.id);",
											"        pm.variables.set(\"carType\", res.json()[0].carType);",
											"        pm.variables.set(\"unloadingWarehouse\", res.json()[0].unloadingWarehouse.id);",
											"        pm.variables.set(\"consolidationDate\", res.json()[0].consolidationDate);",
											"         pm.variables.set(\"departureDate\", res.json()[0].departureDate); ",
											"        pm.variables.set(\"deliveryDate\", res.json()[0].deliveryDate);",
											"        pm.variables.set(\"deliveryDate\", res.json()[0].deliveryDate);",
											"    });",
											"",
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					]
				},
				{
					"name": "FTL",
					"item": [
						{
							"name": "Создание бронирования FTL полный запрос+ схема",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var schema = {",
											"\t\"definitions\": {},",
											"\t\"$schema\": \"http://json-schema.org/draft-07/schema#\", ",
											"\t\"$id\": \"https://example.com/object1640338632.json\", ",
											"\t\"title\": \"Root\", ",
											"\t\"type\": \"object\",",
											"\t\"required\": [",
											"\t\t\"id\",",
											"\t\t\"number\",",
											"\t\t\"foreignId\",",
											"\t\t\"version\",",
											"\t\t\"status\",",
											"\t\t\"shippingType\",",
											"\t\t\"slotId\",",
											"\t\t\"carrier\",",
											"\t\t\"client\",",
											"\t\t\"consignor\",",
											"\t\t\"carType\",",
											"\t\t\"carCapacityType\",",
											"\t\t\"productType\",",
											"\t\t\"units\",",
											"\t\t\"unitsFact\",",
											"\t\t\"orders\",",
											"\t\t\"loadingPoints\",",
											"\t\t\"unloadingPoints\",",
											"\t\t\"servicesNeeded\",",
											"\t\t\"services\",",
											"\t\t\"temperature\",",
											"\t\t\"comments\",",
											"\t\t\"carriage\",",
											"\t\t\"carriageString\",",
											"\t\t\"shippingCost\",",
											"\t\t\"vehicles\",",
											"\t\t\"vehicle\",",
											"\t\t\"drivers\",",
											"\t\t\"driver\",",
											"\t\t\"unitsAvailable\",",
											"\t\t\"unitsAvailableMin\",",
											"\t\t\"editableUntil\",",
											"\t\t\"financials\"",
											"\t],",
											"\t\"properties\": {",
											"\t\t\"id\": {",
											"\t\t\t\"$id\": \"#root/id\", ",
											"\t\t\t\"title\": \"Id\", ",
											"\t\t\t\"type\": \"string\",",
											"\t\t\t\"default\": \"\",",
											"\t\t\t\"examples\": [",
											"\t\t\t\t\"61c5927f2c28b6ba67f16915\"",
											"\t\t\t],",
											"\t\t\t\"pattern\": \"^.*$\"",
											"\t\t},",
											"\t\t\"number\": {",
											"\t\t\t\"$id\": \"#root/number\", ",
											"\t\t\t\"title\": \"Number\", ",
											"\t\t\t\"type\": \"string\",",
											"\t\t\t\"default\": \"\",",
											"\t\t\t\"examples\": [",
											"\t\t\t\t\"474856\"",
											"\t\t\t],",
											"\t\t\t\"pattern\": \"^.*$\"",
											"\t\t},",
											"\t\t\"foreignId\": {",
											"\t\t\t\"$id\": \"#root/foreignId\", ",
											"\t\t\t\"title\": \"Foreignid\", ",
											"\t\t\t\"type\": \"null\",",
											"\t\t\t\"default\": null",
											"\t\t},",
											"\t\t\"version\": {",
											"\t\t\t\"$id\": \"#root/version\", ",
											"\t\t\t\"title\": \"Version\", ",
											"\t\t\t\"type\": \"integer\",",
											"\t\t\t\"examples\": [",
											"\t\t\t\t1",
											"\t\t\t],",
											"\t\t\t\"default\": 0",
											"\t\t},",
											"\t\t\"status\": {",
											"\t\t\t\"$id\": \"#root/status\", ",
											"\t\t\t\"title\": \"Status\", ",
											"\t\t\t\"type\": \"string\",",
											"\t\t\t\"default\": \"\",",
											"\t\t\t\"examples\": [",
											"\t\t\t\t\"OnConfirmation\"",
											"\t\t\t],",
											"\t\t\t\"pattern\": \"^.*$\"",
											"\t\t},",
											"\t\t\"shippingType\": {",
											"\t\t\t\"$id\": \"#root/shippingType\", ",
											"\t\t\t\"title\": \"Shippingtype\", ",
											"\t\t\t\"type\": \"string\",",
											"\t\t\t\"default\": \"\",",
											"\t\t\t\"examples\": [",
											"\t\t\t\t\"FTL\"",
											"\t\t\t],",
											"\t\t\t\"pattern\": \"^.*$\"",
											"\t\t},",
											"\t\t\"slotId\": {",
											"\t\t\t\"$id\": \"#root/slotId\", ",
											"\t\t\t\"title\": \"Slotid\", ",
											"\t\t\t\"type\": \"null\",",
											"\t\t\t\"default\": null",
											"\t\t},",
											"\t\t\"carrier\": {",
											"\t\t\t\"$id\": \"#root/carrier\", ",
											"\t\t\t\"title\": \"Carrier\", ",
											"\t\t\t\"type\": \"object\",",
											"\t\t\t\"required\": [",
											"\t\t\t\t\"inn\",",
											"\t\t\t\t\"id\",",
											"\t\t\t\t\"foreignId\"",
											"\t\t\t],",
											"\t\t\t\"properties\": {",
											"\t\t\t\t\"inn\": {",
											"\t\t\t\t\t\"$id\": \"#root/carrier/inn\", ",
											"\t\t\t\t\t\"title\": \"Inn\", ",
											"\t\t\t\t\t\"type\": \"string\",",
											"\t\t\t\t\t\"default\": \"\",",
											"\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\"\"",
											"\t\t\t\t\t],",
											"\t\t\t\t\t\"pattern\": \"^.*$\"",
											"\t\t\t\t},",
											"\t\t\t\t\"id\": {",
											"\t\t\t\t\t\"$id\": \"#root/carrier/id\", ",
											"\t\t\t\t\t\"title\": \"Id\", ",
											"\t\t\t\t\t\"type\": \"string\",",
											"\t\t\t\t\t\"default\": \"\",",
											"\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\"5f43a3c47d0521017fe57152\"",
											"\t\t\t\t\t],",
											"\t\t\t\t\t\"pattern\": \"^.*$\"",
											"\t\t\t\t},",
											"\t\t\t\t\"foreignId\": {",
											"\t\t\t\t\t\"$id\": \"#root/carrier/foreignId\", ",
											"\t\t\t\t\t\"title\": \"Foreignid\", ",
											"\t\t\t\t\t\"type\": \"null\",",
											"\t\t\t\t\t\"default\": null",
											"\t\t\t\t}",
											"\t\t\t}",
											"\t\t}",
											",",
											"\t\t\"client\": {",
											"\t\t\t\"$id\": \"#root/client\", ",
											"\t\t\t\"title\": \"Client\", ",
											"\t\t\t\"type\": \"object\",",
											"\t\t\t\"required\": [",
											"\t\t\t\t\"inn\",",
											"\t\t\t\t\"id\",",
											"\t\t\t\t\"foreignId\"",
											"\t\t\t],",
											"\t\t\t\"properties\": {",
											"\t\t\t\t\"inn\": {",
											"\t\t\t\t\t\"$id\": \"#root/client/inn\", ",
											"\t\t\t\t\t\"title\": \"Inn\", ",
											"\t\t\t\t\t\"type\": \"null\",",
											"\t\t\t\t\t\"default\": null",
											"\t\t\t\t},",
											"\t\t\t\t\"id\": {",
											"\t\t\t\t\t\"$id\": \"#root/client/id\", ",
											"\t\t\t\t\t\"title\": \"Id\", ",
											"\t\t\t\t\t\"type\": \"string\",",
											"\t\t\t\t\t\"default\": \"\",",
											"\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\"5b06c5b70c7e6f6764d50d0e\"",
											"\t\t\t\t\t],",
											"\t\t\t\t\t\"pattern\": \"^.*$\"",
											"\t\t\t\t},",
											"\t\t\t\t\"foreignId\": {",
											"\t\t\t\t\t\"$id\": \"#root/client/foreignId\", ",
											"\t\t\t\t\t\"title\": \"Foreignid\", ",
											"\t\t\t\t\t\"type\": \"string\",",
											"\t\t\t\t\t\"default\": \"\",",
											"\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\"66\"",
											"\t\t\t\t\t],",
											"\t\t\t\t\t\"pattern\": \"^.*$\"",
											"\t\t\t\t}",
											"\t\t\t}",
											"\t\t}",
											",",
											"\t\t\"consignor\": {",
											"\t\t\t\"$id\": \"#root/consignor\", ",
											"\t\t\t\"title\": \"Consignor\", ",
											"\t\t\t\"type\": \"object\",",
											"\t\t\t\"required\": [",
											"\t\t\t\t\"inn\",",
											"\t\t\t\t\"id\",",
											"\t\t\t\t\"foreignId\"",
											"\t\t\t],",
											"\t\t\t\"properties\": {",
											"\t\t\t\t\"inn\": {",
											"\t\t\t\t\t\"$id\": \"#root/consignor/inn\", ",
											"\t\t\t\t\t\"title\": \"Inn\", ",
											"\t\t\t\t\t\"type\": \"string\",",
											"\t\t\t\t\t\"default\": \"\",",
											"\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\"7725216105\"",
											"\t\t\t\t\t],",
											"\t\t\t\t\t\"pattern\": \"^.*$\"",
											"\t\t\t\t},",
											"\t\t\t\t\"id\": {",
											"\t\t\t\t\t\"$id\": \"#root/consignor/id\", ",
											"\t\t\t\t\t\"title\": \"Id\", ",
											"\t\t\t\t\t\"type\": \"string\",",
											"\t\t\t\t\t\"default\": \"\",",
											"\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\"5b06c5b70c7e6f6764d50d13\"",
											"\t\t\t\t\t],",
											"\t\t\t\t\t\"pattern\": \"^.*$\"",
											"\t\t\t\t},",
											"\t\t\t\t\"foreignId\": {",
											"\t\t\t\t\t\"$id\": \"#root/consignor/foreignId\", ",
											"\t\t\t\t\t\"title\": \"Foreignid\", ",
											"\t\t\t\t\t\"type\": \"string\",",
											"\t\t\t\t\t\"default\": \"\",",
											"\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\"1959\"",
											"\t\t\t\t\t],",
											"\t\t\t\t\t\"pattern\": \"^.*$\"",
											"\t\t\t\t}",
											"\t\t\t}",
											"\t\t}",
											",",
											"\t\t\"carType\": {",
											"\t\t\t\"$id\": \"#root/carType\", ",
											"\t\t\t\"title\": \"Cartype\", ",
											"\t\t\t\"type\": \"string\",",
											"\t\t\t\"default\": \"\",",
											"\t\t\t\"examples\": [",
											"\t\t\t\t\"Tent\"",
											"\t\t\t],",
											"\t\t\t\"pattern\": \"^.*$\"",
											"\t\t},",
											"\t\t\"carCapacityType\": {",
											"\t\t\t\"$id\": \"#root/carCapacityType\", ",
											"\t\t\t\"title\": \"Carcapacitytype\", ",
											"\t\t\t\"type\": \"string\",",
											"\t\t\t\"default\": \"\",",
											"\t\t\t\"examples\": [",
											"\t\t\t\t\"t20\"",
											"\t\t\t],",
											"\t\t\t\"pattern\": \"^.*$\"",
											"\t\t},",
											"\t\t\"productType\": {",
											"\t\t\t\"$id\": \"#root/productType\", ",
											"\t\t\t\"title\": \"Producttype\", ",
											"\t\t\t\"type\": \"string\",",
											"\t\t\t\"default\": \"\",",
											"\t\t\t\"examples\": [",
											"\t\t\t\t\"Alco\"",
											"\t\t\t],",
											"\t\t\t\"pattern\": \"^.*$\"",
											"\t\t},",
											"\t\t\"units\": {",
											"\t\t\t\"$id\": \"#root/units\", ",
											"\t\t\t\"title\": \"Units\", ",
											"\t\t\t\"type\": \"object\",",
											"\t\t\t\"required\": [",
											"\t\t\t\t\"palletType\",",
											"\t\t\t\t\"positionFrom\",",
											"\t\t\t\t\"positionTo\",",
											"\t\t\t\t\"pallets\",",
											"\t\t\t\t\"boxes\",",
											"\t\t\t\t\"items\",",
											"\t\t\t\t\"weight\",",
											"\t\t\t\t\"cost\"",
											"\t\t\t],",
											"\t\t\t\"properties\": {",
											"\t\t\t\t\"palletType\": {",
											"\t\t\t\t\t\"$id\": \"#root/units/palletType\", ",
											"\t\t\t\t\t\"title\": \"Pallettype\", ",
											"\t\t\t\t\t\"type\": \"string\",",
											"\t\t\t\t\t\"default\": \"\",",
											"\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\"Euro\"",
											"\t\t\t\t\t],",
											"\t\t\t\t\t\"pattern\": \"^.*$\"",
											"\t\t\t\t},",
											"\t\t\t\t\"positionFrom\": {",
											"\t\t\t\t\t\"$id\": \"#root/units/positionFrom\", ",
											"\t\t\t\t\t\"title\": \"Positionfrom\", ",
											"\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t1",
											"\t\t\t\t\t],",
											"\t\t\t\t\t\"default\": 0",
											"\t\t\t\t},",
											"\t\t\t\t\"positionTo\": {",
											"\t\t\t\t\t\"$id\": \"#root/units/positionTo\", ",
											"\t\t\t\t\t\"title\": \"Positionto\", ",
											"\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t20",
											"\t\t\t\t\t],",
											"\t\t\t\t\t\"default\": 0",
											"\t\t\t\t},",
											"\t\t\t\t\"pallets\": {",
											"\t\t\t\t\t\"$id\": \"#root/units/pallets\", ",
											"\t\t\t\t\t\"title\": \"Pallets\", ",
											"\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t20",
											"\t\t\t\t\t],",
											"\t\t\t\t\t\"default\": 0",
											"\t\t\t\t},",
											"\t\t\t\t\"boxes\": {",
											"\t\t\t\t\t\"$id\": \"#root/units/boxes\", ",
											"\t\t\t\t\t\"title\": \"Boxes\", ",
											"\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t30",
											"\t\t\t\t\t],",
											"\t\t\t\t\t\"default\": 0",
											"\t\t\t\t},",
											"\t\t\t\t\"items\": {",
											"\t\t\t\t\t\"$id\": \"#root/units/items\", ",
											"\t\t\t\t\t\"title\": \"Items\", ",
											"\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t40",
											"\t\t\t\t\t],",
											"\t\t\t\t\t\"default\": 0",
											"\t\t\t\t},",
											"\t\t\t\t\"weight\": {",
											"\t\t\t\t\t\"$id\": \"#root/units/weight\", ",
											"\t\t\t\t\t\"title\": \"Weight\", ",
											"\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t50",
											"\t\t\t\t\t],",
											"\t\t\t\t\t\"default\": 0",
											"\t\t\t\t},",
											"\t\t\t\t\"cost\": {",
											"\t\t\t\t\t\"$id\": \"#root/units/cost\", ",
											"\t\t\t\t\t\"title\": \"Cost\", ",
											"\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t110",
											"\t\t\t\t\t],",
											"\t\t\t\t\t\"default\": 0",
											"\t\t\t\t}",
											"\t\t\t}",
											"\t\t}",
											",",
											"\t\t\"unitsFact\": {",
											"\t\t\t\"$id\": \"#root/unitsFact\", ",
											"\t\t\t\"title\": \"Unitsfact\", ",
											"\t\t\t\"type\": \"object\",",
											"\t\t\t\"required\": [",
											"\t\t\t\t\"palletType\",",
											"\t\t\t\t\"positionFrom\",",
											"\t\t\t\t\"positionTo\",",
											"\t\t\t\t\"pallets\",",
											"\t\t\t\t\"boxes\",",
											"\t\t\t\t\"items\",",
											"\t\t\t\t\"weight\",",
											"\t\t\t\t\"cost\",",
											"\t\t\t\t\"volume\",",
											"\t\t\t\t\"length\",",
											"\t\t\t\t\"width\",",
											"\t\t\t\t\"height\"",
											"\t\t\t],",
											"\t\t\t\"properties\": {",
											"\t\t\t\t\"palletType\": {",
											"\t\t\t\t\t\"$id\": \"#root/unitsFact/palletType\", ",
											"\t\t\t\t\t\"title\": \"Pallettype\", ",
											"\t\t\t\t\t\"type\": \"string\",",
											"\t\t\t\t\t\"default\": \"\",",
											"\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\"Euro\"",
											"\t\t\t\t\t],",
											"\t\t\t\t\t\"pattern\": \"^.*$\"",
											"\t\t\t\t},",
											"\t\t\t\t\"positionFrom\": {",
											"\t\t\t\t\t\"$id\": \"#root/unitsFact/positionFrom\", ",
											"\t\t\t\t\t\"title\": \"Positionfrom\", ",
											"\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t0",
											"\t\t\t\t\t],",
											"\t\t\t\t\t\"default\": 0",
											"\t\t\t\t},",
											"\t\t\t\t\"positionTo\": {",
											"\t\t\t\t\t\"$id\": \"#root/unitsFact/positionTo\", ",
											"\t\t\t\t\t\"title\": \"Positionto\", ",
											"\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t0",
											"\t\t\t\t\t],",
											"\t\t\t\t\t\"default\": 0",
											"\t\t\t\t},",
											"\t\t\t\t\"pallets\": {",
											"\t\t\t\t\t\"$id\": \"#root/unitsFact/pallets\", ",
											"\t\t\t\t\t\"title\": \"Pallets\", ",
											"\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t0",
											"\t\t\t\t\t],",
											"\t\t\t\t\t\"default\": 0",
											"\t\t\t\t},",
											"\t\t\t\t\"boxes\": {",
											"\t\t\t\t\t\"$id\": \"#root/unitsFact/boxes\", ",
											"\t\t\t\t\t\"title\": \"Boxes\", ",
											"\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t0",
											"\t\t\t\t\t],",
											"\t\t\t\t\t\"default\": 0",
											"\t\t\t\t},",
											"\t\t\t\t\"items\": {",
											"\t\t\t\t\t\"$id\": \"#root/unitsFact/items\", ",
											"\t\t\t\t\t\"title\": \"Items\", ",
											"\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t0",
											"\t\t\t\t\t],",
											"\t\t\t\t\t\"default\": 0",
											"\t\t\t\t},",
											"\t\t\t\t\"weight\": {",
											"\t\t\t\t\t\"$id\": \"#root/unitsFact/weight\", ",
											"\t\t\t\t\t\"title\": \"Weight\", ",
											"\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t0",
											"\t\t\t\t\t],",
											"\t\t\t\t\t\"default\": 0",
											"\t\t\t\t},",
											"\t\t\t\t\"cost\": {",
											"\t\t\t\t\t\"$id\": \"#root/unitsFact/cost\", ",
											"\t\t\t\t\t\"title\": \"Cost\", ",
											"\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t0",
											"\t\t\t\t\t],",
											"\t\t\t\t\t\"default\": 0",
											"\t\t\t\t},",
											"\t\t\t\t\"volume\": {",
											"\t\t\t\t\t\"$id\": \"#root/unitsFact/volume\", ",
											"\t\t\t\t\t\"title\": \"Volume\", ",
											"\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t0",
											"\t\t\t\t\t],",
											"\t\t\t\t\t\"default\": 0",
											"\t\t\t\t},",
											"\t\t\t\t\"length\": {",
											"\t\t\t\t\t\"$id\": \"#root/unitsFact/length\", ",
											"\t\t\t\t\t\"title\": \"Length\", ",
											"\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t0",
											"\t\t\t\t\t],",
											"\t\t\t\t\t\"default\": 0",
											"\t\t\t\t},",
											"\t\t\t\t\"width\": {",
											"\t\t\t\t\t\"$id\": \"#root/unitsFact/width\", ",
											"\t\t\t\t\t\"title\": \"Width\", ",
											"\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t0",
											"\t\t\t\t\t],",
											"\t\t\t\t\t\"default\": 0",
											"\t\t\t\t},",
											"\t\t\t\t\"height\": {",
											"\t\t\t\t\t\"$id\": \"#root/unitsFact/height\", ",
											"\t\t\t\t\t\"title\": \"Height\", ",
											"\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t0",
											"\t\t\t\t\t],",
											"\t\t\t\t\t\"default\": 0",
											"\t\t\t\t}",
											"\t\t\t}",
											"\t\t}",
											",",
											"\t\t\"orders\": {",
											"\t\t\t\"$id\": \"#root/orders\", ",
											"\t\t\t\"title\": \"Orders\", ",
											"\t\t\t\"type\": \"array\",",
											"\t\t\t\"default\": [],",
											"\t\t\t\"items\":{",
											"\t\t\t\t\"$id\": \"#root/orders/items\", ",
											"\t\t\t\t\"title\": \"Items\", ",
											"\t\t\t\t\"type\": \"object\",",
											"\t\t\t\t\"required\": [",
											"\t\t\t\t\t\"number\",",
											"\t\t\t\t\t\"waybillNumber\",",
											"\t\t\t\t\t\"consignorNumber\",",
											"\t\t\t\t\t\"type\",",
											"\t\t\t\t\t\"units\",",
											"\t\t\t\t\t\"unitsFact\",",
											"\t\t\t\t\t\"productTransportWaybill\"",
											"\t\t\t\t],",
											"\t\t\t\t\"properties\": {",
											"\t\t\t\t\t\"number\": {",
											"\t\t\t\t\t\t\"$id\": \"#root/orders/items/number\", ",
											"\t\t\t\t\t\t\"title\": \"Number\", ",
											"\t\t\t\t\t\t\"type\": \"string\",",
											"\t\t\t\t\t\t\"default\": \"\",",
											"\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\"SS123456711\"",
											"\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\"pattern\": \"^.*$\"",
											"\t\t\t\t\t},",
											"\t\t\t\t\t\"waybillNumber\": {",
											"\t\t\t\t\t\t\"$id\": \"#root/orders/items/waybillNumber\", ",
											"\t\t\t\t\t\t\"title\": \"Waybillnumber\", ",
											"\t\t\t\t\t\t\"type\": \"string\",",
											"\t\t\t\t\t\t\"default\": \"\",",
											"\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\"wblN56711\"",
											"\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\"pattern\": \"^.*$\"",
											"\t\t\t\t\t},",
											"\t\t\t\t\t\"consignorNumber\": {",
											"\t\t\t\t\t\t\"$id\": \"#root/orders/items/consignorNumber\", ",
											"\t\t\t\t\t\t\"title\": \"Consignornumber\", ",
											"\t\t\t\t\t\t\"type\": \"null\",",
											"\t\t\t\t\t\t\"default\": null",
											"\t\t\t\t\t},",
											"\t\t\t\t\t\"type\": {",
											"\t\t\t\t\t\t\"$id\": \"#root/orders/items/type\", ",
											"\t\t\t\t\t\t\"title\": \"Type\", ",
											"\t\t\t\t\t\t\"type\": \"string\",",
											"\t\t\t\t\t\t\"default\": \"\",",
											"\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\"None\"",
											"\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\"pattern\": \"^.*$\"",
											"\t\t\t\t\t},",
											"\t\t\t\t\t\"units\": {",
											"\t\t\t\t\t\t\"$id\": \"#root/orders/items/units\", ",
											"\t\t\t\t\t\t\"title\": \"Units\", ",
											"\t\t\t\t\t\t\"type\": \"object\",",
											"\t\t\t\t\t\t\"required\": [",
											"\t\t\t\t\t\t\t\"palletType\",",
											"\t\t\t\t\t\t\t\"positionFrom\",",
											"\t\t\t\t\t\t\t\"positionTo\",",
											"\t\t\t\t\t\t\t\"pallets\",",
											"\t\t\t\t\t\t\t\"boxes\",",
											"\t\t\t\t\t\t\t\"items\",",
											"\t\t\t\t\t\t\t\"weight\",",
											"\t\t\t\t\t\t\t\"cost\"",
											"\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\"properties\": {",
											"\t\t\t\t\t\t\t\"palletType\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/orders/items/units/palletType\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Pallettype\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"string\",",
											"\t\t\t\t\t\t\t\t\"default\": \"\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t\"Euro\"",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"pattern\": \"^.*$\"",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"positionFrom\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/orders/items/units/positionFrom\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Positionfrom\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t1",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"default\": 0",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"positionTo\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/orders/items/units/positionTo\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Positionto\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t20",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"default\": 0",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"pallets\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/orders/items/units/pallets\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Pallets\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t20",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"default\": 0",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"boxes\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/orders/items/units/boxes\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Boxes\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t30",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"default\": 0",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"items\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/orders/items/units/items\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Items\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t40",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"default\": 0",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"weight\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/orders/items/units/weight\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Weight\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t50",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"default\": 0",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"cost\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/orders/items/units/cost\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Cost\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t110",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"default\": 0",
											"\t\t\t\t\t\t\t}",
											"\t\t\t\t\t\t}",
											"\t\t\t\t\t}",
											",",
											"\t\t\t\t\t\"unitsFact\": {",
											"\t\t\t\t\t\t\"$id\": \"#root/orders/items/unitsFact\", ",
											"\t\t\t\t\t\t\"title\": \"Unitsfact\", ",
											"\t\t\t\t\t\t\"type\": \"object\",",
											"\t\t\t\t\t\t\"required\": [",
											"\t\t\t\t\t\t\t\"palletType\",",
											"\t\t\t\t\t\t\t\"positionFrom\",",
											"\t\t\t\t\t\t\t\"positionTo\",",
											"\t\t\t\t\t\t\t\"pallets\",",
											"\t\t\t\t\t\t\t\"boxes\",",
											"\t\t\t\t\t\t\t\"items\",",
											"\t\t\t\t\t\t\t\"weight\",",
											"\t\t\t\t\t\t\t\"cost\",",
											"\t\t\t\t\t\t\t\"volume\",",
											"\t\t\t\t\t\t\t\"length\",",
											"\t\t\t\t\t\t\t\"width\",",
											"\t\t\t\t\t\t\t\"height\"",
											"\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\"properties\": {",
											"\t\t\t\t\t\t\t\"palletType\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/orders/items/unitsFact/palletType\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Pallettype\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"string\",",
											"\t\t\t\t\t\t\t\t\"default\": \"\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t\"Euro\"",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"pattern\": \"^.*$\"",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"positionFrom\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/orders/items/unitsFact/positionFrom\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Positionfrom\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t0",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"default\": 0",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"positionTo\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/orders/items/unitsFact/positionTo\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Positionto\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t0",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"default\": 0",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"pallets\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/orders/items/unitsFact/pallets\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Pallets\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t0",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"default\": 0",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"boxes\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/orders/items/unitsFact/boxes\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Boxes\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t0",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"default\": 0",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"items\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/orders/items/unitsFact/items\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Items\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t0",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"default\": 0",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"weight\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/orders/items/unitsFact/weight\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Weight\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t0",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"default\": 0",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"cost\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/orders/items/unitsFact/cost\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Cost\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t0",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"default\": 0",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"volume\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/orders/items/unitsFact/volume\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Volume\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t0",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"default\": 0",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"length\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/orders/items/unitsFact/length\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Length\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t0",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"default\": 0",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"width\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/orders/items/unitsFact/width\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Width\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t0",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"default\": 0",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"height\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/orders/items/unitsFact/height\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Height\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t0",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"default\": 0",
											"\t\t\t\t\t\t\t}",
											"\t\t\t\t\t\t}",
											"\t\t\t\t\t}",
											",",
											"\t\t\t\t\t\"productTransportWaybill\": {",
											"\t\t\t\t\t\t\"$id\": \"#root/orders/items/productTransportWaybill\", ",
											"\t\t\t\t\t\t\"title\": \"Producttransportwaybill\", ",
											"\t\t\t\t\t\t\"type\": \"string\",",
											"\t\t\t\t\t\t\"default\": \"\",",
											"\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\"TTN\"",
											"\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\"pattern\": \"^.*$\"",
											"\t\t\t\t\t}",
											"\t\t\t\t}",
											"\t\t\t}",
											"",
											"\t\t},",
											"\t\t\"loadingPoints\": {",
											"\t\t\t\"$id\": \"#root/loadingPoints\", ",
											"\t\t\t\"title\": \"Loadingpoints\", ",
											"\t\t\t\"type\": \"array\",",
											"\t\t\t\"default\": [],",
											"\t\t\t\"items\":{",
											"\t\t\t\t\"$id\": \"#root/loadingPoints/items\", ",
											"\t\t\t\t\"title\": \"Items\", ",
											"\t\t\t\t\"type\": \"object\",",
											"\t\t\t\t\"required\": [",
											"\t\t\t\t\t\"dateTime\",",
											"\t\t\t\t\t\"orderNumbers\",",
											"\t\t\t\t\t\"orderIndexes\",",
											"\t\t\t\t\t\"warehouse\",",
											"\t\t\t\t\t\"status\",",
											"\t\t\t\t\t\"dateTimeArrived\",",
											"\t\t\t\t\t\"dateTimeDeparted\",",
											"\t\t\t\t\t\"dateTimeArrivedByController\",",
											"\t\t\t\t\t\"dateTimeDepartedByController\",",
											"\t\t\t\t\t\"comment\",",
											"\t\t\t\t\t\"units\",",
											"\t\t\t\t\t\"unitsFact\"",
											"\t\t\t\t],",
											"\t\t\t\t\"properties\": {",
											"\t\t\t\t\t\"dateTime\": {",
											"\t\t\t\t\t\t\"$id\": \"#root/loadingPoints/items/dateTime\", ",
											"\t\t\t\t\t\t\"title\": \"Datetime\", ",
											"\t\t\t\t\t\t\"type\": \"object\",",
											"\t\t\t\t\t\t\"required\": [",
											"\t\t\t\t\t\t\t\"from\",",
											"\t\t\t\t\t\t\t\"to\"",
											"\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\"properties\": {",
											"\t\t\t\t\t\t\t\"from\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/loadingPoints/items/dateTime/from\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"From\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"string\",",
											"\t\t\t\t\t\t\t\t\"default\": \"\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t\"2021-12-31T15:28:57\"",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"pattern\": \"^.*$\"",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"to\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/loadingPoints/items/dateTime/to\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"To\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"string\",",
											"\t\t\t\t\t\t\t\t\"default\": \"\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t\"2021-12-31T15:28:57\"",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"pattern\": \"^.*$\"",
											"\t\t\t\t\t\t\t}",
											"\t\t\t\t\t\t}",
											"\t\t\t\t\t}",
											",",
											"\t\t\t\t\t\"orderNumbers\": {",
											"\t\t\t\t\t\t\"$id\": \"#root/loadingPoints/items/orderNumbers\", ",
											"\t\t\t\t\t\t\"title\": \"Ordernumbers\", ",
											"\t\t\t\t\t\t\"type\": \"array\",",
											"\t\t\t\t\t\t\"default\": [],",
											"\t\t\t\t\t\t\"items\":{",
											"\t\t\t\t\t\t\t\"$id\": \"#root/loadingPoints/items/orderNumbers/items\", ",
											"\t\t\t\t\t\t\t\"title\": \"Items\", ",
											"\t\t\t\t\t\t\t\"type\": \"string\",",
											"\t\t\t\t\t\t\t\"default\": \"\",",
											"\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\"SS123456711\"",
											"\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\"pattern\": \"^.*$\"",
											"\t\t\t\t\t\t}",
											"\t\t\t\t\t},",
											"\t\t\t\t\t\"orderIndexes\": {",
											"\t\t\t\t\t\t\"$id\": \"#root/loadingPoints/items/orderIndexes\", ",
											"\t\t\t\t\t\t\"title\": \"Orderindexes\", ",
											"\t\t\t\t\t\t\"type\": \"array\",",
											"\t\t\t\t\t\t\"default\": [],",
											"\t\t\t\t\t\t\"items\":{",
											"\t\t\t\t\t\t\t\"$id\": \"#root/loadingPoints/items/orderIndexes/items\", ",
											"\t\t\t\t\t\t\t\"title\": \"Items\", ",
											"\t\t\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t0",
											"\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\"default\": 0",
											"\t\t\t\t\t\t}",
											"\t\t\t\t\t},",
											"\t\t\t\t\t\"warehouse\": {",
											"\t\t\t\t\t\t\"$id\": \"#root/loadingPoints/items/warehouse\", ",
											"\t\t\t\t\t\t\"title\": \"Warehouse\", ",
											"\t\t\t\t\t\t\"type\": \"object\",",
											"\t\t\t\t\t\t\"required\": [",
											"\t\t\t\t\t\t\t\"gln\",",
											"\t\t\t\t\t\t\t\"id\",",
											"\t\t\t\t\t\t\t\"foreignId\"",
											"\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\"properties\": {",
											"\t\t\t\t\t\t\t\"gln\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/loadingPoints/items/warehouse/gln\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Gln\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"null\",",
											"\t\t\t\t\t\t\t\t\"default\": null",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"id\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/loadingPoints/items/warehouse/id\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Id\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"string\",",
											"\t\t\t\t\t\t\t\t\"default\": \"\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t\"5ddcd9eaf1d7f90001638e12\"",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"pattern\": \"^.*$\"",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"foreignId\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/loadingPoints/items/warehouse/foreignId\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Foreignid\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"string\",",
											"\t\t\t\t\t\t\t\t\"default\": \"\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t\"10\"",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"pattern\": \"^.*$\"",
											"\t\t\t\t\t\t\t}",
											"\t\t\t\t\t\t}",
											"\t\t\t\t\t}",
											",",
											"\t\t\t\t\t\"status\": {",
											"\t\t\t\t\t\t\"$id\": \"#root/loadingPoints/items/status\", ",
											"\t\t\t\t\t\t\"title\": \"Status\", ",
											"\t\t\t\t\t\t\"type\": \"string\",",
											"\t\t\t\t\t\t\"default\": \"\",",
											"\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\"Scheduled\"",
											"\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\"pattern\": \"^.*$\"",
											"\t\t\t\t\t},",
											"\t\t\t\t\t\"dateTimeArrived\": {",
											"\t\t\t\t\t\t\"$id\": \"#root/loadingPoints/items/dateTimeArrived\", ",
											"\t\t\t\t\t\t\"title\": \"Datetimearrived\", ",
											"\t\t\t\t\t\t\"type\": \"null\",",
											"\t\t\t\t\t\t\"default\": null",
											"\t\t\t\t\t},",
											"\t\t\t\t\t\"dateTimeDeparted\": {",
											"\t\t\t\t\t\t\"$id\": \"#root/loadingPoints/items/dateTimeDeparted\", ",
											"\t\t\t\t\t\t\"title\": \"Datetimedeparted\", ",
											"\t\t\t\t\t\t\"type\": \"null\",",
											"\t\t\t\t\t\t\"default\": null",
											"\t\t\t\t\t},",
											"\t\t\t\t\t\"dateTimeArrivedByController\": {",
											"\t\t\t\t\t\t\"$id\": \"#root/loadingPoints/items/dateTimeArrivedByController\", ",
											"\t\t\t\t\t\t\"title\": \"Datetimearrivedbycontroller\", ",
											"\t\t\t\t\t\t\"type\": \"null\",",
											"\t\t\t\t\t\t\"default\": null",
											"\t\t\t\t\t},",
											"\t\t\t\t\t\"dateTimeDepartedByController\": {",
											"\t\t\t\t\t\t\"$id\": \"#root/loadingPoints/items/dateTimeDepartedByController\", ",
											"\t\t\t\t\t\t\"title\": \"Datetimedepartedbycontroller\", ",
											"\t\t\t\t\t\t\"type\": \"null\",",
											"\t\t\t\t\t\t\"default\": null",
											"\t\t\t\t\t},",
											"\t\t\t\t\t\"comment\": {",
											"\t\t\t\t\t\t\"$id\": \"#root/loadingPoints/items/comment\", ",
											"\t\t\t\t\t\t\"title\": \"Comment\", ",
											"\t\t\t\t\t\t\"type\": \"string\",",
											"\t\t\t\t\t\t\"default\": \"\",",
											"\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\"et sapiente animi\"",
											"\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\"pattern\": \"^.*$\"",
											"\t\t\t\t\t},",
											"\t\t\t\t\t\"units\": {",
											"\t\t\t\t\t\t\"$id\": \"#root/loadingPoints/items/units\", ",
											"\t\t\t\t\t\t\"title\": \"Units\", ",
											"\t\t\t\t\t\t\"type\": \"object\",",
											"\t\t\t\t\t\t\"required\": [",
											"\t\t\t\t\t\t\t\"palletType\",",
											"\t\t\t\t\t\t\t\"pallets\",",
											"\t\t\t\t\t\t\t\"boxes\",",
											"\t\t\t\t\t\t\t\"items\",",
											"\t\t\t\t\t\t\t\"weight\",",
											"\t\t\t\t\t\t\t\"cost\"",
											"\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\"properties\": {",
											"\t\t\t\t\t\t\t\"palletType\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/loadingPoints/items/units/palletType\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Pallettype\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"string\",",
											"\t\t\t\t\t\t\t\t\"default\": \"\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t\"Euro\"",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"pattern\": \"^.*$\"",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"pallets\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/loadingPoints/items/units/pallets\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Pallets\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t20",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"default\": 0",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"boxes\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/loadingPoints/items/units/boxes\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Boxes\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t30",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"default\": 0",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"items\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/loadingPoints/items/units/items\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Items\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t40",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"default\": 0",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"weight\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/loadingPoints/items/units/weight\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Weight\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t50",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"default\": 0",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"cost\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/loadingPoints/items/units/cost\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Cost\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t110",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"default\": 0",
											"\t\t\t\t\t\t\t}",
											"\t\t\t\t\t\t}",
											"\t\t\t\t\t}",
											",",
											"\t\t\t\t\t\"unitsFact\": {",
											"\t\t\t\t\t\t\"$id\": \"#root/loadingPoints/items/unitsFact\", ",
											"\t\t\t\t\t\t\"title\": \"Unitsfact\", ",
											"\t\t\t\t\t\t\"type\": \"object\",",
											"\t\t\t\t\t\t\"required\": [",
											"\t\t\t\t\t\t\t\"palletType\",",
											"\t\t\t\t\t\t\t\"positionFrom\",",
											"\t\t\t\t\t\t\t\"positionTo\",",
											"\t\t\t\t\t\t\t\"pallets\",",
											"\t\t\t\t\t\t\t\"boxes\",",
											"\t\t\t\t\t\t\t\"items\",",
											"\t\t\t\t\t\t\t\"weight\",",
											"\t\t\t\t\t\t\t\"cost\",",
											"\t\t\t\t\t\t\t\"volume\",",
											"\t\t\t\t\t\t\t\"length\",",
											"\t\t\t\t\t\t\t\"width\",",
											"\t\t\t\t\t\t\t\"height\"",
											"\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\"properties\": {",
											"\t\t\t\t\t\t\t\"palletType\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/loadingPoints/items/unitsFact/palletType\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Pallettype\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"string\",",
											"\t\t\t\t\t\t\t\t\"default\": \"\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t\"Euro\"",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"pattern\": \"^.*$\"",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"positionFrom\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/loadingPoints/items/unitsFact/positionFrom\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Positionfrom\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t1",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"default\": 0",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"positionTo\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/loadingPoints/items/unitsFact/positionTo\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Positionto\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t11",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"default\": 0",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"pallets\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/loadingPoints/items/unitsFact/pallets\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Pallets\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t11",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"default\": 0",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"boxes\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/loadingPoints/items/unitsFact/boxes\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Boxes\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t0",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"default\": 0",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"items\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/loadingPoints/items/unitsFact/items\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Items\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t0",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"default\": 0",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"weight\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/loadingPoints/items/unitsFact/weight\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Weight\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t0",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"default\": 0",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"cost\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/loadingPoints/items/unitsFact/cost\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Cost\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t0",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"default\": 0",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"volume\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/loadingPoints/items/unitsFact/volume\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Volume\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t0",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"default\": 0",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"length\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/loadingPoints/items/unitsFact/length\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Length\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t0",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"default\": 0",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"width\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/loadingPoints/items/unitsFact/width\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Width\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t0",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"default\": 0",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"height\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/loadingPoints/items/unitsFact/height\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Height\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t0",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"default\": 0",
											"\t\t\t\t\t\t\t}",
											"\t\t\t\t\t\t}",
											"\t\t\t\t\t}",
											"",
											"\t\t\t\t}",
											"\t\t\t}",
											"",
											"\t\t},",
											"\t\t\"unloadingPoints\": {",
											"\t\t\t\"$id\": \"#root/unloadingPoints\", ",
											"\t\t\t\"title\": \"Unloadingpoints\", ",
											"\t\t\t\"type\": \"array\",",
											"\t\t\t\"default\": [],",
											"\t\t\t\"items\":{",
											"\t\t\t\t\"$id\": \"#root/unloadingPoints/items\", ",
											"\t\t\t\t\"title\": \"Items\", ",
											"\t\t\t\t\"type\": \"object\",",
											"\t\t\t\t\"required\": [",
											"\t\t\t\t\t\"dateTime\",",
											"\t\t\t\t\t\"orderNumbers\",",
											"\t\t\t\t\t\"orderIndexes\",",
											"\t\t\t\t\t\"warehouse\",",
											"\t\t\t\t\t\"status\",",
											"\t\t\t\t\t\"dateTimeArrived\",",
											"\t\t\t\t\t\"dateTimeDeparted\",",
											"\t\t\t\t\t\"dateTimeArrivedByController\",",
											"\t\t\t\t\t\"dateTimeDepartedByController\",",
											"\t\t\t\t\t\"comment\",",
											"\t\t\t\t\t\"units\",",
											"\t\t\t\t\t\"unitsFact\"",
											"\t\t\t\t],",
											"\t\t\t\t\"properties\": {",
											"\t\t\t\t\t\"dateTime\": {",
											"\t\t\t\t\t\t\"$id\": \"#root/unloadingPoints/items/dateTime\", ",
											"\t\t\t\t\t\t\"title\": \"Datetime\", ",
											"\t\t\t\t\t\t\"type\": \"object\",",
											"\t\t\t\t\t\t\"required\": [",
											"\t\t\t\t\t\t\t\"from\",",
											"\t\t\t\t\t\t\t\"to\"",
											"\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\"properties\": {",
											"\t\t\t\t\t\t\t\"from\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/unloadingPoints/items/dateTime/from\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"From\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"string\",",
											"\t\t\t\t\t\t\t\t\"default\": \"\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t\"2022-01-07T15:28:57\"",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"pattern\": \"^.*$\"",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"to\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/unloadingPoints/items/dateTime/to\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"To\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"string\",",
											"\t\t\t\t\t\t\t\t\"default\": \"\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t\"2022-01-07T15:28:57\"",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"pattern\": \"^.*$\"",
											"\t\t\t\t\t\t\t}",
											"\t\t\t\t\t\t}",
											"\t\t\t\t\t}",
											",",
											"\t\t\t\t\t\"orderNumbers\": {",
											"\t\t\t\t\t\t\"$id\": \"#root/unloadingPoints/items/orderNumbers\", ",
											"\t\t\t\t\t\t\"title\": \"Ordernumbers\", ",
											"\t\t\t\t\t\t\"type\": \"array\",",
											"\t\t\t\t\t\t\"default\": [],",
											"\t\t\t\t\t\t\"items\":{",
											"\t\t\t\t\t\t\t\"$id\": \"#root/unloadingPoints/items/orderNumbers/items\", ",
											"\t\t\t\t\t\t\t\"title\": \"Items\", ",
											"\t\t\t\t\t\t\t\"type\": \"string\",",
											"\t\t\t\t\t\t\t\"default\": \"\",",
											"\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\"SS123456711\"",
											"\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\"pattern\": \"^.*$\"",
											"\t\t\t\t\t\t}",
											"\t\t\t\t\t},",
											"\t\t\t\t\t\"orderIndexes\": {",
											"\t\t\t\t\t\t\"$id\": \"#root/unloadingPoints/items/orderIndexes\", ",
											"\t\t\t\t\t\t\"title\": \"Orderindexes\", ",
											"\t\t\t\t\t\t\"type\": \"array\",",
											"\t\t\t\t\t\t\"default\": [],",
											"\t\t\t\t\t\t\"items\":{",
											"\t\t\t\t\t\t\t\"$id\": \"#root/unloadingPoints/items/orderIndexes/items\", ",
											"\t\t\t\t\t\t\t\"title\": \"Items\", ",
											"\t\t\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t0",
											"\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\"default\": 0",
											"\t\t\t\t\t\t}",
											"\t\t\t\t\t},",
											"\t\t\t\t\t\"warehouse\": {",
											"\t\t\t\t\t\t\"$id\": \"#root/unloadingPoints/items/warehouse\", ",
											"\t\t\t\t\t\t\"title\": \"Warehouse\", ",
											"\t\t\t\t\t\t\"type\": \"object\",",
											"\t\t\t\t\t\t\"required\": [",
											"\t\t\t\t\t\t\t\"gln\",",
											"\t\t\t\t\t\t\t\"id\",",
											"\t\t\t\t\t\t\t\"foreignId\"",
											"\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\"properties\": {",
											"\t\t\t\t\t\t\t\"gln\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/unloadingPoints/items/warehouse/gln\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Gln\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"string\",",
											"\t\t\t\t\t\t\t\t\"default\": \"\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t\"4680328518232\"",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"pattern\": \"^.*$\"",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"id\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/unloadingPoints/items/warehouse/id\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Id\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"string\",",
											"\t\t\t\t\t\t\t\t\"default\": \"\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t\"5d5e772b756484199479a476\"",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"pattern\": \"^.*$\"",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"foreignId\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/unloadingPoints/items/warehouse/foreignId\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Foreignid\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"null\",",
											"\t\t\t\t\t\t\t\t\"default\": null",
											"\t\t\t\t\t\t\t}",
											"\t\t\t\t\t\t}",
											"\t\t\t\t\t}",
											",",
											"\t\t\t\t\t\"status\": {",
											"\t\t\t\t\t\t\"$id\": \"#root/unloadingPoints/items/status\", ",
											"\t\t\t\t\t\t\"title\": \"Status\", ",
											"\t\t\t\t\t\t\"type\": \"string\",",
											"\t\t\t\t\t\t\"default\": \"\",",
											"\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\"Scheduled\"",
											"\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\"pattern\": \"^.*$\"",
											"\t\t\t\t\t},",
											"\t\t\t\t\t\"dateTimeArrived\": {",
											"\t\t\t\t\t\t\"$id\": \"#root/unloadingPoints/items/dateTimeArrived\", ",
											"\t\t\t\t\t\t\"title\": \"Datetimearrived\", ",
											"\t\t\t\t\t\t\"type\": \"null\",",
											"\t\t\t\t\t\t\"default\": null",
											"\t\t\t\t\t},",
											"\t\t\t\t\t\"dateTimeDeparted\": {",
											"\t\t\t\t\t\t\"$id\": \"#root/unloadingPoints/items/dateTimeDeparted\", ",
											"\t\t\t\t\t\t\"title\": \"Datetimedeparted\", ",
											"\t\t\t\t\t\t\"type\": \"null\",",
											"\t\t\t\t\t\t\"default\": null",
											"\t\t\t\t\t},",
											"\t\t\t\t\t\"dateTimeArrivedByController\": {",
											"\t\t\t\t\t\t\"$id\": \"#root/unloadingPoints/items/dateTimeArrivedByController\", ",
											"\t\t\t\t\t\t\"title\": \"Datetimearrivedbycontroller\", ",
											"\t\t\t\t\t\t\"type\": \"null\",",
											"\t\t\t\t\t\t\"default\": null",
											"\t\t\t\t\t},",
											"\t\t\t\t\t\"dateTimeDepartedByController\": {",
											"\t\t\t\t\t\t\"$id\": \"#root/unloadingPoints/items/dateTimeDepartedByController\", ",
											"\t\t\t\t\t\t\"title\": \"Datetimedepartedbycontroller\", ",
											"\t\t\t\t\t\t\"type\": \"null\",",
											"\t\t\t\t\t\t\"default\": null",
											"\t\t\t\t\t},",
											"\t\t\t\t\t\"comment\": {",
											"\t\t\t\t\t\t\"$id\": \"#root/unloadingPoints/items/comment\", ",
											"\t\t\t\t\t\t\"title\": \"Comment\", ",
											"\t\t\t\t\t\t\"type\": \"null\",",
											"\t\t\t\t\t\t\"default\": null",
											"\t\t\t\t\t},",
											"\t\t\t\t\t\"units\": {",
											"\t\t\t\t\t\t\"$id\": \"#root/unloadingPoints/items/units\", ",
											"\t\t\t\t\t\t\"title\": \"Units\", ",
											"\t\t\t\t\t\t\"type\": \"object\",",
											"\t\t\t\t\t\t\"required\": [",
											"\t\t\t\t\t\t\t\"palletType\",",
											"\t\t\t\t\t\t\t\"pallets\",",
											"\t\t\t\t\t\t\t\"boxes\",",
											"\t\t\t\t\t\t\t\"items\",",
											"\t\t\t\t\t\t\t\"weight\",",
											"\t\t\t\t\t\t\t\"cost\"",
											"\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\"properties\": {",
											"\t\t\t\t\t\t\t\"palletType\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/unloadingPoints/items/units/palletType\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Pallettype\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"string\",",
											"\t\t\t\t\t\t\t\t\"default\": \"\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t\"Euro\"",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"pattern\": \"^.*$\"",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"pallets\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/unloadingPoints/items/units/pallets\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Pallets\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t20",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"default\": 0",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"boxes\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/unloadingPoints/items/units/boxes\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Boxes\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t30",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"default\": 0",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"items\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/unloadingPoints/items/units/items\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Items\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t40",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"default\": 0",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"weight\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/unloadingPoints/items/units/weight\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Weight\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t50",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"default\": 0",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"cost\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/unloadingPoints/items/units/cost\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Cost\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t110",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"default\": 0",
											"\t\t\t\t\t\t\t}",
											"\t\t\t\t\t\t}",
											"\t\t\t\t\t}",
											",",
											"\t\t\t\t\t\"unitsFact\": {",
											"\t\t\t\t\t\t\"$id\": \"#root/unloadingPoints/items/unitsFact\", ",
											"\t\t\t\t\t\t\"title\": \"Unitsfact\", ",
											"\t\t\t\t\t\t\"type\": \"object\",",
											"\t\t\t\t\t\t\"required\": [",
											"\t\t\t\t\t\t\t\"palletType\",",
											"\t\t\t\t\t\t\t\"positionFrom\",",
											"\t\t\t\t\t\t\t\"positionTo\",",
											"\t\t\t\t\t\t\t\"pallets\",",
											"\t\t\t\t\t\t\t\"boxes\",",
											"\t\t\t\t\t\t\t\"items\",",
											"\t\t\t\t\t\t\t\"weight\",",
											"\t\t\t\t\t\t\t\"cost\",",
											"\t\t\t\t\t\t\t\"volume\",",
											"\t\t\t\t\t\t\t\"length\",",
											"\t\t\t\t\t\t\t\"width\",",
											"\t\t\t\t\t\t\t\"height\"",
											"\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\"properties\": {",
											"\t\t\t\t\t\t\t\"palletType\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/unloadingPoints/items/unitsFact/palletType\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Pallettype\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"string\",",
											"\t\t\t\t\t\t\t\t\"default\": \"\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t\"Euro\"",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"pattern\": \"^.*$\"",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"positionFrom\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/unloadingPoints/items/unitsFact/positionFrom\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Positionfrom\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t0",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"default\": 0",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"positionTo\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/unloadingPoints/items/unitsFact/positionTo\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Positionto\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t0",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"default\": 0",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"pallets\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/unloadingPoints/items/unitsFact/pallets\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Pallets\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t0",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"default\": 0",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"boxes\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/unloadingPoints/items/unitsFact/boxes\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Boxes\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t0",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"default\": 0",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"items\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/unloadingPoints/items/unitsFact/items\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Items\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t0",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"default\": 0",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"weight\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/unloadingPoints/items/unitsFact/weight\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Weight\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t0",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"default\": 0",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"cost\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/unloadingPoints/items/unitsFact/cost\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Cost\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t0",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"default\": 0",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"volume\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/unloadingPoints/items/unitsFact/volume\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Volume\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t0",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"default\": 0",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"length\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/unloadingPoints/items/unitsFact/length\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Length\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t0",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"default\": 0",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"width\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/unloadingPoints/items/unitsFact/width\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Width\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t0",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"default\": 0",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"height\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/unloadingPoints/items/unitsFact/height\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Height\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t0",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"default\": 0",
											"\t\t\t\t\t\t\t}",
											"\t\t\t\t\t\t}",
											"\t\t\t\t\t}",
											"",
											"\t\t\t\t}",
											"\t\t\t}",
											"",
											"\t\t},",
											"\t\t\"servicesNeeded\": {",
											"\t\t\t\"$id\": \"#root/servicesNeeded\", ",
											"\t\t\t\"title\": \"Servicesneeded\", ",
											"\t\t\t\"type\": \"array\",",
											"\t\t\t\"default\": [],",
											"\t\t\t\"items\":{",
											"\t\t\t\t\"$id\": \"#root/servicesNeeded/items\", ",
											"\t\t\t\t\"title\": \"Items\", ",
											"\t\t\t\t\"type\": \"string\",",
											"\t\t\t\t\"default\": \"\",",
											"\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\"Basic\"",
											"\t\t\t\t],",
											"\t\t\t\t\"pattern\": \"^.*$\"",
											"\t\t\t}",
											"\t\t},",
											"\t\t\"services\": {",
											"\t\t\t\"$id\": \"#root/services\", ",
											"\t\t\t\"title\": \"Services\", ",
											"\t\t\t\"type\": \"array\",",
											"\t\t\t\"default\": []",
											"\t\t},",
											"\t\t\"temperature\": {",
											"\t\t\t\"$id\": \"#root/temperature\", ",
											"\t\t\t\"title\": \"Temperature\", ",
											"\t\t\t\"type\": \"object\",",
											"\t\t\t\"required\": [",
											"\t\t\t\t\"from\",",
											"\t\t\t\t\"to\"",
											"\t\t\t],",
											"\t\t\t\"properties\": {",
											"\t\t\t\t\"from\": {",
											"\t\t\t\t\t\"$id\": \"#root/temperature/from\", ",
											"\t\t\t\t\t\"title\": \"From\", ",
											"\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t5",
											"\t\t\t\t\t],",
											"\t\t\t\t\t\"default\": 0",
											"\t\t\t\t},",
											"\t\t\t\t\"to\": {",
											"\t\t\t\t\t\"$id\": \"#root/temperature/to\", ",
											"\t\t\t\t\t\"title\": \"To\", ",
											"\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t25",
											"\t\t\t\t\t],",
											"\t\t\t\t\t\"default\": 0",
											"\t\t\t\t}",
											"\t\t\t}",
											"\t\t}",
											",",
											"\t\t\"comments\": {",
											"\t\t\t\"$id\": \"#root/comments\", ",
											"\t\t\t\"title\": \"Comments\", ",
											"\t\t\t\"type\": \"array\",",
											"\t\t\t\"default\": [],",
											"\t\t\t\"items\":{",
											"\t\t\t\t\"$id\": \"#root/comments/items\", ",
											"\t\t\t\t\"title\": \"Items\", ",
											"\t\t\t\t\"type\": \"object\",",
											"\t\t\t\t\"required\": [",
											"\t\t\t\t\t\"dateTime\",",
											"\t\t\t\t\t\"company\",",
											"\t\t\t\t\t\"comment\"",
											"\t\t\t\t],",
											"\t\t\t\t\"properties\": {",
											"\t\t\t\t\t\"dateTime\": {",
											"\t\t\t\t\t\t\"$id\": \"#root/comments/items/dateTime\", ",
											"\t\t\t\t\t\t\"title\": \"Datetime\", ",
											"\t\t\t\t\t\t\"type\": \"string\",",
											"\t\t\t\t\t\t\"default\": \"\",",
											"\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\"2021-12-24T12:27:27\"",
											"\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\"pattern\": \"^.*$\"",
											"\t\t\t\t\t},",
											"\t\t\t\t\t\"company\": {",
											"\t\t\t\t\t\t\"$id\": \"#root/comments/items/company\", ",
											"\t\t\t\t\t\t\"title\": \"Company\", ",
											"\t\t\t\t\t\t\"type\": \"object\",",
											"\t\t\t\t\t\t\"required\": [",
											"\t\t\t\t\t\t\t\"id\",",
											"\t\t\t\t\t\t\t\"foreignId\",",
											"\t\t\t\t\t\t\t\"type\"",
											"\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\"properties\": {",
											"\t\t\t\t\t\t\t\"id\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/comments/items/company/id\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Id\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"string\",",
											"\t\t\t\t\t\t\t\t\"default\": \"\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t\"5b06c5b70c7e6f6764d50d13\"",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"pattern\": \"^.*$\"",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"foreignId\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/comments/items/company/foreignId\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Foreignid\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"string\",",
											"\t\t\t\t\t\t\t\t\"default\": \"\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t\"1959\"",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"pattern\": \"^.*$\"",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"type\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/comments/items/company/type\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Type\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"string\",",
											"\t\t\t\t\t\t\t\t\"default\": \"\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t\"Consignor\"",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"pattern\": \"^.*$\"",
											"\t\t\t\t\t\t\t}",
											"\t\t\t\t\t\t}",
											"\t\t\t\t\t}",
											",",
											"\t\t\t\t\t\"comment\": {",
											"\t\t\t\t\t\t\"$id\": \"#root/comments/items/comment\", ",
											"\t\t\t\t\t\t\"title\": \"Comment\", ",
											"\t\t\t\t\t\t\"type\": \"string\",",
											"\t\t\t\t\t\t\"default\": \"\",",
											"\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\"m\"",
											"\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\"pattern\": \"^.*$\"",
											"\t\t\t\t\t}",
											"\t\t\t\t}",
											"\t\t\t}",
											"",
											"\t\t},",
											"\t\t\"carriage\": {",
											"\t\t\t\"$id\": \"#root/carriage\", ",
											"\t\t\t\"title\": \"Carriage\", ",
											"\t\t\t\"type\": \"null\",",
											"\t\t\t\"default\": null",
											"\t\t},",
											"\t\t\"carriageString\": {",
											"\t\t\t\"$id\": \"#root/carriageString\", ",
											"\t\t\t\"title\": \"Carriagestring\", ",
											"\t\t\t\"type\": \"null\",",
											"\t\t\t\"default\": null",
											"\t\t},",
											"\t\t\"shippingCost\": {",
											"\t\t\t\"$id\": \"#root/shippingCost\", ",
											"\t\t\t\"title\": \"Shippingcost\", ",
											"\t\t\t\"type\": \"number\",",
											"\t\t\t\"examples\": [",
											"\t\t\t\t9999.87",
											"\t\t\t],",
											"\t\t\t\"default\": 0.0",
											"\t\t},",
											"\t\t\"vehicles\": {",
											"\t\t\t\"$id\": \"#root/vehicles\", ",
											"\t\t\t\"title\": \"Vehicles\", ",
											"\t\t\t\"type\": \"array\",",
											"\t\t\t\"default\": []",
											"\t\t},",
											"\t\t\"vehicle\": {",
											"\t\t\t\"$id\": \"#root/vehicle\", ",
											"\t\t\t\"title\": \"Vehicle\", ",
											"\t\t\t\"type\": \"null\",",
											"\t\t\t\"default\": null",
											"\t\t},",
											"\t\t\"drivers\": {",
											"\t\t\t\"$id\": \"#root/drivers\", ",
											"\t\t\t\"title\": \"Drivers\", ",
											"\t\t\t\"type\": \"array\",",
											"\t\t\t\"default\": []",
											"\t\t},",
											"\t\t\"driver\": {",
											"\t\t\t\"$id\": \"#root/driver\", ",
											"\t\t\t\"title\": \"Driver\", ",
											"\t\t\t\"type\": \"null\",",
											"\t\t\t\"default\": null",
											"\t\t},",
											"\t\t\"unitsAvailable\": {",
											"\t\t\t\"$id\": \"#root/unitsAvailable\", ",
											"\t\t\t\"title\": \"Unitsavailable\", ",
											"\t\t\t\"type\": \"object\",",
											"\t\t\t\"required\": [",
											"\t\t\t],",
											"\t\t\t\"properties\": {",
											"\t\t\t}",
											"\t\t}",
											",",
											"\t\t\"unitsAvailableMin\": {",
											"\t\t\t\"$id\": \"#root/unitsAvailableMin\", ",
											"\t\t\t\"title\": \"Unitsavailablemin\", ",
											"\t\t\t\"type\": \"object\",",
											"\t\t\t\"required\": [",
											"\t\t\t],",
											"\t\t\t\"properties\": {",
											"\t\t\t}",
											"\t\t}",
											",",
											"\t\t\"editableUntil\": {",
											"\t\t\t\"$id\": \"#root/editableUntil\", ",
											"\t\t\t\"title\": \"Editableuntil\", ",
											"\t\t\t\"type\": \"string\",",
											"\t\t\t\"default\": \"\",",
											"\t\t\t\"examples\": [",
											"\t\t\t\t\"2021-12-31T15:28:57\"",
											"\t\t\t],",
											"\t\t\t\"pattern\": \"^.*$\"",
											"\t\t},",
											"\t\t\"financials\": {",
											"\t\t\t\"$id\": \"#root/financials\", ",
											"\t\t\t\"title\": \"Financials\", ",
											"\t\t\t\"type\": \"object\",",
											"\t\t\t\"required\": [",
											"\t\t\t\t\"baseCost\",",
											"\t\t\t\t\"shippingCost\",",
											"\t\t\t\t\"poolingPayToCarrier\",",
											"\t\t\t\t\"additionalCosts\"",
											"\t\t\t],",
											"\t\t\t\"properties\": {",
											"\t\t\t\t\"baseCost\": {",
											"\t\t\t\t\t\"$id\": \"#root/financials/baseCost\", ",
											"\t\t\t\t\t\"title\": \"Basecost\", ",
											"\t\t\t\t\t\"type\": \"number\",",
											"\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t9999.87",
											"\t\t\t\t\t],",
											"\t\t\t\t\t\"default\": 0.0",
											"\t\t\t\t},",
											"\t\t\t\t\"shippingCost\": {",
											"\t\t\t\t\t\"$id\": \"#root/financials/shippingCost\", ",
											"\t\t\t\t\t\"title\": \"Shippingcost\", ",
											"\t\t\t\t\t\"type\": \"number\",",
											"\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t9999.87",
											"\t\t\t\t\t],",
											"\t\t\t\t\t\"default\": 0.0",
											"\t\t\t\t},",
											"\t\t\t\t\"poolingPayToCarrier\": {",
											"\t\t\t\t\t\"$id\": \"#root/financials/poolingPayToCarrier\", ",
											"\t\t\t\t\t\"title\": \"Poolingpaytocarrier\", ",
											"\t\t\t\t\t\"type\": \"boolean\",",
											"\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\ttrue",
											"\t\t\t\t\t],",
											"\t\t\t\t\t\"default\": true",
											"\t\t\t\t},",
											"\t\t\t\t\"additionalCosts\": {",
											"\t\t\t\t\t\"$id\": \"#root/financials/additionalCosts\", ",
											"\t\t\t\t\t\"title\": \"Additionalcosts\", ",
											"\t\t\t\t\t\"type\": \"array\",",
											"\t\t\t\t\t\"default\": [],",
											"\t\t\t\t\t\"items\":{",
											"\t\t\t\t\t\t\"$id\": \"#root/financials/additionalCosts/items\", ",
											"\t\t\t\t\t\t\"title\": \"Items\", ",
											"\t\t\t\t\t\t\"type\": \"object\",",
											"\t\t\t\t\t\t\"required\": [",
											"\t\t\t\t\t\t\t\"type\",",
											"\t\t\t\t\t\t\t\"cost\"",
											"\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\"properties\": {",
											"\t\t\t\t\t\t\t\"type\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/financials/additionalCosts/items/type\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Type\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"string\",",
											"\t\t\t\t\t\t\t\t\"default\": \"\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t\"Returning\"",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"pattern\": \"^.*$\"",
											"\t\t\t\t\t\t\t},",
											"\t\t\t\t\t\t\t\"cost\": {",
											"\t\t\t\t\t\t\t\t\"$id\": \"#root/financials/additionalCosts/items/cost\", ",
											"\t\t\t\t\t\t\t\t\"title\": \"Cost\", ",
											"\t\t\t\t\t\t\t\t\"type\": \"integer\",",
											"\t\t\t\t\t\t\t\t\"examples\": [",
											"\t\t\t\t\t\t\t\t\t0",
											"\t\t\t\t\t\t\t\t],",
											"\t\t\t\t\t\t\t\t\"default\": 0",
											"\t\t\t\t\t\t\t}",
											"\t\t\t\t\t\t}",
											"\t\t\t\t\t}",
											"",
											"\t\t\t\t}",
											"\t\t\t}",
											"\t\t}",
											"",
											"\t}",
											"}",
											",",
											"jsonData = pm.response.json();",
											"",
											"pm.test(\"Проверка схемы\", function () {",
											"    pm.expect(tv4.validate(pm.response.json(), schema, false, true)).to.be.true;",
											"});",
											"",
											"pm.test(\"Проверка, что код ответа 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Проверка, что статус бронирования OnConfirmation\", function () { ",
											"    pm.expect(jsonData.status).to.eql(\"OnConfirmation\");",
											"});",
											"",
											"pm.test(\"Проверка, что бронирование ФТЛ не на слот\", function () { ",
											"    pm.expect(jsonData.slotId).to.eql(null);",
											"    pm.expect(jsonData.shippingType).to.eql(\"FTL\");",
											"});",
											"",
											"pm.test(\"Проверка, что бронирование новое\", function () {  ",
											"    pm.expect(jsonData.number).to.be.a('string').and.match(/[0-9]/);",
											"    pm.expect(jsonData.number).to.have.lengthOf(6); ",
											"    //pm.expect(jsonData.number).to.be.sealed;",
											"    pm.expect(jsonData.version).to.eql(1);",
											"});",
											"",
											"",
											"pm.test(\"Проверка на конкретную ТК\", function () {",
											"   pm.expect(jsonData.carrier.id).to.equal(\"5f43a3c47d0521017fe57152\");//MONOPOLY.ONLINE",
											"});",
											"",
											"pm.test(\"Проверка, что нет признака догруза\", function () {",
											"pm.expect(jsonData.servicesNeeded[0]).to.eql(\"Basic\");",
											"});",
											"",
											"pm.test(\"Проверка, что статус точки у новой заявки Scheduled\", function () {",
											"pm.expect(jsonData.loadingPoints[0].status).to.eql(\"Scheduled\");",
											"pm.expect(jsonData.unloadingPoints[0].status).to.eql(\"Scheduled\");",
											"});  ",
											"   ",
											"pm.test(\"Проверка, что для тента в ответе температура 5-25\", function () {",
											"pm.expect(jsonData.temperature.from).to.eql(5);",
											"pm.expect(jsonData.temperature.to).to.eql(25);",
											"}); ",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');",
											"pm.variables.set(\"loadingPointsDate\", moment().add(1, 'week').format(\"YYYY-MM-DD\"));",
											"pm.variables.set(\"unloadingPointsDate\", moment().add(2, 'week').format(\"YYYY-MM-DD\"));",
											"",
											"const number = pm.collectionVariables.set (\"randomNum\", _.random (10000,100000));",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{goTestoviyOT}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"foreignId\": null,\n  \"shippingType\": \"FTL\",\n  \"slotId\": \"000000000000000000000000\",\n  \"carrier\": {\n    \"inn\": null,\n    \"id\": \"5f43a3c47d0521017fe57152\",\n    \"foreignId\": null\n  },\n  \"client\": {\n    \"inn\": null,\n    \"id\": \"5b06c5b70c7e6f6764d50d0e\",//Тандер\n    \"foreignId\": null\n  },\n  \"carType\": \"Tent\",\n  \"carCapacityType\": \"t20\",\n  \"productType\": \"alco\",\n  \"units\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 1,\n    \"positionTo\": 20,\n    \"pallets\": 20,\n    \"boxes\": 30,\n    \"items\": 40,\n    \"weight\": 50,\n    \"cost\": 110,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n  },\n  \"orders\": [\n    {\n      \"number\": \"SS1234{{randomNum}}\",\n      \"waybillNumber\": \"wblN{{randomNum}}\",\n      \"consignorNumber\": null,\n      \"type\": \"None\",\n      \"units\": {\n        \"palletType\": \"Euro\",\n       \"positionFrom\": 1,\n    \"positionTo\": 20,\n    \"pallets\": 20,\n    \"boxes\": 30,\n    \"items\": 40,\n    \"weight\": 50,\n        \"cost\": 110,\n        \"volume\": null,\n        \"length\": null,\n        \"width\": null,\n        \"height\": null\n      },\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 0,\n        \"positionTo\": 0,\n        \"pallets\": 0,\n        \"boxes\": 0,\n        \"items\": 0,\n        \"weight\": 0,\n        \"cost\": 0,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      },\n      \"productTransportWaybill\": \"TTN\"\n    }\n  ],\n  \"loadingPoints\": [\n    {\n      \"dateTime\": {\n        \"from\": \"{{loadingPointsDate}}T15:28:57\",\n        \"to\": \"{{loadingPointsDate}}T15:28:57\"\n      },\n      \"orderIndexes\": [\n        0\n      ],\n      \"warehouse\": {\n        \"gln\": null,\n        \"id\": \"5ddcd9eaf1d7f90001638e12\",//ДЖОНСОН & ДЖОНСОН ЧЕХОВ\n        \"foreignId\": null\n      },\n      \"address\": null,\n      \"comment\": \"{{$randomLoremWords}}\",\n      \"units\": {\n        \"palletType\": \"Euro\",\n     \"positionFrom\": 1,\n    \"positionTo\": 20,\n    \"pallets\": 20,\n    \"boxes\": 30,\n    \"items\": 40,\n    \"weight\": 50,\n        \"cost\": 110,\n        \"volume\": null,\n        \"length\": null,\n        \"width\": null,\n        \"height\": null\n      },\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 1,\n        \"positionTo\": 11,\n        \"pallets\": 11,\n        \"boxes\": 0,\n        \"items\": 0,\n        \"weight\": 0,\n        \"cost\": 0,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      }\n    }\n  ],\n  \"unloadingPoints\": [\n    {\n      \"dateTime\": {\n        \"from\": \"{{unloadingPointsDate}}T15:28:57\",\n        \"to\": \"{{unloadingPointsDate}}T15:28:57\"\n      },\n      \"orderIndexes\": [\n        0\n      ],\n      \"warehouse\": {\n        \"gln\": null,\n        \"id\": \"5d5e772b756484199479a476\",//Воронеж (Рамонь)\n        \"foreignId\": null\n      },\n      \"address\":null,\n      \"comment\": null,\n      \"units\": {\n        \"palletType\": \"Euro\",\n         \"positionFrom\": 1,\n    \"positionTo\": 20,\n    \"pallets\": 20,\n    \"boxes\": 30,\n    \"items\": 40,\n    \"weight\": 50,\n        \"cost\": 110,\n        \"volume\": null,\n        \"length\": null,\n        \"width\": null,\n        \"height\": null\n      },\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 0,\n        \"positionTo\": 0,\n        \"pallets\": 0,\n        \"boxes\": 0,\n        \"items\": 0,\n        \"weight\": 0,\n        \"cost\": 0,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      }\n    }\n  ],\n  \"servicesNeeded\": [\n    \"Basic\"\n  ],\n  \"temperature\": {\n    \"from\": 5,\n    \"to\": 25\n  },\n  \"financials\": {\n    \"baseCost\": 9999.87,\n    \"poolingPayToCarrier\": true,\n    \"additionalCosts\": [\n      {\n        \"type\": \"Returning\",\n        \"cost\": 0\n      }\n    ]\n  },\n  \"comment\": \"{{$randomAlphaNumeric}}\",\n  \"unitsAvailable\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 0,\n    \"positionTo\": 0,\n    \"pallets\": 0,\n    \"boxes\": 0,\n    \"items\": 0,\n    \"weight\": 0,\n    \"cost\": 0,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  },\n  \"unitsAvailableMin\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 0,\n    \"positionTo\": 0,\n    \"pallets\": 0,\n    \"boxes\": 0,\n    \"items\": 0,\n    \"weight\": 0,\n    \"cost\": 0,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  },\n  \"unitsFact\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 0,\n    \"positionTo\": 0,\n    \"pallets\": 0,\n    \"boxes\": 0,\n    \"items\": 0,\n    \"weight\": 0,\n    \"cost\": 0,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/reservations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"reservations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Создание бронирования FTL от ТК",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"jsonData = pm.response.json();",
											"",
											"pm.test(\"Проверка, что код ответа 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Проверка, что статус бронирования InProgress\", function () { ",
											"    pm.expect(jsonData.status).to.eql(\"InProgress\");",
											"});",
											"",
											"pm.test(\"Проверка, что бронирование ФТЛ не на слот\", function () { ",
											"    pm.expect(jsonData.slotId).to.eql(null);",
											"    pm.expect(jsonData.shippingType).to.eql(\"FTL\");",
											"});",
											"",
											"pm.test(\"Проверка, что бронирование новое\", function () {  ",
											"    pm.expect(jsonData.number).to.be.a('string').and.match(/[0-9]/);",
											"    pm.expect(jsonData.number).to.have.lengthOf(6); ",
											"    //pm.expect(jsonData.number).to.be.sealed;",
											"    pm.expect(jsonData.version).to.eql(1);",
											"});",
											"",
											"pm.test(\"Проверка на конкретные ТК, ТС\", function () {",
											"   pm.expect(jsonData.carrier.id).to.equal(pm.variables.get(\"carrierId\"));",
											"});",
											"",
											"//можно добавить проверку на тип паллет, что паллеты из списка возможных для ТК",
											"",
											"pm.test(\"Проверка, что нет признака догруза\", function () {",
											"pm.expect(jsonData.servicesNeeded[0]).to.eql(\"Basic\");",
											"});",
											"",
											"pm.test(\"Проверка, что статус точки у новой заявки Scheduled\", function () {",
											"pm.expect(jsonData.loadingPoints[0].status).to.eql(\"Scheduled\");",
											"pm.expect(jsonData.unloadingPoints[0].status).to.eql(\"Scheduled\");",
											"});  ",
											"   "
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');",
											"pm.variables.set(\"loadingPointsDate\", moment().add(1, 'week').format(\"YYYY-MM-DD\"));",
											"pm.variables.set(\"unloadingPointsDate\", moment().add(2, 'week').format(\"YYYY-MM-DD\"));",
											"",
											"const number = pm.collectionVariables.set (\"randomNum\", _.random (10000,100000));",
											"",
											"pm.variables.set(\"carrierId\", \"5b06c5b70c7e6f6764d50d0f\");",
											"pm.variables.set(\"clientId\", \"5b06c5b70c7e6f6764d50d0e\");",
											"pm.variables.set(\"consignorId\", \"5b06c5b70c7e6f6764d50d0f\");",
											"pm.variables.set(\"loadingWarehouseId\", \"5ddcd9eaf1d7f90001638e12\");",
											"pm.variables.set(\"unloadingWarehouseId\", \"5b23dfcccd1a2640b4de30b6\");",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tkFmOT}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"foreignId\": null,\n  \"shippingType\": \"FTL\",\n  \"slotId\": \"000000000000000000000000\",\n  \"carrier\": {\n    \"inn\": null,\n    \"id\": \"{{carrierId}}\",\n    \"foreignId\": null\n  },\n  \"client\": {\n    \"inn\": null,\n    \"id\": \"{{clientId}}\",\n    \"foreignId\": null\n  },\n  \"carType\": \"Tent\",\n  \"carCapacityType\": \"t20\",\n  \"productType\": \"alco\",\n  \"units\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 1,\n    \"positionTo\": 20,\n    \"pallets\": 20,\n    \"boxes\": 30,\n    \"items\": 40,\n    \"weight\": 50,\n    \"cost\": 110,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n  },\n  \"orders\": [\n    {\n      \"number\": \"SS1234{{randomNum}}\",\n      \"waybillNumber\": \"wblN{{randomNum}}\",\n      \"consignorNumber\": \"string\",\n      \"type\": \"None\",\n      \"units\": {\n        \"palletType\": \"Euro\",\n       \"positionFrom\": 1,\n    \"positionTo\": 20,\n    \"pallets\": 20,\n    \"boxes\": 30,\n    \"items\": 40,\n    \"weight\": 50,\n        \"cost\": 110,\n        \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n      },\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 0,\n        \"positionTo\": 0,\n        \"pallets\": 0,\n        \"boxes\": 0,\n        \"items\": 0,\n        \"weight\": 0,\n        \"cost\": 0,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      },\n      \"productTransportWaybill\": \"TTN\"\n    }\n  ],\n  \"loadingPoints\": [\n    {\n      \"dateTime\": {\n        \"from\": \"{{loadingPointsDate}}T15:28:57\",\n        \"to\": \"{{loadingPointsDate}}T15:28:57\"\n      },\n      \"orderIndexes\": [\n        0\n      ],\n      \"warehouse\": {\n        \"gln\": \"string\",\n        \"id\": \"{{loadingWarehouseId}}\",\n        \"foreignId\": \"string\"\n      },\n      \"address\": null,\n      \"comment\": \"{{$randomLoremWords}}\",\n      \"units\": {\n        \"palletType\": \"Euro\",\n     \"positionFrom\": 1,\n    \"positionTo\": 20,\n    \"pallets\": 20,\n    \"boxes\": 30,\n    \"items\": 40,\n    \"weight\": 50,\n        \"cost\": 110,\n        \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n      },\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 1,\n        \"positionTo\": 11,\n        \"pallets\": 11,\n        \"boxes\": 0,\n        \"items\": 0,\n        \"weight\": 0,\n        \"cost\": 0,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      }\n    }\n  ],\n  \"unloadingPoints\": [\n    {\n      \"dateTime\": {\n        \"from\": \"{{unloadingPointsDate}}T15:28:57\",\n        \"to\": \"{{unloadingPointsDate}}T15:28:57\"\n      },\n      \"orderIndexes\": [\n        0\n      ],\n      \"warehouse\": {\n        \"gln\": \"string\",\n        \"id\": \"{{unloadingWarehouseId}}\",\n        \"foreignId\": \"string\"\n      },\n      \"address\":null,\n      \"comment\": \"string\",\n      \"units\": {\n        \"palletType\": \"Euro\",\n         \"positionFrom\": 1,\n    \"positionTo\": 20,\n    \"pallets\": 20,\n    \"boxes\": 30,\n    \"items\": 40,\n    \"weight\": 50,\n        \"cost\": 110,\n        \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n      },\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 0,\n        \"positionTo\": 0,\n        \"pallets\": 0,\n        \"boxes\": 0,\n        \"items\": 0,\n        \"weight\": 0,\n        \"cost\": 0,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      }\n    }\n  ],\n  \"servicesNeeded\": [\n    \"Basic\"\n  ],\n  \"temperature\": {\n    \"from\": 5,\n    \"to\": 25\n  },\n  \"financials\": {\n    \"baseCost\": 9999.87,\n    \"poolingPayToCarrier\": true,\n    \"additionalCosts\": [\n      {\n        \"type\": \"Returning\",\n        \"cost\": 0\n      }\n    ]\n  },\n  \"comment\": \"{{$randomAlphaNumeric}}\",\n  \"unitsAvailable\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 0,\n    \"positionTo\": 0,\n    \"pallets\": 0,\n    \"boxes\": 0,\n    \"items\": 0,\n    \"weight\": 0,\n    \"cost\": 0,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  },\n  \"unitsAvailableMin\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 0,\n    \"positionTo\": 0,\n    \"pallets\": 0,\n    \"boxes\": 0,\n    \"items\": 0,\n    \"weight\": 0,\n    \"cost\": 0,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  },\n  \"unitsFact\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 0,\n    \"positionTo\": 0,\n    \"pallets\": 0,\n    \"boxes\": 0,\n    \"items\": 0,\n    \"weight\": 0,\n    \"cost\": 0,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/reservations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"reservations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Создание бронирования FTL со свободного адреса",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"jsonData = pm.response.json();",
											"",
											"pm.test(\"Проверка, что код ответа 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Проверка, что статус бронирования OnConfirmation\", function () { ",
											"    pm.expect(jsonData.status).to.eql(\"OnConfirmation\");",
											"});",
											"",
											"pm.test(\"Проверка, что бронирование ФТЛ не на слот\", function () { ",
											"    pm.expect(jsonData.slotId).to.eql(null);",
											"    pm.expect(jsonData.shippingType).to.eql(\"FTL\");",
											"});",
											"",
											"pm.test(\"Проверка, что бронирование новое\", function () {  ",
											"    pm.expect(jsonData.number).to.be.a('string').and.match(/[0-9]/);",
											"    pm.expect(jsonData.number).to.have.lengthOf(6); ",
											"    //pm.expect(jsonData.number).to.be.sealed;",
											"    pm.expect(jsonData.version).to.eql(1);",
											"});",
											"",
											"pm.test(\"Проверка на конкретные ТК, ТС\", function () {",
											"   pm.expect(jsonData.carrier.id).to.equal(pm.variables.get(\"carrierId\"));",
											"});",
											"",
											"pm.test(\"Проверка, что нет признака догруза\", function () {",
											"pm.expect(jsonData.servicesNeeded[0]).to.eql(\"Basic\");",
											"});",
											"",
											"pm.test(\"Проверка, что статус точки у новой заявки Scheduled\", function () {",
											"pm.expect(jsonData.loadingPoints[0].status).to.eql(\"Scheduled\");",
											"pm.expect(jsonData.unloadingPoints[0].status).to.eql(\"Scheduled\");",
											"});   ",
											"   ",
											"pm.test(\"Проверка, что заявка со свободного адреса из запроса\", function () {",
											"   pm.expect(jsonData.loadingPoints[0].address.fullAddress).to.equal(pm.variables.get(\"fullAddress\"));",
											"});",
											"",
											"pm.test(\"Проверка, что адрес загрузки из запроса\", function () {",
											"   pm.expect(jsonData.loadingPoints[0].address.fullAddress).to.equal(pm.variables.get(\"fullAddress\"));",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');",
											"pm.variables.set(\"loadingPointsDate\", moment().add(1, 'week').format(\"YYYY-MM-DD\"));",
											"pm.variables.set(\"unloadingPointsDate\", moment().add(2, 'week').format(\"YYYY-MM-DD\"));",
											"",
											"const number = pm.collectionVariables.set (\"randomNum\", _.random (10000,100000));",
											"",
											"pm.variables.set(\"carrierId\", \"5f43a3c47d0521017fe57152\");",
											"pm.variables.set(\"clientId\", \"5b06c5b70c7e6f6764d50d0e\");",
											"pm.variables.set(\"consignorId\", \"5bb49dac6458d524784dd419\");",
											"pm.variables.set(\"unloadingWarehouseId\", \"5d5e772b756484199479a476\");",
											"pm.variables.set(\"fullAddress\", \"г Тула, ул Кутузова, д 6/188, кв 31\");",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{goTestoviyOT}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"foreignId\":  null,\n  \"shippingType\": \"FTL\",\n  \"slotId\": \"000000000000000000000000\",\n  \"carrier\": {\n    \"inn\": null,\n    \"id\": \"5f43a3c47d0521017fe57152\",\n    \"foreignId\": null\n  },\n  \"client\": {\n    \"inn\": null,\n    \"id\": \"5b7c27eed9fd553724033b20\",\n    \"foreignId\": null\n  },\n  \"carType\": \"Tent\",\n  \"carCapacityType\": \"t20\",\n  \"productType\": \"alco\",\n  \"units\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 1,\n    \"positionTo\": 20,\n    \"pallets\": 20,\n    \"boxes\": 30,\n    \"items\": 40,\n    \"weight\": 50,\n    \"cost\": 110,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n  },\n  \"orders\": [\n    {\n      \"number\": \"SS1234{{randomNum}}\",\n      \"waybillNumber\": null,\n      \"consignorNumber\": null,\n      \"type\": \"None\",\n      \"units\": {\n        \"palletType\": \"Euro\",\n       \"positionFrom\": 1,\n    \"positionTo\": 20,\n    \"pallets\": 20,\n    \"boxes\": 30,\n    \"items\": 40,\n    \"weight\": 50,\n        \"cost\": 110,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null      },\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 0,\n        \"positionTo\": 0,\n        \"pallets\": 0,\n        \"boxes\": 0,\n        \"items\": 0,\n        \"weight\": 0,\n        \"cost\": 0,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      },\n      \"productTransportWaybill\": \"TTN\"\n    }\n  ],\n  \"loadingPoints\": [\n    {\n      \"dateTime\": {\n        \"from\": \"{{loadingPointsDate}}T15:28:57\",\n        \"to\": \"{{loadingPointsDate}}T15:28:57\"\n      },\n      \"orderIndexes\": [\n        0\n      ],\n      \"warehouse\": {\n        \"gln\": null,\n        \"id\": null,\n        \"foreignId\": null\n      },\n      \"Address\": {\n        \"gln\": null,\n        \"fullAddress\": \"г Тула, ул Кутузова, д 6/188, кв 31\",\n        \"postalCode\": \"300004\",\n        \"region\": \"Тульская обл\",\n        \"area\": null,\n        \"city\": \"г Тула\",\n        \"cityDistrict\": null,\n        \"settlement\": null,\n        \"street\": \"ул Кутузова\",\n        \"house\": \"д 6/188\",\n        \"block\": null,\n        \"flat\": \"кв 31\",\n        \"fiasId\": \"0f27dbb0-be3f-4322-b906-0b3954a957e4\",\n        \"fiasCode\": \"71000001000000002190183\",\n        \"fiasActualityState\": 0,\n        \"kladrId\": \"7100000100002190183\",\n        \"comment\": \"каждый охотник желает знать, где сидит фазан\",\n        \"companyName\": \"БАКАРДИ РУС дом начальника склада\"\n      },\n      \"comment\": \"нет коммента\",\n      \"units\": {\n        \"palletType\": \"Euro\",\n     \"positionFrom\": 1,\n    \"positionTo\": 20,\n    \"pallets\": 20,\n    \"boxes\": 30,\n    \"items\": 40,\n    \"weight\": 50,\n        \"cost\": 110,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n      },\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 1,\n        \"positionTo\": 11,\n        \"pallets\": 11,\n        \"boxes\": 0,\n        \"items\": 0,\n        \"weight\": 0,\n        \"cost\": 0,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      }\n    }\n  ],\n  \"unloadingPoints\": [\n    {\n      \"dateTime\": {\n        \"from\": \"{{unloadingPointsDate}}T15:28:57\",\n        \"to\": \"{{unloadingPointsDate}}T15:28:57\"\n      },\n      \"orderIndexes\": [\n        0\n      ],\n      \"warehouse\": {\n        \"gln\": null,\n        \"id\": \"5d5e772b756484199479a476\",\n        \"foreignId\": null\n      },\n      \"address\":null,\n      \"comment\": null,\n      \"units\": {\n        \"palletType\": \"Euro\",\n         \"positionFrom\": 1,\n    \"positionTo\": 20,\n    \"pallets\": 20,\n    \"boxes\": 30,\n    \"items\": 40,\n    \"weight\": 50,\n        \"cost\": 110,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n      },\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 0,\n        \"positionTo\": 0,\n        \"pallets\": 0,\n        \"boxes\": 0,\n        \"items\": 0,\n        \"weight\": 0,\n        \"cost\": 0,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      }\n    }\n  ],\n  \"servicesNeeded\": [\n    \"Basic\"\n  ],\n  \"temperature\": {\n    \"from\": 5,\n    \"to\": 25\n  },\n  \"financials\": {\n    \"baseCost\": 9999.87,\n    \"poolingPayToCarrier\": true,\n    \"additionalCosts\": [\n      {\n        \"type\": \"0\",\n        \"cost\": 0\n      }\n    ]\n  },\n  \"comment\": \"\",\n  \"unitsAvailable\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 0,\n    \"positionTo\": 0,\n    \"pallets\": 0,\n    \"boxes\": 0,\n    \"items\": 0,\n    \"weight\": 0,\n    \"cost\": 0,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  },\n  \"unitsAvailableMin\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 0,\n    \"positionTo\": 0,\n    \"pallets\": 0,\n    \"boxes\": 0,\n    \"items\": 0,\n    \"weight\": 0,\n    \"cost\": 0,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  },\n  \"unitsFact\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 0,\n    \"positionTo\": 0,\n    \"pallets\": 0,\n    \"boxes\": 0,\n    \"items\": 0,\n    \"weight\": 0,\n    \"cost\": 0,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/reservations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"reservations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Создание бронирования FTL на свободный адрес",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"jsonData = pm.response.json();",
											"",
											"pm.test(\"Проверка, что код ответа 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Проверка, что статус бронирования OnConfirmation\", function () { ",
											"    pm.expect(jsonData.status).to.eql(\"OnConfirmation\");",
											"});",
											"",
											"pm.test(\"Проверка, что бронирование ФТЛ не на слот\", function () { ",
											"    pm.expect(jsonData.slotId).to.eql(null);",
											"    pm.expect(jsonData.shippingType).to.eql(\"FTL\");",
											"});",
											"",
											"pm.test(\"Проверка, что бронирование новое\", function () {  ",
											"    pm.expect(jsonData.number).to.be.a('string').and.match(/[0-9]/);",
											"    pm.expect(jsonData.number).to.have.lengthOf(6); ",
											"    //pm.expect(jsonData.number).to.be.sealed;",
											"    pm.expect(jsonData.version).to.eql(1);",
											"});",
											"",
											"pm.test(\"Проверка на конкретные ТК, ТС\", function () {",
											"   pm.expect(jsonData.carrier.id).to.equal(pm.variables.get(\"carrierId\"));",
											"});",
											"",
											"pm.test(\"Проверка, что нет признака догруза\", function () {",
											"pm.expect(jsonData.servicesNeeded[0]).to.eql(\"Basic\");",
											"});",
											"",
											"pm.test(\"Проверка, что статус точки у новой заявки Scheduled\", function () {",
											"pm.expect(jsonData.loadingPoints[0].status).to.eql(\"Scheduled\");",
											"pm.expect(jsonData.unloadingPoints[0].status).to.eql(\"Scheduled\");",
											"});   ",
											"   ",
											"pm.test(\"Проверка, что заявка на свободный адрес из запроса\", function () {",
											"   pm.expect(jsonData.unloadingPoints[0].address.fullAddress).to.equal(pm.variables.get(\"fullAddress\"));",
											"});",
											"",
											"pm.test(\"Проверка, что нет склада выгрузки\", function () {",
											"   pm.expect(jsonData.unloadingPoints[0].address.fullAddress).to.equal(pm.variables.get(\"fullAddress\"));",
											"});",
											"",
											"pm.sendRequest({",
											"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/reservations\",",
											"    method: \"GET\",",
											"    header: {",
											"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goTestoviyOT\"),",
											"    },",
											"},",
											"    function (err, res) {",
											"        console.log(res.json());",
											"        pm.response.to.have.status(200);}",
											");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');",
											"pm.variables.set(\"loadingPointsDate\", moment().add(1, 'week').format(\"YYYY-MM-DD\"));",
											"pm.variables.set(\"unloadingPointsDate\", moment().add(2, 'week').format(\"YYYY-MM-DD\"));",
											"",
											"const number = pm.collectionVariables.set (\"randomNum\", _.random (10000,100000));",
											"",
											"pm.variables.set(\"carrierId\", \"5f43a3c47d0521017fe57152\");",
											"pm.variables.set(\"clientId\", \"5b06c5b70c7e6f6764d50d0e\");",
											"pm.variables.set(\"consignorId\", \"5bb49dac6458d524784dd419\");",
											"pm.variables.set(\"loadingWarehouseId\", \"5bb49eaa6458d524784dd41b\");",
											"pm.variables.set(\"fullAddress\", \"г Тула, ул Кутузова, д 6/188, кв 31\");",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{goTestoviyOT}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"foreignId\": null,\n  \"shippingType\": \"FTL\",\n  \"slotId\": \"000000000000000000000000\",\n  \"carrier\": {\n    \"inn\": null,\n    \"id\": \"5f43a3c47d0521017fe57152\",\n    \"foreignId\": null\n  },\n  \"client\": {\n    \"inn\": null,\n    \"id\": \"5b7c27eed9fd553724033b20\",\n    \"foreignId\": null\n  },\n  \"carType\": \"Tent\",\n  \"carCapacityType\": \"t20\",\n  \"productType\": \"alco\",\n  \"units\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 1,\n    \"positionTo\": 20,\n    \"pallets\": 20,\n    \"boxes\": 30,\n    \"items\": 40,\n    \"weight\": 50,\n    \"cost\": 110,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n  },\n  \"orders\": [\n    {\n      \"number\": \"SS1234{{randomNum}}\",\n      \"waybillNumber\": null,\n      \"consignorNumber\": null,\n      \"type\": \"None\",\n      \"units\": {\n        \"palletType\": \"Euro\",\n       \"positionFrom\": 1,\n    \"positionTo\": 20,\n    \"pallets\": 20,\n    \"boxes\": 30,\n    \"items\": 40,\n    \"weight\": 50,\n        \"cost\": 110,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n      },\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 0,\n        \"positionTo\": 0,\n        \"pallets\": 0,\n        \"boxes\": 0,\n        \"items\": 0,\n        \"weight\": 0,\n        \"cost\": 0,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      },\n      \"productTransportWaybill\": \"TTN\"\n    }\n  ],\n  \"loadingPoints\": [\n    {\n      \"dateTime\": {\n        \"from\": \"{{loadingPointsDate}}T15:28:57\",\n        \"to\": \"{{loadingPointsDate}}T15:28:57\"\n      },\n      \"orderIndexes\": [\n        0\n      ],\n      \"warehouse\": {\n        \"gln\": null,\n        \"id\": \"{{loadingWarehouseId}}\",\n        \"foreignId\": null\n      },\n      \"Address\": null,\n      \"comment\": \"нет коммента\",\n      \"units\": {\n        \"palletType\": \"Euro\",\n     \"positionFrom\": 1,\n    \"positionTo\": 20,\n    \"pallets\": 20,\n    \"boxes\": 30,\n    \"items\": 40,\n    \"weight\": 50,\n        \"cost\": 110,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n      },\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 1,\n        \"positionTo\": 11,\n        \"pallets\": 11,\n        \"boxes\": 0,\n        \"items\": 0,\n        \"weight\": 0,\n        \"cost\": 0,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      }\n    }\n  ],\n  \"unloadingPoints\": [\n    {\n      \"dateTime\": {\n        \"from\": \"{{unloadingPointsDate}}T15:28:57\",\n        \"to\": \"{{unloadingPointsDate}}T15:28:57\"\n      },\n      \"orderIndexes\": [\n        0\n      ],\n      \"warehouse\": {\n        \"gln\": null,\n        \"id\": null,\n        \"foreignId\": null\n      },\n      \"address\":{\n        \"gln\": null,\n        \"fullAddress\": \"г Тула, ул Кутузова, д 6/188, кв 31\",\n        \"postalCode\": \"300004\",\n        \"region\": \"Тульская обл\",\n        \"area\": null,\n        \"city\": \"г Тула\",\n        \"cityDistrict\": null,\n        \"settlement\": null,\n        \"street\": \"ул Кутузова\",\n        \"house\": \"д 6/188\",\n        \"block\": null,\n        \"flat\": \"кв 31\",\n        \"fiasId\": \"0f27dbb0-be3f-4322-b906-0b3954a957e4\",\n        \"fiasCode\": \"71000001000000002190183\",\n        \"fiasActualityState\": 0,\n        \"kladrId\": \"7100000100002190183\",\n        \"comment\": \"каждый охотник желает знать, где сидит фазан\",\n        \"companyName\": \"БАКАРДИ РУС дом начальника склада\"\n      },\n      \"comment\": null,\n      \"units\": {\n        \"palletType\": \"Euro\",\n         \"positionFrom\": 1,\n    \"positionTo\": 20,\n    \"pallets\": 20,\n    \"boxes\": 30,\n    \"items\": 40,\n    \"weight\": 50,\n        \"cost\": 110,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n      },\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 0,\n        \"positionTo\": 0,\n        \"pallets\": 0,\n        \"boxes\": 0,\n        \"items\": 0,\n        \"weight\": 0,\n        \"cost\": 0,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      }\n    }\n  ],\n  \"servicesNeeded\": [\n    \"Basic\"\n  ],\n  \"temperature\": {\n    \"from\": 5,\n    \"to\": 25\n  },\n  \"financials\": {\n    \"baseCost\": 9999.87,\n    \"poolingPayToCarrier\": true,\n    \"additionalCosts\": [\n      {\n        \"type\": \"0\",\n        \"cost\": 0\n      }\n    ]\n  },\n  \"comment\": \"\",\n  \"unitsAvailable\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 0,\n    \"positionTo\": 0,\n    \"pallets\": 0,\n    \"boxes\": 0,\n    \"items\": 0,\n    \"weight\": 0,\n    \"cost\": 0,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  },\n  \"unitsAvailableMin\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 0,\n    \"positionTo\": 0,\n    \"pallets\": 0,\n    \"boxes\": 0,\n    \"items\": 0,\n    \"weight\": 0,\n    \"cost\": 0,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  },\n  \"unitsFact\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 0,\n    \"positionTo\": 0,\n    \"pallets\": 0,\n    \"boxes\": 0,\n    \"items\": 0,\n    \"weight\": 0,\n    \"cost\": 0,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/reservations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"reservations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Создание бронирования FTL на две точки откуда",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"jsonData = pm.response.json();",
											"",
											"pm.test(\"Проверка, что код ответа 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Проверка, что статус бронирования OnConfirmation\", function () { ",
											"    pm.expect(jsonData.status).to.eql(\"OnConfirmation\");",
											"});",
											"",
											"pm.test(\"Проверка, что бронирование ФТЛ не на слот\", function () { ",
											"    pm.expect(jsonData.slotId).to.eql(null);",
											"    pm.expect(jsonData.shippingType).to.eql(\"FTL\");",
											"});",
											"",
											"pm.test(\"Проверка, что бронирование новое\", function () {  ",
											"    pm.expect(jsonData.number).to.be.a('string').and.match(/[0-9]/);",
											"    pm.expect(jsonData.number).to.have.lengthOf(6); ",
											"    //pm.expect(jsonData.number).to.be.sealed;",
											"    pm.expect(jsonData.version).to.eql(1);",
											"});",
											"",
											"pm.test(\"Проверка на конкретные ТК, ТС\", function () {",
											"   pm.expect(jsonData.carrier.id).to.equal(pm.variables.get(\"carrierId\"));",
											"});",
											"",
											"",
											"pm.test(\"Проверка, что нет признака догруза\", function () {",
											"pm.expect(jsonData.servicesNeeded[0]).to.eql(\"Basic\");",
											"});",
											"",
											"pm.test(\"Проверка, что статус точки у новой заявки Scheduled\", function () {",
											"pm.expect(jsonData.loadingPoints[0].status).to.eql(\"Scheduled\");",
											"pm.expect(jsonData.unloadingPoints[0].status).to.eql(\"Scheduled\");",
											"});  ",
											"",
											"pm.test(\"Проверка, что точек отправки две\", function () { ",
											"    pm.expect(jsonData.loadingPoints).to.have.lengthOf(2);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');",
											"pm.variables.set(\"loadingPointsDate1\", moment().add(1, 'day').format(\"YYYY-MM-DDTHH:mm:ss\"));",
											"pm.variables.set(\"loadingPointsDate2\", moment().add(1, 'day').format(\"YYYY-MM-DDTHH:mm:ss\"));",
											"pm.variables.set(\"unloadingPointsDate1\", moment().add(7, 'day').format(\"YYYY-MM-DDTHH:mm:ss\"));",
											"pm.variables.set(\"unloadingPointsDate2\", moment().add(7, 'day').format(\"YYYY-MM-DDTHH:mm:ss\"));",
											"",
											"const number = pm.collectionVariables.set (\"randomNum\", _.random (10000,100000));",
											"",
											"pm.variables.set(\"carrierId\", \"5f43a3c47d0521017fe57152\");",
											"pm.variables.set(\"clientId\", \"5b06c5b70c7e6f6764d50d0e\");",
											"pm.variables.set(\"consignorId\", \"5bb49dac6458d524784dd419\");",
											"pm.variables.set(\"loadingWarehouseId1\", \"5bb49eaa6458d524784dd41b\");",
											"pm.variables.set(\"loadingWarehouseId2\", \"60c0de6a092052726555cf6a\");",
											"pm.variables.set(\"unloadingWarehouseId1\", \"5d5e772b756484199479a476\");",
											"pm.variables.set(\"unloadingWarehouseId2\", \"5b23dfcccd1a2640b4de30b7\");",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{goTestoviyOT}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"foreignId\": null,\n  \"shippingType\": \"FTL\",\n  \"slotId\": \"000000000000000000000000\",\n  \"carrier\": {\n    \"inn\": null,\n    \"id\": \"{{carrierId}}\",\n    \"foreignId\": null\n  },\n  \"client\": {\n    \"inn\": null,\n    \"id\": \"{{clientId}}\",\n    \"foreignId\": null\n  },\n  \"carType\": \"Tent\",\n  \"carCapacityType\": \"t20\",\n  \"productType\": \"Food\",\n  \"units\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 1,\n    \"positionTo\": 10,\n    \"pallets\": 10,\n    \"boxes\": null,\n    \"items\": null,\n    \"weight\": 10,\n    \"cost\": 10,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n  },\n\"unitsFact\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 1,\n    \"positionTo\": 11,\n    \"pallets\": 11,\n    \"boxes\": 20,\n    \"items\": 40,\n    \"weight\": 3440,\n    \"cost\": 44440,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  },\n  \"orders\": [\n    {\n      \"number\": \"SD2{{randomNum}}\",\n      \"waybillNumber\": \"2\",\n      \"consignorNumber\": \"3\",\n      \"type\": \"None\",\n      \"units\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 1,\n        \"positionTo\": 5,\n        \"pallets\": 5,\n        \"boxes\": null,\n        \"items\": null,\n        \"weight\": 5,\n        \"cost\": 5,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n      },\n\"unitsFact\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 1,\n    \"positionTo\": 11,\n    \"pallets\": 11,\n    \"boxes\": 20,\n    \"items\": 40,\n    \"weight\": 3440,\n    \"cost\": 44440,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  },\n      \"productTransportWaybill\": null\n    }\n  ],\n  \"orders\": [\n    {\n      \"number\": \"SD1{{randomNum}}\",\n      \"waybillNumber\": \"2\",\n      \"consignorNumber\": \"3\",\n      \"type\": \"None\",\n      \"units\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 1,\n        \"positionTo\": 5,\n        \"pallets\": 5,\n        \"boxes\": null,\n        \"items\": null,\n        \"weight\": 5,\n        \"cost\": 5,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n      },\n\"unitsFact\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 1,\n    \"positionTo\": 1,\n    \"pallets\": 1,\n    \"boxes\": 2,\n    \"items\": 4,\n    \"weight\": 3440,\n    \"cost\": 44440,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  },\n      \"productTransportWaybill\": \"1string\"\n    }\n  ],\n  \"loadingPoints\": [\n    {\n      \"dateTime\": {\n        \"from\": \"{{loadingPointsDate1}}\",\n        \"to\": \"{{loadingPointsDate1}}\"\n      },\n      \"orderIndexes\": [\n        0\n      ],\n      \"warehouse\": {\n        \"gln\": null,\n        \"id\": \"{{loadingWarehouseId1}}\",\n        \"foreignId\": null\n      },\n      \"comment\": null,\n      \"units\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 1,\n        \"positionTo\": 1,\n        \"pallets\": 1,\n        \"boxes\": null,\n        \"items\": null,\n        \"weight\": 5,\n        \"cost\": 5,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n      },\n\"unitsFact\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 1,\n    \"positionTo\": 11,\n    \"pallets\": 11,\n    \"boxes\": 20,\n    \"items\": 40,\n    \"weight\": 0,\n    \"cost\": 0,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  }\n    },\n{\n      \"dateTime\": {\n        \"from\": \"{{loadingPointsDate2}}\",\n        \"to\": \"{{loadingPointsDate2}}\"\n      },\n      \"orderIndexes\": [\n        1\n      ],\n      \"warehouse\": {\n        \"gln\": null,\n        \"id\": \"{{loadingWarehouseId2}}\",\n        \"foreignId\": null\n      },\n      \"comment\": null,\n      \"units\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 1,\n        \"positionTo\": 5,\n        \"pallets\": 5,\n        \"boxes\": null,\n        \"items\": null,\n        \"weight\": 5,\n        \"cost\": 5,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n      },\n\"unitsFact\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 1,\n    \"positionTo\": 11,\n    \"pallets\": 11,\n    \"boxes\": 20,\n    \"items\": 40,\n    \"weight\": 0,\n    \"cost\": 44440,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  }\n    }\n  ],\n  \"unloadingPoints\": [\n    {\n      \"dateTime\": {\n        \"from\": \"{{unloadingPointsDate2}}\",\n        \"to\": \"{{unloadingPointsDate2}}\"\n      },\n      \"orderIndexes\": [\n        0\n      ],\n      \"warehouse\": {\n        \"gln\": null,\n        \"id\": \"{{unloadingWarehouseId1}}\",\n        \"foreignId\": null\n      },\n      \"comment\": null,\n      \"units\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 1,\n        \"positionTo\": 6,\n        \"pallets\": 6,\n        \"boxes\": null,\n        \"items\": null,\n        \"weight\": 10,\n        \"cost\": 10,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n      },\n\"unitsFact\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 1,\n    \"positionTo\": 11,\n    \"pallets\": 11,\n    \"boxes\": 0,\n    \"items\": 0,\n    \"weight\": 3440,\n    \"cost\": 44440,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  }\n    }\n  ],\n  \"servicesNeeded\": [\n    \"Basic\"\n  ],\n  \"temperature\": {\n    \"from\": 0,\n    \"to\": 0\n  },\n  \"financials\": {\n    \"baseCost\": 0,\n    \"poolingPayToCarrier\": true,\n    \"additionalCosts\": [\n      {\n        \"type\": \"Returning\",\n        \"cost\": 0\n      }\n    ]\n  },\n  \"comment\": null,\n  \"unitsAvailable\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 1,\n    \"positionTo\": 1,\n    \"pallets\": 1,\n    \"boxes\": 0,\n    \"items\": 0,\n    \"weight\": 0,\n    \"cost\": 0,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  },\n  \"unitsAvailableMin\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 0,\n    \"positionTo\": 0,\n    \"pallets\": 0,\n    \"boxes\": 0,\n    \"items\": 0,\n    \"weight\": 0,\n    \"cost\": 0,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/reservations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"reservations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Ошибка создания бронирования FTL валидация дат",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"jsonData = pm.response.json();",
											"let titleError = \"Время доставки не должно быть меньше времени загрузки\";",
											"",
											"pm.test(\"Проверка что статус код 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Проверка на конкретную ошибку\", function () {",
											"    pm.expect(jsonData.error).to.include(titleError);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');",
											"pm.variables.set(\"loadingPointsDate1\", moment().add(1, 'week').format(\"YYYY-MM-DDTHH:mm:ss\"));",
											"pm.variables.set(\"loadingPointsDate2\", moment().add(1, 'day').format(\"YYYY-MM-DDTHH:mm:ss\"));",
											"",
											"",
											"const number = pm.collectionVariables.set (\"randomNum\", _.random (10000,100000));",
											"",
											"pm.variables.set(\"carrierId\", \"5f43a3c47d0521017fe57152\");",
											"pm.variables.set(\"clientId\", \"5b06c5b70c7e6f6764d50d0e\");",
											"pm.variables.set(\"consignorId\", \"5bb49dac6458d524784dd419\");",
											"pm.variables.set(\"loadingWarehouseId1\", \"5bb49eaa6458d524784dd41b\");",
											"pm.variables.set(\"loadingWarehouseId2\", \"60c0de6a092052726555cf6a\");",
											"pm.variables.set(\"unloadingWarehouseId1\", \"5d5e772b756484199479a476\");",
											"pm.variables.set(\"unloadingWarehouseId2\", \"5b23dfcccd1a2640b4de30b7\");",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{goTestoviyOT}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"foreignId\": null,\n  \"shippingType\": \"FTL\",\n  \"slotId\": \"000000000000000000000000\",\n  \"carrier\": {\n    \"inn\": null,\n    \"id\": \"{{carrierId}}\",\n    \"foreignId\": null\n  },\n  \"client\": {\n    \"inn\": null,\n    \"id\": \"{{clientId}}\",\n    \"foreignId\": null\n  },\n  \"carType\": \"Tent\",\n  \"carCapacityType\": \"t20\",\n  \"productType\": \"Food\",\n  \"units\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 1,\n    \"positionTo\": 10,\n    \"pallets\": 10,\n    \"boxes\": 0,\n    \"items\": 0,\n    \"weight\": 10,\n    \"cost\": 10,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  },\n\"unitsFact\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 1,\n    \"positionTo\": 11,\n    \"pallets\": 11,\n    \"boxes\": 20,\n    \"items\": 40,\n    \"weight\": 3440,\n    \"cost\": 44440,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  },\"orders\": [\n    {\n      \"number\": \"1111Q235\",\n      \"waybillNumber\": \"2\",\n      \"consignorNumber\": \"3\",\n      \"type\": \"None\",\n      \"units\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 1,\n        \"positionTo\": 5,\n        \"pallets\": 5,\n        \"boxes\": 0,\n        \"items\": 0,\n        \"weight\": 5,\n        \"cost\": 5,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      },\n\"unitsFact\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 1,\n    \"positionTo\": 11,\n    \"pallets\": 11,\n    \"boxes\": 20,\n    \"items\": 40,\n    \"weight\": 3440,\n    \"cost\": 44440,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  },\n      \"productTransportWaybill\": null\n    }\n  ],\n  \"orders\": [\n    {\n      \"number\": \"SD1{{number}}\",\n      \"waybillNumber\": \"2\",\n      \"consignorNumber\": \"3\",\n      \"type\": \"None\",\n      \"units\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 1,\n        \"positionTo\": 5,\n        \"pallets\": 5,\n        \"boxes\": 0,\n        \"items\": 0,\n        \"weight\": 5,\n        \"cost\": 5,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      },\n\"unitsFact\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 1,\n    \"positionTo\": 1,\n    \"pallets\": 1,\n    \"boxes\": 2,\n    \"items\": 4,\n    \"weight\": 3440,\n    \"cost\": 44440,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  },\n      \"productTransportWaybill\": \"1string\"\n    }\n  ],\n  \"loadingPoints\": [\n    {\n      \"dateTime\": {\n        \"from\": \"{{loadingPointsDate1}}\",\n        \"to\": \"{{loadingPointsDate1}}\"\n      },\n      \"orderIndexes\": [\n        0\n      ],\n      \"warehouse\": {\n        \"gln\": null,\n        \"id\": \"{{loadingWarehouseId1}}\",\n        \"foreignId\": null\n      },\n      \"comment\": null,\n      \"units\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 1,\n        \"positionTo\": 1,\n        \"pallets\": 1,\n        \"boxes\": 0,\n        \"items\": 0,\n        \"weight\": 5,\n        \"cost\": 5,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      },\n\"unitsFact\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 1,\n    \"positionTo\": 11,\n    \"pallets\": 11,\n    \"boxes\": 20,\n    \"items\": 40,\n    \"weight\": 0,\n    \"cost\": 0,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  },\n    },\n{\n      \"dateTime\": {\n        \"from\": \"{{loadingPointsDate2}}\",\n        \"to\": \"{{loadingPointsDate2}}\"\n      },\n      \"orderIndexes\": [\n        1\n      ],\n      \"warehouse\": {\n        \"gln\": null,\n        \"id\": \"{{loadingWarehouseId2}}\",\n        \"foreignId\": null\n      },\n      \"comment\": null,\n      \"units\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 1,\n        \"positionTo\": 5,\n        \"pallets\": 5,\n        \"boxes\": 0,\n        \"items\": 0,\n        \"weight\": 5,\n        \"cost\": 5,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      },\n\"unitsFact\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 1,\n    \"positionTo\": 11,\n    \"pallets\": 11,\n    \"boxes\": 20,\n    \"items\": 40,\n    \"weight\": 0,\n    \"cost\": 44440,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  },\n    }\n  ],\n  \"unloadingPoints\": [\n    {\n      \"dateTime\": {\n        \"from\": \"2021-09-29T11:09:19\",\n        \"to\": \"2021-09-29T11:09:19\"\n      },\n      \"orderIndexes\": [\n        0\n      ],\n      \"warehouse\": {\n        \"gln\": null,\n        \"id\": \"5d5d112dd949e8012c8a2f39\",\n        \"foreignId\": null\n      },\n      \"comment\": null,\n      \"units\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 1,\n        \"positionTo\": 6,\n        \"pallets\": 6,\n        \"boxes\": 0,\n        \"items\": 0,\n        \"weight\": 10,\n        \"cost\": 10,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      },\n\"unitsFact\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 1,\n    \"positionTo\": 11,\n    \"pallets\": 11,\n    \"boxes\": 0,\n    \"items\": 0,\n    \"weight\": 3440,\n    \"cost\": 44440,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  },\n    }\n  ],\n  \"servicesNeeded\": [\n    \"Basic\"\n  ],\n  \"temperature\": {\n    \"from\": 0,\n    \"to\": 0\n  },\n  \"financials\": {\n    \"baseCost\": 0,\n    \"poolingPayToCarrier\": true,\n    \"additionalCosts\": [\n      {\n        \"type\": \"Returning\",\n        \"cost\": 0\n      }\n    ]\n  },\n  \"comment\": null,\n  \"unitsAvailable\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 1,\n    \"positionTo\": 1,\n    \"pallets\": 1,\n    \"boxes\": 0,\n    \"items\": 0,\n    \"weight\": 0,\n    \"cost\": 0,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  },\n  \"unitsAvailableMin\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 0,\n    \"positionTo\": 0,\n    \"pallets\": 0,\n    \"boxes\": 0,\n    \"items\": 0,\n    \"weight\": 0,\n    \"cost\": 0,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/reservations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"reservations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Создание бронирования FTL на две точки куда",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"jsonData = pm.response.json();",
											"",
											"pm.test(\"Проверка, что код ответа 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Проверка, что статус бронирования OnConfirmation\", function () { ",
											"    pm.expect(jsonData.status).to.eql(\"OnConfirmation\");",
											"});",
											"",
											"pm.test(\"Проверка, что бронирование ФТЛ не на слот\", function () { ",
											"    pm.expect(jsonData.slotId).to.eql(null);",
											"    pm.expect(jsonData.shippingType).to.eql(\"FTL\");",
											"});",
											"",
											"pm.test(\"Проверка, что бронирование новое\", function () {  ",
											"    pm.expect(jsonData.number).to.be.a('string').and.match(/[0-9]/);",
											"    pm.expect(jsonData.number).to.have.lengthOf(6); ",
											"    //pm.expect(jsonData.number).to.be.sealed;",
											"    pm.expect(jsonData.version).to.eql(1);",
											"});",
											"",
											"pm.test(\"Проверка на конкретные ТК, ТС\", function () {",
											"   pm.expect(jsonData.carrier.id).to.equal(pm.variables.get(\"carrierId\"));",
											"});",
											"",
											"",
											"pm.test(\"Проверка, что нет признака догруза\", function () {",
											"pm.expect(jsonData.servicesNeeded[0]).to.eql(\"Basic\");",
											"});",
											"",
											"pm.test(\"Проверка, что статус точки у новой заявки Scheduled\", function () {",
											"pm.expect(jsonData.loadingPoints[0].status).to.eql(\"Scheduled\");",
											"pm.expect(jsonData.unloadingPoints[0].status).to.eql(\"Scheduled\");",
											"});    ",
											"   ",
											"",
											"pm.test(\"Проверка, что точек доставки две\", function () { ",
											"    pm.expect(jsonData.unloadingPoints).to.have.lengthOf(2);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');",
											"pm.variables.set(\"loadingPointsDate1\", moment().add(1, 'day').format(\"YYYY-MM-DDTHH:mm:ss\"));",
											"pm.variables.set(\"loadingPointsDate2\", moment().add(1, 'day').format(\"YYYY-MM-DDTHH:mm:ss\"));",
											"pm.variables.set(\"unloadingPointsDate1\", moment().add(7, 'day').format(\"YYYY-MM-DDTHH:mm:ss\"));",
											"pm.variables.set(\"unloadingPointsDate2\", moment().add(7, 'day').format(\"YYYY-MM-DDTHH:mm:ss\"));",
											"",
											"const number = pm.collectionVariables.set (\"randomNum\", _.random (10000,100000));",
											"",
											"pm.variables.set(\"carrierId\", \"5f43a3c47d0521017fe57152\");",
											"pm.variables.set(\"clientId\", \"5b06c5b70c7e6f6764d50d0e\");",
											"pm.variables.set(\"consignorId\", \"5bb49dac6458d524784dd419\");",
											"pm.variables.set(\"loadingWarehouseId1\", \"5bb49eaa6458d524784dd41b\");",
											"pm.variables.set(\"loadingWarehouseId2\", \"60c0de6a092052726555cf6a\");",
											"pm.variables.set(\"unloadingWarehouseId1\", \"5d5e772b756484199479a476\");",
											"pm.variables.set(\"unloadingWarehouseId2\", \"5b23dfcccd1a2640b4de30b7\");",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{goTestoviyOT}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"foreignId\": null,\n  \"shippingType\": \"FTL\",\n  \"slotId\": \"000000000000000000000000\",\n  \"carrier\": {\n    \"inn\": null,\n    \"id\": \"{{carrierId}}\",\n    \"foreignId\": null\n  },\n  \"client\": {\n    \"inn\": null,\n    \"id\": \"{{clientId}}\",\n    \"foreignId\": null\n  },\n  \"carType\": \"Tent\",\n  \"carCapacityType\": \"t20\",\n  \"productType\": \"Food\",\n  \"units\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 1,\n    \"positionTo\": 10,\n    \"pallets\": 10,\n    \"boxes\": null,\n    \"items\": null,\n    \"weight\": 10,\n    \"cost\": 10,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n  },\n\"unitsFact\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 1,\n    \"positionTo\": 11,\n    \"pallets\": 11,\n    \"boxes\": 20,\n    \"items\": 40,\n    \"weight\": 3440,\n    \"cost\": 44440,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  },\n  \"orders\": [\n    {\n      \"number\": \"SD2{{randomNum}}\",\n      \"waybillNumber\": \"2\",\n      \"consignorNumber\": \"3\",\n      \"type\": \"None\",\n      \"units\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 1,\n        \"positionTo\": 5,\n        \"pallets\": 5,\n        \"boxes\": null,\n        \"items\": null,\n        \"weight\": 5,\n        \"cost\": 5,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n      },\n\"unitsFact\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 1,\n    \"positionTo\": 11,\n    \"pallets\": 11,\n    \"boxes\": 20,\n    \"items\": 40,\n    \"weight\": 3440,\n    \"cost\": 44440,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  },\n      \"productTransportWaybill\": null\n    }\n  ],\n  \"orders\": [\n    {\n      \"number\": \"SD1{{randomNum}}\",\n      \"waybillNumber\": \"2\",\n      \"consignorNumber\": \"3\",\n      \"type\": \"None\",\n      \"units\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 1,\n        \"positionTo\": 5,\n        \"pallets\": 5,\n        \"boxes\": null,\n        \"items\": null,\n        \"weight\": 5,\n        \"cost\": 5,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n      },\n\"unitsFact\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 1,\n    \"positionTo\": 1,\n    \"pallets\": 1,\n    \"boxes\": 2,\n    \"items\": 4,\n    \"weight\": 3440,\n    \"cost\": 44440,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  },\n      \"productTransportWaybill\": \"1string\"\n    }\n  ],\n  \"loadingPoints\": [\n    {\n      \"dateTime\": {\n        \"from\": \"{{loadingPointsDate1}}\",\n        \"to\": \"{{loadingPointsDate1}}\"\n      },\n      \"orderIndexes\": [\n        0,1\n      ],\n      \"warehouse\": {\n        \"gln\": null,\n        \"id\": \"{{loadingWarehouseId1}}\",\n        \"foreignId\": null\n      },\n      \"comment\": null,\n      \"units\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 1,\n        \"positionTo\": 10,\n        \"pallets\": 10,\n        \"boxes\": null,\n        \"items\": null,\n        \"weight\": 10,\n        \"cost\": 10,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n      },\n\"unitsFact\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 1,\n    \"positionTo\": 11,\n    \"pallets\": 11,\n    \"boxes\": 20,\n    \"items\": 40,\n    \"weight\": 0,\n    \"cost\": 0,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  }\n    }\n  ],\n  \"unloadingPoints\": [\n    {\n      \"dateTime\": {\n        \"from\": \"{{loadingPointsDate2}}\",\n        \"to\": \"{{loadingPointsDate2}}\"\n      },\n      \"orderIndexes\": [\n        0\n      ],\n      \"warehouse\": {\n        \"gln\": null,\n        \"id\": \"{{unloadingWarehouseId2}}\",\n        \"foreignId\": null\n      },\n      \"comment\": null,\n      \"units\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 1,\n        \"positionTo\": 5,\n        \"pallets\": 5,\n        \"boxes\": null,\n        \"items\": null,\n        \"weight\": 5,\n        \"cost\": 5,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n      },\n\"unitsFact\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 1,\n    \"positionTo\": 11,\n    \"pallets\": 11,\n    \"boxes\": null,\n    \"items\": null,\n    \"weight\": 3440,\n    \"cost\": 44440,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n  }\n    },\n    {\n      \"dateTime\": {\n        \"from\": \"{{loadingPointsDate1}}\",\n        \"to\": \"{{loadingPointsDate1}}\"\n        \n      },\n      \"orderIndexes\": [\n        1\n      ],\n      \"warehouse\": {\n        \"gln\": null,\n        \"id\": \"{{unloadingWarehouseId1}}\",\n        \"foreignId\": null\n      },\n      \"comment\": null,\n      \"units\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 1,\n        \"positionTo\": 5,\n        \"pallets\": 5,\n        \"boxes\": null,\n        \"items\": null,\n        \"weight\": 5,\n        \"cost\": 5,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n      },\n\"unitsFact\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 1,\n    \"positionTo\": 11,\n    \"pallets\": 11,\n    \"boxes\": 0,\n    \"items\": 0,\n    \"weight\": 3440,\n    \"cost\": 44440,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  },\n    }\n  ],\n  \"servicesNeeded\": [\n    \"Basic\"\n  ],\n  \"temperature\": {\n    \"from\": 0,\n    \"to\": 0\n  },\n  \"financials\": {\n    \"baseCost\": 0,\n    \"poolingPayToCarrier\": true,\n    \"additionalCosts\": [\n      {\n        \"type\": \"Returning\",\n        \"cost\": 0\n      }\n    ]\n  },\n  \"comment\": null,\n  \"unitsAvailable\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 1,\n    \"positionTo\": 1,\n    \"pallets\": 1,\n    \"boxes\": 0,\n    \"items\": 0,\n    \"weight\": 0,\n    \"cost\": 0,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  },\n  \"unitsAvailableMin\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 0,\n    \"positionTo\": 0,\n    \"pallets\": 0,\n    \"boxes\": 0,\n    \"items\": 0,\n    \"weight\": 0,\n    \"cost\": 0,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  }\n}\n\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/reservations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"reservations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Ошибка создания на две точки не соответствие общему списку заказов",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"jsonData = pm.response.json();",
											"let titleError = \"Список заказов в точках выгрузки не соответствует общему списку заказов\";",
											"",
											"pm.test(\"Проверка что статус код 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Проверка на конкретную ошибку\", function () {",
											"    pm.expect(jsonData.error).to.include(titleError);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');",
											"pm.variables.set(\"loadingPointsDate1\", moment().add(2, 'week').format(\"YYYY-MM-DD\"));",
											"pm.variables.set(\"loadingPointsDate2\", moment().add(2, 'day').format(\"YYYY-MM-DD\"));",
											"pm.variables.set(\"unloadingPointsDate1\", moment().add(7, 'day').format(\"YYYY-MM-DD\"));",
											"pm.variables.set(\"unloadingPointsDate2\", moment().add(7, 'day').format(\"YYYY-MM-DD\"));",
											"",
											"const number = pm.collectionVariables.set (\"randomNum\", _.random (10000,100000));",
											"",
											"",
											"pm.variables.set(\"carrierId\", \"5f43a3c47d0521017fe57152\");",
											"pm.variables.set(\"clientId\", \"5b06c5b70c7e6f6764d50d0e\");",
											"pm.variables.set(\"consignorId\", \"5bb49dac6458d524784dd419\");",
											"pm.variables.set(\"loadingWarehouseId1\", \"5bb49eaa6458d524784dd41b\");",
											"pm.variables.set(\"loadingWarehouseId2\", \"60c0de6a092052726555cf6a\");",
											"pm.variables.set(\"unloadingWarehouseId1\", \"5d5e772b756484199479a476\");",
											"pm.variables.set(\"unloadingWarehouseId2\", \"5b23dfcccd1a2640b4de30b7\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{goTestoviyOT}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"foreignId\": null,\n  \"shippingType\": \"FTL\",\n  \"slotId\": \"000000000000000000000000\",\n  \"carrier\": {\n    \"inn\": null,\n    \"id\": \"{{carrierId}}\",\n    \"foreignId\": null\n  },\n  \"client\": {\n    \"inn\": null,\n    \"id\": \"{{clientId}}\",\n    \"foreignId\": null\n  },\n  \"carType\": \"Tent\",\n  \"carCapacityType\": \"t20\",\n  \"productType\": \"alco\",\n  \"units\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 1,\n    \"positionTo\": 20,\n    \"pallets\": 20,\n    \"boxes\": 30,\n    \"items\": 40,\n    \"weight\": 50,\n    \"cost\": 110,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  },\n  \"orders\": [\n    {  \n      \"number\": \"SQ1234{{randomNum}}\",\n      \"waybillNumber\": \"wblN{{randomNum}}\",\n      \"consignorNumber\": null,\n      \"type\": \"None\",\n      \"units\": {\n        \"palletType\": \"Euro\",\n       \"positionFrom\": 1,\n    \"positionTo\": 10,\n    \"pallets\": 10,\n    \"boxes\": 15,\n    \"items\": 20,\n    \"weight\": 25,\n        \"cost\": 55,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      },\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 0,\n        \"positionTo\": 0,\n        \"pallets\": 0,\n        \"boxes\": 0,\n        \"items\": 0,\n        \"weight\": 0,\n        \"cost\": 0,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      },\n      \"productTransportWaybill\": \"TTN01\"\n    , \n    \"number\": \"SW1234{{randomNum}}\",\n      \"waybillNumber\": \"wblN{{randomNum}}\",\n      \"consignorNumber\": null,\n      \"type\": \"None\",\n      \"units\": {\n        \"palletType\": \"Euro\",\n       \"positionFrom\": 1,\n    \"positionTo\": 10,\n    \"pallets\": 10,\n    \"boxes\": 15,\n    \"items\": 20,\n    \"weight\": 25,\n        \"cost\": 55,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      },\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 0,\n        \"positionTo\": 0,\n        \"pallets\": 0,\n        \"boxes\": 0,\n        \"items\": 0,\n        \"weight\": 0,\n        \"cost\": 0,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      },\n      \"productTransportWaybill\": \"TTN01\"\n    }\n  ],\n  \"loadingPoints\": [\n    {\n      \"dateTime\": {\n        \"from\": \"{{loadingPointsDate1}}T15:28:57\",\n        \"to\": \"{{loadingPointsDate1}}T15:28:57\"\n      },\n      \"orderIndexes\": [\n        0\n      ],\n      \"warehouse\": {\n        \"gln\": null,\n        \"id\": \"{{loadingWarehouseId1}}\",\n        \"foreignId\": null\n      },\n      \"address\": null,\n      \"comment\": \"{{$randomLoremWords}}\",\n      \"units\": {\n        \"palletType\": \"Euro\",\n     \"positionFrom\": 1,\n    \"positionTo\": 10,\n    \"pallets\": 10,\n    \"boxes\": 15,\n    \"items\": 20,\n    \"weight\": 25,\n        \"cost\": 55,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      },\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 1,\n        \"positionTo\": 11,\n        \"pallets\": 11,\n        \"boxes\": 0,\n        \"items\": 0,\n        \"weight\": 0,\n        \"cost\": 0,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      }\n    }\n  ],\n  \"unloadingPoints\": [\n    {\n      \"dateTime\": {\n        \"from\": \"{{unloadingPointsDate1}}T15:28:57\",\n        \"to\": \"{{unloadingPointsDate1}}T15:28:57\"\n      },\n      \"orderIndexes\": [\n        0\n      ],\n      \"warehouse\": {\n        \"gln\": null,\n        \"id\": \"{{unloadingWarehouseId1}}\",\n        \"foreignId\": null\n      },\n      \"address\":null,\n      \"comment\": null,\n      \"units\": {\n        \"palletType\": \"Euro\",\n         \"positionFrom\": 1,\n    \"positionTo\": 20,\n    \"pallets\": 20,\n    \"boxes\": 30,\n    \"items\": 40,\n    \"weight\": 50,\n        \"cost\": 110,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      },\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 0,\n        \"positionTo\": 0,\n        \"pallets\": 0,\n        \"boxes\": 0,\n        \"items\": 0,\n        \"weight\": 0,\n        \"cost\": 0,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      }\n    }, \n    {\n      \"dateTime\": {\n        \"from\": \"{{unloadingPointsDate2}}T15:28:57\",\n        \"to\": \"{{unloadingPointsDate2}}T15:28:57\"\n      },\n      \"orderIndexes\": [\n        1\n      ],\n      \"warehouse\": {\n        \"gln\": null,\n        \"id\": \"{{unloadingWarehouseId2}}\",\n        \"foreignId\": null\n      },\n      \"address\":null,\n      \"comment\": null,\n      \"units\": {\n        \"palletType\": \"Euro\",\n         \"positionFrom\": 1,\n    \"positionTo\": 20,\n    \"pallets\": 20,\n    \"boxes\": 30,\n    \"items\": 40,\n    \"weight\": 50,\n        \"cost\": 110,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      },\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 0,\n        \"positionTo\": 0,\n        \"pallets\": 0,\n        \"boxes\": 0,\n        \"items\": 0,\n        \"weight\": 0,\n        \"cost\": 0,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      }\n    }\n  ],\n  \"servicesNeeded\": [\n    \"Basic\"\n  ],\n  \"temperature\": {\n    \"from\": 5,\n    \"to\": 25\n  },\n  \"financials\": {\n    \"baseCost\": 995.87,\n    \"poolingPayToCarrier\": true,\n    \"additionalCosts\": [\n      {\n        \"type\": \"Returning\",\n        \"cost\": 0\n      }\n    ]\n  },\n  \"comment\": \"{{$randomAlphaNumeric}}\",\n  \"unitsAvailable\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 0,\n    \"positionTo\": 0,\n    \"pallets\": 0,\n    \"boxes\": 0,\n    \"items\": 0,\n    \"weight\": 0,\n    \"cost\": 0,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  },\n  \"unitsAvailableMin\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 0,\n    \"positionTo\": 0,\n    \"pallets\": 0,\n    \"boxes\": 0,\n    \"items\": 0,\n    \"weight\": 0,\n    \"cost\": 0,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  },\n  \"unitsFact\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 0,\n    \"positionTo\": 0,\n    \"pallets\": 0,\n    \"boxes\": 0,\n    \"items\": 0,\n    \"weight\": 0,\n    \"cost\": 0,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/reservations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"reservations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Создание бронирования FTL на склад компании/куда",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"jsonData = pm.response.json();",
											"",
											"pm.test(\"Проверка, что код ответа 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Проверка, что статус бронирования OnConfirmation\", function () { ",
											"    pm.expect(jsonData.status).to.eql(\"OnConfirmation\");",
											"});",
											"",
											"pm.test(\"Проверка, что бронирование ФТЛ не на слот\", function () { ",
											"    pm.expect(jsonData.slotId).to.eql(null);",
											"    pm.expect(jsonData.shippingType).to.eql(\"FTL\");",
											"});",
											"",
											"pm.test(\"Проверка, что бронирование новое\", function () {  ",
											"    pm.expect(jsonData.number).to.be.a('string').and.match(/[0-9]/);",
											"    pm.expect(jsonData.number).to.have.lengthOf(6); ",
											"    //pm.expect(jsonData.number).to.be.sealed;",
											"    pm.expect(jsonData.version).to.eql(1);",
											"});",
											"",
											"pm.test(\"Проверка на конкретные ТК, ТС\", function () {",
											"   pm.expect(jsonData.carrier.id).to.equal(pm.variables.get(\"carrierId\"));",
											"});",
											"",
											"pm.test(\"Проверка, что нет признака догруза\", function () {",
											"pm.expect(jsonData.servicesNeeded[0]).to.eql(\"Basic\");",
											"});",
											"",
											"pm.test(\"Проверка, что статус точки у новой заявки Scheduled\", function () {",
											"pm.expect(jsonData.loadingPoints[0].status).to.eql(\"Scheduled\");",
											"pm.expect(jsonData.unloadingPoints[0].status).to.eql(\"Scheduled\");",
											"});   ",
											"   ",
											"pm.test(\"Проверка, что нет признака догруза\", function () {",
											"pm.expect(jsonData.servicesNeeded[0]).to.eql(\"Basic\");",
											"});",
											"",
											"pm.test(\"Проверка, что склад загрузки принадлежит другой компании\", function () { ",
											"    pm.expect(jsonData.unloadingPoints[0].warehouse.id).to.eql(\"5bb49eaa6458d524784dd41b\");",
											"})",
											"",
											"pm.test(\"Проверка, что предзапрос прошел успешно\", function () {",
											"     pm.expect(pm.variables.get(\"resJson\")).to.be.not.empty;",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');",
											"pm.variables.set(\"loadingPointsDate\", moment().add(1, 'day').format(\"YYYY-MM-DD\"));",
											"pm.variables.set(\"unloadingPointsDate\", moment().add(2, 'day').format(\"YYYY-MM-DD\"));",
											"",
											"const number = pm.collectionVariables.set (\"randomNum\", _.random (10000,100000));",
											"",
											"",
											"const unloadingWarehouse = \"ООО \\\"БАКАРДИ РУС\\\" Истра\";",
											"const loadingWarehouse = \"Коледино\";",
											"pm.variables.set(\"carrierId\", \"5f43a3c47d0521017fe57152\");",
											"pm.variables.set(\"clientId\", \"5b06c5b70c7e6f6764d50d0e\");",
											"pm.variables.set(\"consignorId\", \"5bb49dac6458d524784dd419\");",
											"",
											"pm.sendRequest({",
											"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/warehouses\",",
											"    method: \"GET\",",
											"    header: {",
											"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goTestoviyOT\"),",
											"    },",
											"},",
											"    function (err, res) {",
											"        console.log(res.json());",
											"        loadingWarehouseNode = res.json().find(x => x.name === loadingWarehouse);",
											"        pm.variables.set(\"loadingWarehouseId\", loadingWarehouseNode.id);",
											"        unloadingWarehouseNode = res.json().find(x => x.name === unloadingWarehouse);",
											"        pm.variables.set(\"unloadingWarehouseId\", unloadingWarehouseNode.id);",
											"        pm.variables.set(\"resJson\", res.json());",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{goTestoviyOT}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"foreignId\":  null,\n  \"shippingType\": \"FTL\",\n  \"slotId\": \"000000000000000000000000\",\n  \"carrier\": {\n    \"inn\": null,\n    \"id\": \"{{carrierId}}\",\n    \"foreignId\": null\n  },\n  \"client\": {\n    \"inn\": null,\n    \"id\": \"{{clientId}}\",\n    \"foreignId\": null\n  },\n  \"carType\": \"Tent\",\n  \"carCapacityType\": \"t20\",\n  \"productType\": \"alco\",\n  \"units\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 1,\n    \"positionTo\": 20,\n    \"pallets\": 20,\n    \"boxes\": 30,\n    \"items\": 40,\n    \"weight\": 50,\n    \"cost\": 110,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n  },\n  \"orders\": [\n    {\n      \"number\": \"SS1234{{randomNum}}\",\n      \"waybillNumber\": \"wblN{{randomNum}}\",\n      \"consignorNumber\": null,\n      \"type\": \"None\",\n      \"units\": {\n        \"palletType\": \"Euro\",\n       \"positionFrom\": 1,\n    \"positionTo\": 20,\n    \"pallets\": 20,\n    \"boxes\": 30,\n    \"items\": 40,\n    \"weight\": 50,\n        \"cost\": 110,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n      },\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 0,\n        \"positionTo\": 0,\n        \"pallets\": 0,\n        \"boxes\": 0,\n        \"items\": 0,\n        \"weight\": 0,\n        \"cost\": 0,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      },\n      \"productTransportWaybill\": \"TTN\"\n    }\n  ],\n  \"loadingPoints\": [\n    {\n      \"dateTime\": {\n        \"from\": \"{{loadingPointsDate}}T15:28:57\",\n        \"to\": \"{{loadingPointsDate}}T15:28:57\"\n      },\n      \"orderIndexes\": [\n        0\n      ],\n      \"warehouse\": {\n        \"gln\": null,\n        \"id\": \"{{loadingWarehouseId}}\",\n        \"foreignId\": null\n      },\n     \"address\": null,\n      \"comment\": \"{{$randomLoremWords}}\",\n      \"units\": {\n        \"palletType\": \"Euro\",\n     \"positionFrom\": 1,\n    \"positionTo\": 20,\n    \"pallets\": 20,\n    \"boxes\": 30,\n    \"items\": 40,\n    \"weight\": 50,\n        \"cost\": 110,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n      },\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 1,\n        \"positionTo\": 11,\n        \"pallets\": 11,\n        \"boxes\": 0,\n        \"items\": 0,\n        \"weight\": 0,\n        \"cost\": 0,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      }\n    }\n  ],\n  \"unloadingPoints\": [\n    {\n      \"dateTime\": {\n        \"from\": \"{{unloadingPointsDate}}T15:28:57\",\n        \"to\": \"{{unloadingPointsDate}}T15:28:57\"\n      },\n      \"orderIndexes\": [\n        0\n      ],\n      \"warehouse\": {\n        \"gln\": null,\n        \"id\": \"{{unloadingWarehouseId}}\",\n        \"foreignId\": null\n      },\n      \"address\":null,\n      \"comment\": \"6789\",\n      \"units\": {\n        \"palletType\": \"Euro\",\n         \"positionFrom\": 1,\n    \"positionTo\": 20,\n    \"pallets\": 20,\n    \"boxes\": 30,\n    \"items\": 40,\n    \"weight\": 50,\n        \"cost\": 110,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n      },\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 0,\n        \"positionTo\": 0,\n        \"pallets\": 0,\n        \"boxes\": 0,\n        \"items\": 0,\n        \"weight\": 0,\n        \"cost\": 0,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      }\n    }\n  ],\n  \"servicesNeeded\": [\n    \"Basic\"\n  ],\n  \"temperature\": {\n    \"from\": 5,\n    \"to\": 25\n  },\n  \"financials\": {\n    \"baseCost\": 9999.87,\n    \"poolingPayToCarrier\": true,\n    \"additionalCosts\": [\n      {\n        \"type\": \"Returning\",\n        \"cost\": 0\n      }\n    ]\n  },\n  \"comment\": \"{{$randomAlphaNumeric}}\",\n  \"unitsAvailable\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 0,\n    \"positionTo\": 0,\n    \"pallets\": 0,\n    \"boxes\": 0,\n    \"items\": 0,\n    \"weight\": 0,\n    \"cost\": 0,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  },\n  \"unitsAvailableMin\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 0,\n    \"positionTo\": 0,\n    \"pallets\": 0,\n    \"boxes\": 0,\n    \"items\": 0,\n    \"weight\": 0,\n    \"cost\": 0,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  },\n  \"unitsFact\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 0,\n    \"positionTo\": 0,\n    \"pallets\": 0,\n    \"boxes\": 0,\n    \"items\": 0,\n    \"weight\": 0,\n    \"cost\": 0,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/reservations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"reservations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Создание бронирования FTL с разрешением на догруз",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"jsonData = pm.response.json();",
											"",
											"pm.test(\"Проверка, что код ответа 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Проверка, что статус бронирования OnConfirmation\", function () { ",
											"    pm.expect(jsonData.status).to.eql(\"OnConfirmation\");",
											"});",
											"",
											"pm.test(\"Проверка, что бронирование ФТЛ на слот\", function () { ",
											"    pm.expect(jsonData.slotId).not.to.eql(null);",
											"    pm.expect(jsonData.shippingType).to.eql(\"FTL\");",
											"});",
											"",
											"pm.test(\"Проверка, что бронирование новое\", function () {  ",
											"    pm.expect(jsonData.number).to.be.a('string').and.match(/[0-9]/);",
											"    pm.expect(jsonData.number).to.have.lengthOf(6); ",
											"    //pm.expect(jsonData.number).to.be.sealed;",
											"    pm.expect(jsonData.version).to.eql(1);",
											"});",
											"",
											"pm.test(\"Проверка на конкретные ТК, ТС\", function () {",
											"   pm.expect(jsonData.carrier.id).to.equal(pm.variables.get(\"carrierId\"));",
											"});",
											"",
											"//можно добавить проверку на тип паллет, что паллеты из списка возможных для ТК",
											"",
											"pm.test(\"Проверка, что требуется признак догруза\", function () {",
											"pm.expect(jsonData.servicesNeeded[0]).to.eql(\"WithSupplement\");",
											"});",
											"",
											"pm.test(\"Проверка, что статус точки у новой заявки Scheduled\", function () {",
											"pm.expect(jsonData.loadingPoints[0].status).to.eql(\"Scheduled\");",
											"pm.expect(jsonData.unloadingPoints[0].status).to.eql(\"Scheduled\");",
											"});  ",
											"",
											"console.log(jsonData.servicesNeeded[0]);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');",
											"pm.variables.set(\"loadingPointsDate\", moment().add(1, 'week').format(\"YYYY-MM-DD\"));",
											"pm.variables.set(\"unloadingPointsDate\", moment().add(2, 'week').format(\"YYYY-MM-DD\"));",
											"",
											"const number = pm.collectionVariables.set (\"randomNum\", _.random (10000,100000));",
											"",
											"pm.variables.set(\"carrierId\", \"5f43a3c47d0521017fe57152\");",
											"pm.variables.set(\"clientId\", \"5b06c5b70c7e6f6764d50d0e\");",
											"pm.variables.set(\"consignorId\", \"5bb49dac6458d524784dd419\");",
											"pm.variables.set(\"loadingWarehouseId\", \"5bb49eaa6458d524784dd41b\");",
											"pm.variables.set(\"unloadingWarehouseId\", \"5d5e772b756484199479a476\");",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{goTestoviyOT}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"foreignId\": null,\n  \"shippingType\": \"FTL\",\n  \"slotId\": \"000000000000000000000000\",\n  \"carrier\": {\n    \"inn\": null,\n    \"id\": \"{{carrierId}}\",\n    \"foreignId\": null\n  },\n  \"client\": {\n    \"inn\": null,\n    \"id\": \"{{clientId}}\",\n    \"foreignId\": null\n  },\n  \"carType\": \"Tent\",\n  \"carCapacityType\": \"t20\",\n  \"productType\": \"alco\",\n  \"units\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 1,\n    \"positionTo\": 20,\n    \"pallets\": 20,\n    \"boxes\": 30,\n    \"items\": 40,\n    \"weight\": 50,\n    \"cost\": 110,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n  },\n  \"orders\": [\n    {\n      \"number\": \"SS1234{{randomNum}}\",\n      \"waybillNumber\": \"wblN{{randomNum}}\",\n      \"consignorNumber\": null,\n      \"type\": \"None\",\n      \"units\": {\n        \"palletType\": \"Euro\",\n       \"positionFrom\": 1,\n    \"positionTo\": 20,\n    \"pallets\": 20,\n    \"boxes\": 30,\n    \"items\": 40,\n    \"weight\": 50,\n        \"cost\": 110,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n      },\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 0,\n        \"positionTo\": 0,\n        \"pallets\": 0,\n        \"boxes\": 0,\n        \"items\": 0,\n        \"weight\": 0,\n        \"cost\": 0,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      },\n      \"productTransportWaybill\": \"TTN\"\n    }\n  ],\n  \"loadingPoints\": [\n    {\n      \"dateTime\": {\n        \"from\": \"{{loadingPointsDate}}T15:28:57\",\n        \"to\": \"{{loadingPointsDate}}T15:28:57\"\n      },\n      \"orderIndexes\": [\n        \"0\"\n      ],\n      \"warehouse\": {\n        \"gln\": null,\n        \"id\": \"{{loadingWarehouseId}}\",\n        \"foreignId\": null\n      },\n      \"address\": null,\n      \"comment\": \"{{$randomLoremWords}}\",\n      \"units\": {\n        \"palletType\": \"Euro\",\n     \"positionFrom\": 1,\n    \"positionTo\": 20,\n    \"pallets\": 20,\n    \"boxes\": 30,\n    \"items\": 40,\n    \"weight\": 50,\n        \"cost\": 110,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n      },\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 1,\n        \"positionTo\": 11,\n        \"pallets\": 11,\n        \"boxes\": 0,\n        \"items\": 0,\n        \"weight\": 0,\n        \"cost\": 0,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      }\n    }\n  ],\n  \"unloadingPoints\": [\n    {\n      \"dateTime\": {\n        \"from\": \"{{unloadingPointsDate}}T15:28:57\",\n        \"to\": \"{{unloadingPointsDate}}T15:28:57\"\n      },\n      \"orderIndexes\": [\n        0\n      ],\n      \"warehouse\": {\n        \"gln\": null,\n        \"id\": \"{{unloadingWarehouseId}}\",\n        \"foreignId\": null\n      },\n      \"address\":null,\n      \"comment\": null,\n      \"units\": {\n        \"palletType\": \"Euro\",\n         \"positionFrom\": 1,\n    \"positionTo\": 20,\n    \"pallets\": 20,\n    \"boxes\": 30,\n    \"items\": 40,\n    \"weight\": 50,\n        \"cost\": 110,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n      },\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 0,\n        \"positionTo\": 0,\n        \"pallets\": 0,\n        \"boxes\": 0,\n        \"items\": 0,\n        \"weight\": 0,\n        \"cost\": 0,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      }\n    }\n  ],\n  \"servicesNeeded\": [\n    \"WithSupplement\"\n  ],\n  \"temperature\": {\n    \"from\": 5,\n    \"to\": 25\n  },\n  \"financials\": {\n    \"baseCost\": 9999.87,\n    \"poolingPayToCarrier\": true,\n    \"additionalCosts\": [\n      {\n        \"type\": \"Returning\",\n        \"cost\": 12345\n      }\n    ]\n  },\n  \"comment\": \"{{$randomAlphaNumeric}}\",\n  \"unitsAvailable\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 0,\n    \"positionTo\": 0,\n    \"pallets\": 0,\n    \"boxes\": 0,\n    \"items\": 0,\n    \"weight\": 0,\n    \"cost\": 0,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  },\n  \"unitsAvailableMin\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 0,\n    \"positionTo\": 0,\n    \"pallets\": 0,\n    \"boxes\": 0,\n    \"items\": 0,\n    \"weight\": 0,\n    \"cost\": 0,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  },\n  \"unitsFact\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 0,\n    \"positionTo\": 0,\n    \"pallets\": 0,\n    \"boxes\": 0,\n    \"items\": 0,\n    \"weight\": 0,\n    \"cost\": 0,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/reservations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"reservations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Создание бронирования FTL на 33 паллеты, признак догруза слетит",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"jsonData = pm.response.json();",
											"",
											"pm.test(\"Проверка, что код ответа 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Проверка, что статус бронирования OnConfirmation\", function () { ",
											"    pm.expect(jsonData.status).to.eql(\"OnConfirmation\");",
											"});",
											"",
											"pm.test(\"Проверка, что бронирование ФТЛ не на слот\", function () { ",
											"    pm.expect(jsonData.slotId).to.eql(null);",
											"    pm.expect(jsonData.shippingType).to.eql(\"FTL\");",
											"});",
											"",
											"pm.test(\"Проверка, что бронирование новое\", function () {  ",
											"    pm.expect(jsonData.number).to.be.a('string').and.match(/[0-9]/);",
											"    pm.expect(jsonData.number).to.have.lengthOf(6); ",
											"    //pm.expect(jsonData.number).to.be.sealed;",
											"    pm.expect(jsonData.version).to.eql(1);",
											"});",
											"",
											"pm.test(\"Проверка на конкретные ТК, ТС\", function () {",
											"   pm.expect(jsonData.carrier.id).to.equal(pm.variables.get(\"carrierId\"));",
											"});",
											"",
											"//можно добавить проверку на тип паллет, что паллеты из списка возможных для ТК",
											"",
											"pm.test(\"Проверка, что нет признака догруза\", function () {",
											"pm.expect(jsonData.servicesNeeded[0]).to.eql(\"Basic\");",
											"});",
											"",
											"pm.test(\"Проверка, что статус точки у новой заявки Scheduled\", function () {",
											"pm.expect(jsonData.loadingPoints[0].status).to.eql(\"Scheduled\");",
											"pm.expect(jsonData.unloadingPoints[0].status).to.eql(\"Scheduled\");",
											"});  ",
											" "
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');",
											"pm.variables.set(\"loadingPointsDate\", moment().add(1, 'week').format(\"YYYY-MM-DD\"));",
											"pm.variables.set(\"unloadingPointsDate\", moment().add(2, 'week').format(\"YYYY-MM-DD\"));",
											"",
											"const number = pm.collectionVariables.set (\"randomNum\", _.random (10000,100000));",
											"",
											"pm.variables.set(\"carrierId\", \"5f43a3c47d0521017fe57152\");",
											"pm.variables.set(\"clientId\", \"5b06c5b70c7e6f6764d50d0e\");",
											"pm.variables.set(\"consignorId\", \"5bb49dac6458d524784dd419\");",
											"pm.variables.set(\"loadingWarehouseId\", \"5bb49eaa6458d524784dd41b\");",
											"pm.variables.set(\"unloadingWarehouseId\", \"5d5e772b756484199479a476\");",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{goTestoviyOT}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"foreignId\": null,\n  \"shippingType\": \"FTL\",\n  \"slotId\": \"000000000000000000000000\",\n  \"carrier\": {\n    \"inn\": null,\n    \"id\": \"{{carrierId}}\",\n    \"foreignId\": null\n  },\n  \"client\": {\n    \"inn\": null,\n    \"id\": \"{{clientId}}\",\n    \"foreignId\": null\n  },\n  \"carType\": \"Tent\",\n  \"carCapacityType\": \"t20\",\n  \"productType\": \"alco\",\n  \"units\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 1,\n    \"positionTo\": 33,\n    \"pallets\": 33,\n    \"boxes\": 30,\n    \"items\": 40,\n    \"weight\": 50,\n    \"cost\": 110,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n  },\n  \"orders\": [\n    {\n      \"number\": \"SS1234{{randomNum}}\",\n      \"waybillNumber\": \"wblN{{randomNum}}\",\n      \"consignorNumber\": null,\n      \"type\": \"None\",\n      \"units\": {\n        \"palletType\": \"Euro\",\n       \"positionFrom\": 1,\n    \"positionTo\": 33,\n    \"pallets\": 33,\n    \"boxes\": 30,\n    \"items\": 40,\n    \"weight\": 50,\n        \"cost\": 110,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n      },\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 0,\n        \"positionTo\": 0,\n        \"pallets\": 0,\n        \"boxes\": 0,\n        \"items\": 0,\n        \"weight\": 0,\n        \"cost\": 0,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      },\n      \"productTransportWaybill\": \"TTN\"\n    }\n  ],\n  \"loadingPoints\": [\n    {\n      \"dateTime\": {\n        \"from\": \"{{loadingPointsDate}}T15:28:57\",\n        \"to\": \"{{loadingPointsDate}}T15:28:57\"\n      },\n      \"orderIndexes\": [\n        0\n      ],\n      \"warehouse\": {\n        \"gln\": null,\n        \"id\": \"{{loadingWarehouseId}}\",\n        \"foreignId\": null\n      },\n      \"address\": null,\n      \"comment\": \"{{$randomLoremWords}}\",\n      \"units\": {\n        \"palletType\": \"Euro\",\n     \"positionFrom\": 1,\n    \"positionTo\": 33,\n    \"pallets\": 33,\n    \"boxes\": 30,\n    \"items\": 40,\n    \"weight\": 50,\n        \"cost\": 110,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n      },\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 1,\n        \"positionTo\": 11,\n        \"pallets\": 11,\n        \"boxes\": 0,\n        \"items\": 0,\n        \"weight\": 0,\n        \"cost\": 0,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      }\n    }\n  ],\n  \"unloadingPoints\": [\n    {\n      \"dateTime\": {\n        \"from\": \"{{unloadingPointsDate}}T15:28:57\",\n        \"to\": \"{{unloadingPointsDate}}T15:28:57\"\n      },\n      \"orderIndexes\": [\n        0\n      ],\n      \"warehouse\": {\n        \"gln\": null,\n        \"id\": \"{{unloadingWarehouseId}}\",\n        \"foreignId\": null\n      },\n      \"address\":null,\n      \"comment\": null,\n      \"units\": {\n        \"palletType\": \"Euro\",\n         \"positionFrom\": 1,\n    \"positionTo\": 33,\n    \"pallets\": 33,\n    \"boxes\": 30,\n    \"items\": 40,\n    \"weight\": 50,\n        \"cost\": 110,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n      },\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 0,\n        \"positionTo\": 0,\n        \"pallets\": 0,\n        \"boxes\": 0,\n        \"items\": 0,\n        \"weight\": 0,\n        \"cost\": 0,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      }\n    }\n  ],\n  \"servicesNeeded\": [\n    \"Basic\"\n  ],\n  \"temperature\": {\n    \"from\": 5,\n    \"to\": 25\n  },\n  \"financials\": {\n    \"baseCost\": 9999.87,\n    \"poolingPayToCarrier\": true,\n    \"additionalCosts\": [\n      {\n        \"type\": \"Returning\",\n        \"cost\": 0\n      }\n    ]\n  },\n  \"comment\": \"{{$randomAlphaNumeric}}\",\n  \"unitsAvailable\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 0,\n    \"positionTo\": 0,\n    \"pallets\": 0,\n    \"boxes\": 0,\n    \"items\": 0,\n    \"weight\": 0,\n    \"cost\": 0,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  },\n  \"unitsAvailableMin\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 0,\n    \"positionTo\": 0,\n    \"pallets\": 0,\n    \"boxes\": 0,\n    \"items\": 0,\n    \"weight\": 0,\n    \"cost\": 0,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  },\n  \"unitsFact\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 0,\n    \"positionTo\": 0,\n    \"pallets\": 0,\n    \"boxes\": 0,\n    \"items\": 0,\n    \"weight\": 0,\n    \"cost\": 0,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/reservations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"reservations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Ошибка создание бронирования FTL на 33 паллеты с признаком догруза",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"jsonData = pm.response.json();",
											"let titleError = \"В машине не хватает свободного места для догруза\";",
											"",
											"pm.test(\"Проверка что статус код 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Проверка на конкретную ошибку\", function () {",
											"    pm.expect(jsonData.error).to.include(titleError);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');",
											"pm.variables.set(\"loadingPointsDate\", moment().add(1, 'week').format(\"YYYY-MM-DD\"));",
											"pm.variables.set(\"unloadingPointsDate\", moment().add(2, 'week').format(\"YYYY-MM-DD\"));",
											"",
											"const number = pm.collectionVariables.set (\"randomNum\", _.random (10000,100000));",
											"",
											"pm.variables.set(\"carrierId\", \"5f43a3c47d0521017fe57152\");",
											"pm.variables.set(\"clientId\", \"5b06c5b70c7e6f6764d50d0e\");",
											"pm.variables.set(\"consignorId\", \"5bb49dac6458d524784dd419\");",
											"pm.variables.set(\"loadingWarehouseId\", \"5bb49eaa6458d524784dd41b\");",
											"pm.variables.set(\"unloadingWarehouseId\", \"5d5e772b756484199479a476\");",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{goTestoviyOT}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"foreignId\": null,\n  \"shippingType\": \"FTL\",\n  \"slotId\": \"000000000000000000000000\",\n  \"carrier\": {\n    \"inn\": null,\n    \"id\": \"{{carrierId}}\",\n    \"foreignId\": null\n  },\n  \"client\": {\n    \"inn\": null,\n    \"id\": \"{{clientId}}\",\n    \"foreignId\": null\n  },\n  \"carType\": \"Tent\",\n  \"carCapacityType\": \"t20\",\n  \"productType\": \"alco\",\n  \"units\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 1,\n    \"positionTo\": 33,\n    \"pallets\": 33,\n    \"boxes\": 30,\n    \"items\": 40,\n    \"weight\": 50,\n    \"cost\": 110,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n  },\n  \"orders\": [\n    {\n      \"number\": \"SS1234{{randomNum}}\",\n      \"waybillNumber\": \"wblN{{randomNum}}\",\n      \"consignorNumber\": null,\n      \"type\": \"None\",\n      \"units\": {\n        \"palletType\": \"Euro\",\n       \"positionFrom\": 1,\n    \"positionTo\": 33,\n    \"pallets\": 33,\n    \"boxes\": 30,\n    \"items\": 40,\n    \"weight\": 50,\n        \"cost\": 110,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n      },\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 0,\n        \"positionTo\": 0,\n        \"pallets\": 0,\n        \"boxes\": 0,\n        \"items\": 0,\n        \"weight\": 0,\n        \"cost\": 0,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      },\n      \"productTransportWaybill\": \"TTN\"\n    }\n  ],\n  \"loadingPoints\": [\n    {\n      \"dateTime\": {\n        \"from\": \"{{loadingPointsDate}}T15:28:57\",\n        \"to\": \"{{loadingPointsDate}}T15:28:57\"\n      },\n      \"orderIndexes\": [\n        0\n      ],\n      \"warehouse\": {\n        \"gln\": null,\n        \"id\": \"{{loadingWarehouseId}}\",\n        \"foreignId\": null\n      },\n      \"address\": null,\n      \"comment\": \"{{$randomLoremWords}}\",\n      \"units\": {\n        \"palletType\": \"Euro\",\n     \"positionFrom\": 1,\n    \"positionTo\": 33,\n    \"pallets\": 33,\n    \"boxes\": 30,\n    \"items\": 40,\n    \"weight\": 50,\n        \"cost\": 110,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n      },\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 1,\n        \"positionTo\": 11,\n        \"pallets\": 11,\n        \"boxes\": 0,\n        \"items\": 0,\n        \"weight\": 0,\n        \"cost\": 0,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      }\n    }\n  ],\n  \"unloadingPoints\": [\n    {\n      \"dateTime\": {\n        \"from\": \"{{unloadingPointsDate}}T15:28:57\",\n        \"to\": \"{{unloadingPointsDate}}T15:28:57\"\n      },\n      \"orderIndexes\": [\n        0\n      ],\n      \"warehouse\": {\n        \"gln\": null,\n        \"id\": \"{{unloadingWarehouseId}}\",\n        \"foreignId\": null\n      },\n      \"address\":null,\n      \"comment\": null,\n      \"units\": {\n        \"palletType\": \"Euro\",\n         \"positionFrom\": 1,\n    \"positionTo\": 33,\n    \"pallets\": 33,\n    \"boxes\": 30,\n    \"items\": 40,\n    \"weight\": 50,\n        \"cost\": 110,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n      },\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 0,\n        \"positionTo\": 0,\n        \"pallets\": 0,\n        \"boxes\": 0,\n        \"items\": 0,\n        \"weight\": 0,\n        \"cost\": 0,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      }\n    }\n  ],\n  \"servicesNeeded\": [\n    \"WithSupplement\"\n  ],\n  \"temperature\": {\n    \"from\": 5,\n    \"to\": 25\n  },\n  \"financials\": {\n    \"baseCost\": 9999.87,\n    \"poolingPayToCarrier\": true,\n    \"additionalCosts\": [\n      {\n        \"type\": \"Returning\",\n        \"cost\": 12345\n      }\n    ]\n  },\n  \"comment\": \"{{$randomAlphaNumeric}}\",\n  \"unitsAvailable\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 0,\n    \"positionTo\": 0,\n    \"pallets\": 0,\n    \"boxes\": 0,\n    \"items\": 0,\n    \"weight\": 0,\n    \"cost\": 0,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  },\n  \"unitsAvailableMin\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 0,\n    \"positionTo\": 0,\n    \"pallets\": 0,\n    \"boxes\": 0,\n    \"items\": 0,\n    \"weight\": 0,\n    \"cost\": 0,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  },\n  \"unitsFact\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 0,\n    \"positionTo\": 0,\n    \"pallets\": 0,\n    \"boxes\": 0,\n    \"items\": 0,\n    \"weight\": 0,\n    \"cost\": 0,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/reservations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"reservations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Создание бронирования FTL на 66 паллет с фичей компании",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"jsonData = pm.response.json();",
											"",
											"pm.test(\"Проверка, что код ответа 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Проверка, что статус бронирования OnConfirmation\", function () { ",
											"    pm.expect(jsonData.status).to.eql(\"OnConfirmation\");",
											"});",
											"",
											"pm.test(\"Проверка, что бронирование ФТЛ не на слот\", function () { ",
											"    pm.expect(jsonData.slotId).to.eql(null);",
											"    pm.expect(jsonData.shippingType).to.eql(\"FTL\");",
											"});",
											"",
											"pm.test(\"Проверка, что бронирование новое\", function () {  ",
											"    pm.expect(jsonData.number).to.be.a('string').and.match(/[0-9]/);",
											"    pm.expect(jsonData.number).to.have.lengthOf(6); ",
											"    //pm.expect(jsonData.number).to.be.sealed;",
											"    pm.expect(jsonData.version).to.eql(1);",
											"});",
											"",
											"pm.test(\"Проверка на конкретные ТК, ТС\", function () {",
											"   pm.expect(jsonData.carrier.id).to.equal(pm.variables.get(\"carrierId\"));",
											"});",
											"",
											"//можно добавить проверку на тип паллет, что паллеты из списка возможных для ТК",
											"",
											"pm.test(\"Проверка, что нет признака догруза\", function () {",
											"pm.expect(jsonData.servicesNeeded).to.be.empty;",
											"});",
											"",
											"pm.test(\"Проверка, что статус точки у новой заявки Scheduled\", function () {",
											"pm.expect(jsonData.loadingPoints[0].status).to.eql(\"Scheduled\");",
											"pm.expect(jsonData.unloadingPoints[0].status).to.eql(\"Scheduled\");",
											"});  ",
											"   "
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');",
											"pm.variables.set(\"loadingPointsDate\", moment().add(1, 'week').format(\"YYYY-MM-DD\"));",
											"pm.variables.set(\"unloadingPointsDate\", moment().add(2, 'week').format(\"YYYY-MM-DD\"));",
											"",
											"const number = pm.collectionVariables.set (\"randomNum\", _.random (10000,100000));",
											"",
											"pm.variables.set(\"carrierId\", \"5f43a3c47d0521017fe57152\");",
											"pm.variables.set(\"clientId\", \"5b06c5b70c7e6f6764d50d0e\");",
											"pm.variables.set(\"consignorId\", \"5bb49dac6458d524784dd419\");",
											"pm.variables.set(\"loadingWarehouseId\", \"5bb49eaa6458d524784dd41b\");",
											"pm.variables.set(\"unloadingWarehouseId\", \"5d5e772b756484199479a476\");",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{goTestoviyOT}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"foreignId\": \"string\",\n  \"shippingType\": \"FTL\",\n  \"slotId\": \"000000000000000000000000\",\n  \"carrier\": {\n    \"inn\": \"string\",\n    \"id\": \"{{carrierId}}\",\n    \"foreignId\": \"string\"\n  },\n  \"client\": {\n    \"inn\": \"string\",\n    \"id\": \"{{clientId}}\",\n    \"foreignId\": \"string\"\n  },\n  \"carType\": \"Tent\",\n  \"carCapacityType\": \"t20\",\n  \"productType\": \"food\",\n  \"units\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 1,\n    \"positionTo\": 66,\n    \"pallets\": 66,\n    \"boxes\": 300,\n    \"items\": null,\n    \"weight\": 500,\n    \"cost\": 1100,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n  },\n  \"orders\": [\n    {\n      \"number\": \"SS1234{{randomNum}}\",\n      \"waybillNumber\": \"string\",\n      \"consignorNumber\": \"string\",\n      \"type\": \"None\",\n      \"units\": {\n        \"palletType\": \"Euro\",\n      \"positionFrom\": 1,\n    \"positionTo\": 66,\n    \"pallets\": 66,\n    \"boxes\": 300,\n    \"items\": null,\n    \"weight\": 500,\n    \"cost\": 1100,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n      },\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 0,\n        \"positionTo\": 0,\n        \"pallets\": 0,\n        \"boxes\": 0,\n        \"items\": 0,\n        \"weight\": 0,\n        \"cost\": 0,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      },\n      \"productTransportWaybill\": \"TTN\"\n    }\n  ],\n  \"loadingPoints\": [\n    {\n      \"dateTime\": {\n        \"from\": \"{{loadingPointsDate}}T15:28:57\",\n        \"to\": \"{{loadingPointsDate}}T15:28:57\"\n      },\n      \"orderIndexes\": [\n        0\n      ],\n      \"warehouse\": {\n        \"gln\": \"string\",\n        \"id\": \"{{unloadingWarehouseId}}\",\n        \"foreignId\": \"string\"\n      },\n      \"address\": null,\n      \"comment\": \"{{$randomLoremWords}}\",\n      \"units\": {\n        \"palletType\": \"Euro\",\n\"positionFrom\": 1,\n    \"positionTo\": 66,\n    \"pallets\": 66,\n    \"boxes\": 300,\n    \"items\": null,\n    \"weight\": 500,\n    \"cost\": 1100,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n      },\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 1,\n        \"positionTo\": 11,\n        \"pallets\": 11,\n        \"boxes\": 0,\n        \"items\": 0,\n        \"weight\": 0,\n        \"cost\": 0,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      }\n    }\n  ],\n  \"unloadingPoints\": [\n    {\n      \"dateTime\": {\n        \"from\": \"{{unloadingPointsDate}}T15:28:57\",\n        \"to\": \"{{unloadingPointsDate}}T15:28:57\"\n      },\n      \"orderIndexes\": [\n        0\n      ],\n      \"warehouse\": {\n        \"gln\": \"string\",\n        \"id\": \"{{unloadingWarehouseId}}\",\n        \"foreignId\": \"string\"\n      },\n      \"address\":null,\n      \"comment\": \"string\",\n      \"units\": {\n        \"palletType\": \"Euro\",\n\"positionFrom\": 1,\n    \"positionTo\": 66,\n    \"pallets\": 66,\n    \"boxes\": 300,\n    \"items\": null,\n    \"weight\": 500,\n    \"cost\": 1100,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n      },\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 0,\n        \"positionTo\": 0,\n        \"pallets\": 0,\n        \"boxes\": 0,\n        \"items\": 0,\n        \"weight\": 0,\n        \"cost\": 0,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      }\n    }\n  ],\n  \"servicesNeeded\": [\n    \"WithSupplement\"\n  ],\n  \"temperature\": {\n    \"from\": 5,\n    \"to\": 25\n  },\n  \"financials\": {\n    \"baseCost\": 9999.8887,\n    \"poolingPayToCarrier\": true,\n    \"additionalCosts\": [\n      {\n        \"type\": \"Returning\",\n        \"cost\": 0\n      }\n    ]\n  },\n  \"comment\": \"{{$randomAlphaNumeric}}\",\n  \"unitsAvailable\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 0,\n    \"positionTo\": 0,\n    \"pallets\": 0,\n    \"boxes\": 0,\n    \"items\": 0,\n    \"weight\": 0,\n    \"cost\": 0,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  },\n  \"unitsAvailableMin\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 0,\n    \"positionTo\": 0,\n    \"pallets\": 0,\n    \"boxes\": 0,\n    \"items\": 0,\n    \"weight\": 0,\n    \"cost\": 0,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  },\n  \"unitsFact\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 0,\n    \"positionTo\": 0,\n    \"pallets\": 0,\n    \"boxes\": 0,\n    \"items\": 0,\n    \"weight\": 0,\n    \"cost\": 0,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/reservations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"reservations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Ошибка создания бронирования FTL на 66 паллет без фичи компании",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"jsonData = pm.response.json();",
											"let titleError = \"Избыток грузовых единиц. Выберите транспорт с большей грузоподъемностью\";",
											"",
											"pm.test(\"Проверка что статус код 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Проверка на конкретную ошибку\", function () {",
											"    pm.expect(jsonData.error).to.include(titleError);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');",
											"pm.variables.set(\"loadingPointsDate\", moment().add(1, 'week').format(\"YYYY-MM-DD\"));",
											"pm.variables.set(\"unloadingPointsDate\", moment().add(2, 'week').format(\"YYYY-MM-DD\"));",
											"",
											"const number = pm.collectionVariables.set (\"randomNum\", _.random (10000,100000));",
											"",
											"pm.variables.set(\"carrierId\", \"5f43a3c47d0521017fe57152\");",
											"pm.variables.set(\"clientId\", \"5b06c5b70c7e6f6764d50d0e\");",
											"pm.variables.set(\"consignorId\", \"5bb49dac6458d524784dd419\");",
											"pm.variables.set(\"loadingWarehouseId\", \"5bb49eaa6458d524784dd41b\");",
											"pm.variables.set(\"unloadingWarehouseId\", \"5d5e772b756484199479a476\");",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{goPoolingOT}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"foreignId\": null,\n  \"shippingType\": \"FTL\",\n  \"slotId\": \"000000000000000000000000\",\n  \"carrier\": {\n    \"inn\": null,\n    \"id\": \"{{carrierId}}\",\n    \"foreignId\": null\n  },\n  \"client\": {\n    \"inn\": null,\n    \"id\": \"{{clientId}}\",\n    \"foreignId\": null\n  },\n  \"carType\": \"Tent\",\n  \"carCapacityType\": \"t20\",\n  \"productType\": \"food\",\n  \"units\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 1,\n    \"positionTo\": 66,\n    \"pallets\": 66,\n    \"boxes\": 300,\n    \"items\": null,\n    \"weight\": 500,\n    \"cost\": 1100,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n  },\n  \"orders\": [\n    {\n      \"number\": \"SS1234{{randomNum}}\",\n      \"waybillNumber\": null,\n      \"consignorNumber\": null,\n      \"type\": \"None\",\n      \"units\": {\n        \"palletType\": \"Euro\",\n      \"positionFrom\": 1,\n    \"positionTo\": 66,\n    \"pallets\": 66,\n    \"boxes\": 300,\n    \"items\": null,\n    \"weight\": 500,\n    \"cost\": 1100,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n      },\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 0,\n        \"positionTo\": 0,\n        \"pallets\": 0,\n        \"boxes\": 0,\n        \"items\": 0,\n        \"weight\": 0,\n        \"cost\": 0,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      },\n      \"productTransportWaybill\": \"TTN\"\n    }\n  ],\n  \"loadingPoints\": [\n    {\n      \"dateTime\": {\n        \"from\": \"{{loadingPointsDate}}T15:28:57\",\n        \"to\": \"{{loadingPointsDate}}T15:28:57\"\n      },\n      \"orderIndexes\": [\n        0\n      ],\n      \"warehouse\": {\n        \"gln\": null,\n        \"id\": \"{{unloadingWarehouseId}}\",\n        \"foreignId\": null\n      },\n      \"address\": null,\n      \"comment\": \"{{$randomLoremWords}}\",\n      \"units\": {\n        \"palletType\": \"Euro\",\n\"positionFrom\": 1,\n    \"positionTo\": 66,\n    \"pallets\": 66,\n    \"boxes\": 300,\n    \"items\": null,\n    \"weight\": 500,\n    \"cost\": 1100,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n      },\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 1,\n        \"positionTo\": 11,\n        \"pallets\": 11,\n        \"boxes\": 0,\n        \"items\": 0,\n        \"weight\": 0,\n        \"cost\": 0,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      }\n    }\n  ],\n  \"unloadingPoints\": [\n    {\n      \"dateTime\": {\n        \"from\": \"{{unloadingPointsDate}}T15:28:57\",\n        \"to\": \"{{unloadingPointsDate}}T15:28:57\"\n      },\n      \"orderIndexes\": [\n        0\n      ],\n      \"warehouse\": {\n        \"gln\": null,\n        \"id\": \"{{unloadingWarehouseId}}\",\n        \"foreignId\": null\n      },\n      \"address\":null,\n      \"comment\": null,\n      \"units\": {\n        \"palletType\": \"Euro\",\n\"positionFrom\": 1,\n    \"positionTo\": 66,\n    \"pallets\": 66,\n    \"boxes\": 300,\n    \"items\": null,\n    \"weight\": 500,\n    \"cost\": 1100,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n      },\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 0,\n        \"positionTo\": 0,\n        \"pallets\": 0,\n        \"boxes\": 0,\n        \"items\": 0,\n        \"weight\": 0,\n        \"cost\": 0,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      }\n    }\n  ],\n  \"servicesNeeded\": [\n    \"WithSupplement\"\n  ],\n  \"temperature\": {\n    \"from\": 5,\n    \"to\": 25\n  },\n  \"financials\": {\n    \"baseCost\": 9999.8887,\n    \"poolingPayToCarrier\": true,\n    \"additionalCosts\": [\n      {\n        \"type\": \"Returning\",\n        \"cost\": 0\n      }\n    ]\n  },\n  \"comment\": \"{{$randomAlphaNumeric}}\",\n  \"unitsAvailable\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 0,\n    \"positionTo\": 0,\n    \"pallets\": 0,\n    \"boxes\": 0,\n    \"items\": 0,\n    \"weight\": 0,\n    \"cost\": 0,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  },\n  \"unitsAvailableMin\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 0,\n    \"positionTo\": 0,\n    \"pallets\": 0,\n    \"boxes\": 0,\n    \"items\": 0,\n    \"weight\": 0,\n    \"cost\": 0,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  },\n  \"unitsFact\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 0,\n    \"positionTo\": 0,\n    \"pallets\": 0,\n    \"boxes\": 0,\n    \"items\": 0,\n    \"weight\": 0,\n    \"cost\": 0,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/reservations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"reservations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Создание бронирования FTL ГЕ по заказам",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"jsonData = pm.response.json();",
											"",
											"pm.test(\"Проверка, что код ответа 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Проверка, что статус бронирования OnConfirmation\", function () { ",
											"    pm.expect(jsonData.status).to.eql(\"OnConfirmation\");",
											"});",
											"",
											"pm.test(\"Проверка, что бронирование ФТЛ не на слот\", function () { ",
											"    pm.expect(jsonData.slotId).to.eql(null);",
											"    pm.expect(jsonData.shippingType).to.eql(\"FTL\");",
											"});",
											"",
											"pm.test(\"Проверка, что бронирование новое\", function () {  ",
											"    pm.expect(jsonData.number).to.be.a('string').and.match(/[0-9]/);",
											"    pm.expect(jsonData.number).to.have.lengthOf(6); ",
											"    //pm.expect(jsonData.number).to.be.sealed;",
											"    pm.expect(jsonData.version).to.eql(1);",
											"});",
											"",
											"pm.test(\"Проверка на конкретные ТК, ТС\", function () {",
											"   pm.expect(jsonData.carrier.id).to.equal(pm.variables.get(\"carrierId\"));",
											"});",
											"",
											"//можно добавить проверку на тип паллет, что паллеты из списка возможных для ТК",
											"",
											"pm.test(\"Проверка, что нет признака догруза\", function () {",
											"pm.expect(jsonData.servicesNeeded[0]).to.eql(\"Basic\");",
											"});",
											"",
											"pm.test(\"Проверка, что статус точки у новой заявки Scheduled\", function () {",
											"pm.expect(jsonData.loadingPoints[0].status).to.eql(\"Scheduled\");",
											"pm.expect(jsonData.unloadingPoints[0].status).to.eql(\"Scheduled\");",
											"});  ",
											"",
											"pm.test(\"Проверка, что для тента в ответе температура 5-25\", function () {",
											"pm.expect(jsonData.temperature.from).to.eql(pm.variables.get(\"tempFrom\"));",
											"pm.expect(jsonData.temperature.to).to.eql(pm.variables.get(\"tempTo\"));",
											"}); ",
											"",
											"pm.test(\"Проверка что бронирование по заказам\"), function () {",
											"  pm.expect(jsonData.unloadingPoints[0].orderIndexes).to.have.ordered.members([0, 1]) ",
											"  console.log(jsonData.orders.number);",
											"};",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');",
											"pm.variables.set(\"loadingPointsDate\", moment().add(1, 'week').format(\"YYYY-MM-DD\"));",
											"pm.variables.set(\"unloadingPointsDate\", moment().add(2, 'week').format(\"YYYY-MM-DD\"));",
											"",
											"const number = pm.collectionVariables.set (\"randomNum\", _.random (10000,100000));",
											"",
											"pm.variables.set(\"carrierId\", \"5f43a3c47d0521017fe57152\");",
											"pm.variables.set(\"clientId\", \"5b06c5b70c7e6f6764d50d0e\");",
											"pm.variables.set(\"consignorId\", \"5bb49dac6458d524784dd419\");",
											"pm.variables.set(\"loadingWarehouseId\", \"5bb49eaa6458d524784dd41b\");",
											"pm.variables.set(\"unloadingWarehouseId\", \"5d5e772b756484199479a476\");",
											"pm.variables.set(\"tempFrom\", 5);",
											"pm.variables.set(\"tempTo\", 25);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{goTestoviyOT}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"foreignId\": null,\n  \"shippingType\": \"FTL\",\n  \"slotId\": \"000000000000000000000000\",\n  \"carrier\": {\n    \"inn\": null,\n    \"id\": \"{{carrierId}}\",\n    \"foreignId\": null\n  },\n  \"client\": {\n    \"inn\": null,\n    \"id\": \"{{clientId}}\",\n    \"foreignId\": null\n  },\n  \"carType\": \"Tent\",\n  \"carCapacityType\": \"t20\",\n  \"productType\": \"alco\",\n  \"units\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 1,\n    \"positionTo\": 20,\n    \"pallets\": 20,\n    \"boxes\": 30,\n    \"items\": 40,\n    \"weight\": 50,\n    \"cost\": 110,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n  },\n  \"orders\": [\n    {\n      \"number\": \"SS1234{{randomNum}}\",\n      \"waybillNumber\": \"wblN{{randomNum}}\",\n      \"consignorNumber\": null,\n      \"type\": \"None\",\n      \"units\": {\n        \"palletType\": \"Euro\",\n       \"positionFrom\": 1,\n    \"positionTo\": 10,\n    \"pallets\": 10,\n    \"boxes\": 15,\n    \"items\": 20,\n    \"weight\": 25,\n        \"cost\": 55,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n      },\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 0,\n        \"positionTo\": 0,\n        \"pallets\": 0,\n        \"boxes\": 0,\n        \"items\": 0,\n        \"weight\": 0,\n        \"cost\": 0,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      },\n      \"productTransportWaybill\": \"TTN\"\n    },\n{\n      \"number\": \"SD1234{{randomNum}}\",\n      \"waybillNumber\": \"wblN{{randomNum}}\",\n      \"consignorNumber\": null,\n      \"type\": \"None\",\n      \"units\": {\n        \"palletType\": \"Euro\",\n       \"positionFrom\": 1,\n    \"positionTo\": 10,\n    \"pallets\": 10,\n    \"boxes\": 15,\n    \"items\": 20,\n    \"weight\": 25,\n        \"cost\": 55,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n      },\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 0,\n        \"positionTo\": 0,\n        \"pallets\": 0,\n        \"boxes\": 0,\n        \"items\": 0,\n        \"weight\": 0,\n        \"cost\": 0,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      },\n      \"productTransportWaybill\": \"TTN2\"\n    }\n  ],\n  \"loadingPoints\": [\n    {\n      \"dateTime\": {\n        \"from\": \"{{loadingPointsDate}}T15:28:57\",\n        \"to\": \"{{loadingPointsDate}}T15:28:57\"\n      },\n      \"orderIndexes\": [\n        0\n      ],\n      \"warehouse\": {\n        \"gln\": null,\n        \"id\": \"{{loadingWarehouseId}}\",\n        \"foreignId\": null\n      },\n      \"address\": null,\n      \"comment\": \"{{$randomLoremWords}}\",\n      \"units\": {\n        \"palletType\": \"Euro\",\n     \"positionFrom\": 1,\n    \"positionTo\": 10,\n    \"pallets\": 10,\n    \"boxes\": 15,\n    \"items\": 20,\n    \"weight\": 25,\n        \"cost\": 55,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n      },\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 12,\n        \"positionTo\": 22,\n        \"pallets\": 22,\n        \"boxes\": 0,\n        \"items\": 0,\n        \"weight\": 0,\n        \"cost\": 0,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      }\n    },\n  \n    {\n      \"dateTime\": {\n        \"from\": \"{{loadingPointsDate}}T15:28:57\",\n        \"to\": \"{{loadingPointsDate}}T15:28:57\"\n      },\n      \"orderIndexes\": [\n        1\n      ],\n      \"warehouse\": {\n        \"gln\": null,\n        \"id\": \"{{loadingWarehouseId}}\",\n        \"foreignId\": null\n      },\n      \"address\": null,\n      \"comment\": \"{{$randomLoremWords}}\",\n      \"units\": {\n        \"palletType\": \"Euro\",\n     \"positionFrom\": 1,\n    \"positionTo\": 10,\n    \"pallets\": 10,\n    \"boxes\": 15,\n    \"items\": 20,\n    \"weight\": 25,\n        \"cost\": 55,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n      },\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 1,\n        \"positionTo\": 11,\n        \"pallets\": 11,\n        \"boxes\": 0,\n        \"items\": 0,\n        \"weight\": 0,\n        \"cost\": 0,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      }\n    }\n  ],\n  \"unloadingPoints\": [\n    {\n      \"dateTime\": {\n        \"from\": \"{{unloadingPointsDate}}T15:28:57\",\n        \"to\": \"{{unloadingPointsDate}}T15:28:57\"\n      },\n      \"orderIndexes\": [\n        0,1\n      ],\n      \"warehouse\": {\n        \"gln\": null,\n        \"id\": \"{{unloadingWarehouseId}}\",\n        \"foreignId\": null\n      },\n      \"address\":null,\n      \"comment\": null,\n      \"units\": {\n        \"palletType\": \"Euro\",\n         \"positionFrom\": 1,\n    \"positionTo\": 20,\n    \"pallets\": 20,\n    \"boxes\": 30,\n    \"items\": 40,\n    \"weight\": 50,\n        \"cost\": 110,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n      },\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 0,\n        \"positionTo\": 0,\n        \"pallets\": 0,\n        \"boxes\": 0,\n        \"items\": 0,\n        \"weight\": 0,\n        \"cost\": 0,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      }\n    }\n  ],\n  \"servicesNeeded\": [\n    \"Basic\"\n  ],\n  \"temperature\": {\n    \"from\": 5,\n    \"to\": 25\n  },\n  \"financials\": {\n    \"baseCost\": 9999.87,\n    \"poolingPayToCarrier\": true,\n    \"additionalCosts\": [\n      {\n        \"type\": \"Returning\",\n        \"cost\": 0\n      }\n    ]\n  },\n  \"comment\": \"{{$randomAlphaNumeric}}\",\n  \"unitsAvailable\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 0,\n    \"positionTo\": 0,\n    \"pallets\": 0,\n    \"boxes\": 0,\n    \"items\": 0,\n    \"weight\": 0,\n    \"cost\": 0,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  },\n  \"unitsAvailableMin\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 0,\n    \"positionTo\": 0,\n    \"pallets\": 0,\n    \"boxes\": 0,\n    \"items\": 0,\n    \"weight\": 0,\n    \"cost\": 0,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  },\n  \"unitsFact\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 0,\n    \"positionTo\": 0,\n    \"pallets\": 0,\n    \"boxes\": 0,\n    \"items\": 0,\n    \"weight\": 0,\n    \"cost\": 0,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/reservations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"reservations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Ошибка создания бронирования FTL на Тандер валидация заказов",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"jsonData = pm.response.json();",
											"let titleError = \"В одном из заказов неверно заполнен \\\"Номер заказа\\\"\";",
											"",
											"pm.test(\"Проверка что статус код 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Проверка на конкретную ошибку\", function () {",
											"    pm.expect(jsonData.error).to.include(titleError);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');",
											"pm.variables.set(\"loadingPointsDate\", moment().add(1, 'week').format(\"YYYY-MM-DD\"));",
											"pm.variables.set(\"unloadingPointsDate\", moment().add(2, 'week').format(\"YYYY-MM-DD\"));",
											"",
											"const number = pm.collectionVariables.set (\"randomNum\", _.random (10000,100000));",
											"",
											"pm.variables.set(\"carrierId\", \"5f43a3c47d0521017fe57152\");",
											"pm.variables.set(\"clientId\", \"5b06c5b70c7e6f6764d50d0e\");",
											"pm.variables.set(\"consignorId\", \"5bb49dac6458d524784dd419\");",
											"pm.variables.set(\"loadingWarehouseId\", \"5bb49eaa6458d524784dd41b\");",
											"pm.variables.set(\"unloadingWarehouseId\", \"5d5e772b756484199479a476\");",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{goTestoviyOT}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"foreignId\": null,\n  \"shippingType\": \"FTL\",\n  \"slotId\": \"000000000000000000000000\",\n  \"carrier\": {\n    \"inn\": null,\n    \"id\": \"{{carrierId}}\",\n    \"foreignId\": null\n  },\n  \"client\": {\n    \"inn\": null,\n    \"id\": \"{{clientId}}\",\n    \"foreignId\": null\n  },\n  \"carType\": \"Tent\",\n  \"carCapacityType\": \"t20\",\n  \"productType\": \"alco\",\n  \"units\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 1,\n    \"positionTo\": 20,\n    \"pallets\": 20,\n    \"boxes\": 30,\n    \"items\": 40,\n    \"weight\": 50,\n    \"cost\": 110,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n  },\n  \"orders\": [\n    {\n      \"number\": \"{{randomNum}}\",\n      \"waybillNumber\": \"wblN{{randomNum}}\",\n      \"consignorNumber\": null,\n      \"type\": \"None\",\n      \"units\": {\n        \"palletType\": \"Euro\",\n       \"positionFrom\": 1,\n    \"positionTo\": 10,\n    \"pallets\": 10,\n    \"boxes\": 15,\n    \"items\": 20,\n    \"weight\": 25,\n        \"cost\": 55,\n        \"volume\": null,\n        \"length\": null,\n        \"width\": null,\n        \"height\": null\n      },\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 0,\n        \"positionTo\": 0,\n        \"pallets\": 0,\n        \"boxes\": 0,\n        \"items\": 0,\n        \"weight\": 0,\n        \"cost\": 0,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      },\n      \"productTransportWaybill\": \"TTN\"\n    },\n{\n      \"number\": \"1234{{randomNum}}\",\n      \"waybillNumber\": \"wblN{{randomNum}}\",\n      \"consignorNumber\": null,\n      \"type\": \"None\",\n      \"units\": {\n        \"palletType\": \"Euro\",\n       \"positionFrom\": 1,\n    \"positionTo\": 10,\n    \"pallets\": 10,\n    \"boxes\": 15,\n    \"items\": 20,\n    \"weight\": 25,\n        \"cost\": 55,\n        \"volume\": null,\n        \"length\": null,\n        \"width\": null,\n        \"height\": null\n      },\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 0,\n        \"positionTo\": 0,\n        \"pallets\": 0,\n        \"boxes\": 0,\n        \"items\": 0,\n        \"weight\": 0,\n        \"cost\": 0,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      },\n      \"productTransportWaybill\": \"TTN2\"\n    }\n  ],\n  \"loadingPoints\": [\n    {\n      \"dateTime\": {\n        \"from\": \"{{loadingPointsDate}}T15:28:57\",\n        \"to\": \"{{loadingPointsDate}}T15:28:57\"\n      },\n      \"orderIndexes\": [\n        0\n      ],\n      \"warehouse\": {\n        \"gln\": null,\n        \"id\": \"{{loadingWarehouseId}}\",\n        \"foreignId\": null\n      },\n      \"address\": null,\n      \"comment\": \"{{$randomLoremWords}}\",\n      \"units\": {\n        \"palletType\": \"Euro\",\n     \"positionFrom\": 1,\n    \"positionTo\": 10,\n    \"pallets\": 10,\n    \"boxes\": 15,\n    \"items\": 20,\n    \"weight\": 25,\n        \"cost\": 55,\n        \"volume\": null,\n        \"length\": null,\n        \"width\": null,\n        \"height\": null\n      },\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 12,\n        \"positionTo\": 22,\n        \"pallets\": 22,\n        \"boxes\": 0,\n        \"items\": 0,\n        \"weight\": 0,\n        \"cost\": 0,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      }\n    },\n  \n    {\n      \"dateTime\": {\n        \"from\": \"{{loadingPointsDate}}T15:28:57\",\n        \"to\": \"{{loadingPointsDate}}T15:28:57\"\n      },\n      \"orderIndexes\": [\n        1\n      ],\n      \"warehouse\": {\n        \"gln\": null,\n        \"id\": \"{{loadingWarehouseId}}\",\n        \"foreignId\": null\n      },\n      \"address\": null,\n      \"comment\": \"{{$randomLoremWords}}\",\n      \"units\": {\n        \"palletType\": \"Euro\",\n     \"positionFrom\": 1,\n    \"positionTo\": 10,\n    \"pallets\": 10,\n    \"boxes\": 15,\n    \"items\": 20,\n    \"weight\": 25,\n        \"cost\": 55,\n        \"volume\": null,\n        \"length\": null,\n        \"width\": null,\n        \"height\": null\n      },\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 1,\n        \"positionTo\": 11,\n        \"pallets\": 11,\n        \"boxes\": 0,\n        \"items\": 0,\n        \"weight\": 0,\n        \"cost\": 0,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      }\n    }\n  ],\n  \"unloadingPoints\": [\n    {\n      \"dateTime\": {\n        \"from\": \"{{unloadingPointsDate}}T15:28:57\",\n        \"to\": \"{{unloadingPointsDate}}T15:28:57\"\n      },\n      \"orderIndexes\": [\n        0,1\n      ],\n      \"warehouse\": {\n        \"gln\": null,\n        \"id\": \"{{unloadingWarehouseId}}\",\n        \"foreignId\": null\n      },\n      \"address\":null,\n      \"comment\": null,\n      \"units\": {\n        \"palletType\": \"Euro\",\n         \"positionFrom\": 1,\n    \"positionTo\": 20,\n    \"pallets\": 20,\n    \"boxes\": 30,\n    \"items\": 40,\n    \"weight\": 50,\n        \"cost\": 110,\n        \"volume\": null,\n        \"length\": null,\n        \"width\": null,\n        \"height\": null\n      },\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 0,\n        \"positionTo\": 0,\n        \"pallets\": 0,\n        \"boxes\": 0,\n        \"items\": 0,\n        \"weight\": 0,\n        \"cost\": 0,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      }\n    }\n  ],\n  \"servicesNeeded\": [\n    \"Basic\"\n  ],\n  \"temperature\": {\n    \"from\": 5,\n    \"to\": 25\n  },\n  \"financials\": {\n    \"baseCost\": 9999.87,\n    \"poolingPayToCarrier\": true,\n    \"additionalCosts\": [\n      {\n        \"type\": \"Returning\",\n        \"cost\": 12345\n      }\n    ]\n  },\n  \"comment\": \"{{$randomAlphaNumeric}}\",\n  \"unitsAvailable\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 0,\n    \"positionTo\": 0,\n    \"pallets\": 0,\n    \"boxes\": 0,\n    \"items\": 0,\n    \"weight\": 0,\n    \"cost\": 0,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  },\n  \"unitsAvailableMin\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 0,\n    \"positionTo\": 0,\n    \"pallets\": 0,\n    \"boxes\": 0,\n    \"items\": 0,\n    \"weight\": 0,\n    \"cost\": 0,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  },\n  \"unitsFact\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 0,\n    \"positionTo\": 0,\n    \"pallets\": 0,\n    \"boxes\": 0,\n    \"items\": 0,\n    \"weight\": 0,\n    \"cost\": 0,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/reservations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"reservations"
									]
								}
							},
							"response": []
						},
						{
							"name": "Ошибка кол-во паллет больше, чем разрешено по грузоподъемности",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"jsonData = pm.response.json();",
											"let titleError = \"Избыток грузовых единиц. Выберите транспорт с большей грузоподъемностью\";",
											"",
											"pm.test(\"Проверка что статус код 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Проверка на конкретную ошибку\", function () {",
											"    pm.expect(jsonData.error).to.include(titleError);",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');",
											"pm.variables.set(\"loadingPointsDate\", moment().add(1, 'week').format(\"YYYY-MM-DD\"));",
											"pm.variables.set(\"unloadingPointsDate\", moment().add(2, 'week').format(\"YYYY-MM-DD\"));",
											"",
											"const number = pm.collectionVariables.set (\"randomNum\", _.random (10000,100000));",
											"",
											"pm.variables.set(\"carrierId\", \"5f43a3c47d0521017fe57152\");",
											"pm.variables.set(\"clientId\", \"5b06c5b70c7e6f6764d50d0e\");",
											"pm.variables.set(\"consignorId\", \"5bb49dac6458d524784dd419\");",
											"pm.variables.set(\"loadingWarehouseId\", \"5bb49eaa6458d524784dd41b\");",
											"pm.variables.set(\"unloadingWarehouseId\", \"5d5e772b756484199479a476\");",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{goPoolingOT}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"foreignId\": null,\n  \"shippingType\": \"FTL\",\n  \"slotId\": \"000000000000000000000000\",\n  \"carrier\": {\n    \"inn\": null,\n    \"id\": \"{{carrierId}}\",\n    \"foreignId\": null\n  },\n  \"client\": {\n    \"inn\": null,\n    \"id\": \"{{clientId}}\",\n    \"foreignId\": null\n  },\n  \"carType\": \"Tent\",\n  \"carCapacityType\": \"t1_5\", //1-4 паллеты\n  \"productType\": \"alco\",\n  \"units\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 1,\n    \"positionTo\": 20,\n    \"pallets\": 20,\n    \"boxes\": 30,\n    \"items\": 40,\n    \"weight\": 50,\n    \"cost\": 110,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n  },\n  \"orders\": [\n    {\n      \"number\": \"GG1234{{randomNum}}\",\n      \"waybillNumber\": \"wblN{{randomNum}}\",\n      \"consignorNumber\": null,\n      \"type\": \"None\",\n      \"units\": {\n        \"palletType\": \"Euro\",\n       \"positionFrom\": 1,\n    \"positionTo\": 10,\n    \"pallets\": 10,\n    \"boxes\": 15,\n    \"items\": 20,\n    \"weight\": 25,\n        \"cost\": 55,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n      },\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 0,\n        \"positionTo\": 0,\n        \"pallets\": 0,\n        \"boxes\": 0,\n        \"items\": 0,\n        \"weight\": 0,\n        \"cost\": 0,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      },\n      \"productTransportWaybill\": \"TTN\"\n    },\n{\n      \"number\": \"FF1234{{randomNum}}\",\n      \"waybillNumber\": \"wblN{{randomNum}}\",\n      \"consignorNumber\": null,\n      \"type\": \"None\",\n      \"units\": {\n        \"palletType\": \"Euro\",\n       \"positionFrom\": 1,\n    \"positionTo\": 10,\n    \"pallets\": 10,\n    \"boxes\": 15,\n    \"items\": 20,\n    \"weight\": 25,\n        \"cost\": 55,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n      },\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 0,\n        \"positionTo\": 0,\n        \"pallets\": 0,\n        \"boxes\": 0,\n        \"items\": 0,\n        \"weight\": 0,\n        \"cost\": 0,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      },\n      \"productTransportWaybill\": \"TTN2\"\n    }\n  ],\n  \"loadingPoints\": [\n    {\n      \"dateTime\": {\n        \"from\": \"{{loadingPointsDate}}T15:28:57\",\n        \"to\": \"{{loadingPointsDate}}T15:28:57\"\n      },\n      \"orderIndexes\": [\n        0\n      ],\n      \"warehouse\": {\n        \"gln\": null,\n        \"id\": \"{{loadingWarehouseId}}\",\n        \"foreignId\": null\n      },\n      \"address\": null,\n      \"comment\": \"{{$randomLoremWords}}\",\n      \"units\": {\n        \"palletType\": \"Euro\",\n     \"positionFrom\": 1,\n    \"positionTo\": 10,\n    \"pallets\": 10,\n    \"boxes\": 15,\n    \"items\": 20,\n    \"weight\": 25,\n        \"cost\": 55,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n      },\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 12,\n        \"positionTo\": 22,\n        \"pallets\": 22,\n        \"boxes\": 0,\n        \"items\": 0,\n        \"weight\": 0,\n        \"cost\": 0,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      }\n    },\n  \n    {\n      \"dateTime\": {\n        \"from\": \"{{loadingPointsDate}}T15:28:57\",\n        \"to\": \"{{loadingPointsDate}}T15:28:57\"\n      },\n      \"orderIndexes\": [\n        1\n      ],\n      \"warehouse\": {\n        \"gln\": null,\n        \"id\": \"{{loadingWarehouseId}}\",\n        \"foreignId\": null\n      },\n      \"address\": null,\n      \"comment\": \"{{$randomLoremWords}}\",\n      \"units\": {\n        \"palletType\": \"Euro\",\n     \"positionFrom\": 1,\n    \"positionTo\": 10,\n    \"pallets\": 10,\n    \"boxes\": 15,\n    \"items\": 20,\n    \"weight\": 25,\n        \"cost\": 55,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n      },\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 1,\n        \"positionTo\": 11,\n        \"pallets\": 11,\n        \"boxes\": 0,\n        \"items\": 0,\n        \"weight\": 0,\n        \"cost\": 0,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      }\n    }\n  ],\n  \"unloadingPoints\": [\n    {\n      \"dateTime\": {\n        \"from\": \"{{unloadingPointsDate}}T15:28:57\",\n        \"to\": \"{{unloadingPointsDate}}T15:28:57\"\n      },\n      \"orderIndexes\": [\n        0,1\n      ],\n      \"warehouse\": {\n        \"gln\": null,\n        \"id\": \"{{unloadingWarehouseId}}\",\n        \"foreignId\": null\n      },\n      \"address\":null,\n      \"comment\": null,\n      \"units\": {\n        \"palletType\": \"Euro\",\n         \"positionFrom\": 1,\n    \"positionTo\": 20,\n    \"pallets\": 20,\n    \"boxes\": 30,\n    \"items\": 40,\n    \"weight\": 50,\n        \"cost\": 110,\n    \"volume\": null,\n    \"length\": null,\n    \"width\": null,\n    \"height\": null\n      },\n      \"unitsFact\": {\n        \"palletType\": \"Euro\",\n        \"positionFrom\": 0,\n        \"positionTo\": 0,\n        \"pallets\": 0,\n        \"boxes\": 0,\n        \"items\": 0,\n        \"weight\": 0,\n        \"cost\": 0,\n        \"volume\": 0,\n        \"length\": 0,\n        \"width\": 0,\n        \"height\": 0\n      }\n    }\n  ],\n  \"servicesNeeded\": [\n    \"Basic\"\n  ],\n  \"temperature\": {\n    \"from\": 5,\n    \"to\": 25\n  },\n  \"financials\": {\n    \"baseCost\": 9999.87,\n    \"poolingPayToCarrier\": true,\n    \"additionalCosts\": [\n      {\n        \"type\": \"Returning\",\n        \"cost\": 0\n      }\n    ]\n  },\n  \"comment\": \"{{$randomAlphaNumeric}}\",\n  \"unitsAvailable\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 0,\n    \"positionTo\": 0,\n    \"pallets\": 0,\n    \"boxes\": 0,\n    \"items\": 0,\n    \"weight\": 0,\n    \"cost\": 0,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  },\n  \"unitsAvailableMin\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 0,\n    \"positionTo\": 0,\n    \"pallets\": 0,\n    \"boxes\": 0,\n    \"items\": 0,\n    \"weight\": 0,\n    \"cost\": 0,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  },\n  \"unitsFact\": {\n    \"palletType\": \"Euro\",\n    \"positionFrom\": 0,\n    \"positionTo\": 0,\n    \"pallets\": 0,\n    \"boxes\": 0,\n    \"items\": 0,\n    \"weight\": 0,\n    \"cost\": 0,\n    \"volume\": 0,\n    \"length\": 0,\n    \"width\": 0,\n    \"height\": 0\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v2/reservations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"reservations"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "slots",
					"item": [
						{
							"name": "Получение массива слотов + схема",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											" var schema = {\r",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
											"  \"type\": \"array\",\r",
											"  \"items\": [\r",
											"    {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"id\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"availableUntil\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"consolidationDate\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"departureDate\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"deliveryDate\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"shippingRegion\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"code\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"code\"\r",
											"          ]\r",
											"        },\r",
											"        \"carrier\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"inn\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"foreignIds\": {\r",
											"              \"type\": \"array\",\r",
											"              \"items\": {}\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"inn\",\r",
											"            \"id\",\r",
											"            \"foreignIds\"\r",
											"          ]\r",
											"        },\r",
											"        \"client\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"inn\": {\r",
											"              \"type\": \"null\"\r",
											"            },\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"foreignIds\": {\r",
											"              \"type\": \"array\",\r",
											"              \"items\": {}\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"inn\",\r",
											"            \"id\",\r",
											"            \"foreignIds\"\r",
											"          ]\r",
											"        },\r",
											"        \"carType\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"productTypeBase\": {\r",
											"          \"type\": \"null\"\r",
											"        },\r",
											"        \"productTypes\": {\r",
											"          \"type\": \"array\",\r",
											"          \"items\": [\r",
											"            {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          ]\r",
											"        },\r",
											"        \"loadingWarehouses\": {\r",
											"          \"type\": \"array\",\r",
											"          \"items\": [\r",
											"            {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"gln\": {\r",
											"                  \"type\": \"null\"\r",
											"                },\r",
											"                \"id\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"foreignIds\": {\r",
											"                  \"type\": \"array\",\r",
											"                  \"items\": {}\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"gln\",\r",
											"                \"id\",\r",
											"                \"foreignIds\"\r",
											"              ]\r",
											"            },\r",
											"            {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"gln\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"id\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"foreignIds\": {\r",
											"                  \"type\": \"array\",\r",
											"                  \"items\": {}\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"gln\",\r",
											"                \"id\",\r",
											"                \"foreignIds\"\r",
											"              ]\r",
											"            }\r",
											"          ]\r",
											"        },\r",
											"        \"unloadingWarehouse\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"gln\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"foreignIds\": {\r",
											"              \"type\": \"array\",\r",
											"              \"items\": {}\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"gln\",\r",
											"            \"id\",\r",
											"            \"foreignIds\"\r",
											"          ]\r",
											"        },\r",
											"        \"price\": {\r",
											"          \"type\": \"number\"\r",
											"        },\r",
											"        \"shippingType\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"services\": {\r",
											"          \"type\": \"array\",\r",
											"          \"items\": {}\r",
											"        },\r",
											"        \"temperature\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"from\": {\r",
											"              \"type\": \"null\"\r",
											"            },\r",
											"            \"to\": {\r",
											"              \"type\": \"null\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"from\",\r",
											"            \"to\"\r",
											"          ]\r",
											"        },\r",
											"        \"poolingCount\": {\r",
											"          \"type\": \"integer\"\r",
											"        },\r",
											"        \"units\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"pallets\": {\r",
											"              \"type\": \"integer\"\r",
											"            },\r",
											"            \"boxes\": {\r",
											"              \"type\": \"integer\"\r",
											"            },\r",
											"            \"weight\": {\r",
											"              \"type\": \"number\"\r",
											"            },\r",
											"            \"cost\": {\r",
											"              \"type\": \"number\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"pallets\",\r",
											"            \"boxes\",\r",
											"            \"weight\",\r",
											"            \"cost\"\r",
											"          ]\r",
											"        },\r",
											"        \"unitsAvailable\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"pallets\": {\r",
											"              \"type\": \"integer\"\r",
											"            },\r",
											"            \"boxes\": {\r",
											"              \"type\": \"integer\"\r",
											"            },\r",
											"            \"weight\": {\r",
											"              \"type\": \"number\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"pallets\",\r",
											"            \"boxes\",\r",
											"            \"weight\"\r",
											"          ]\r",
											"        },\r",
											"        \"unitsAvailableMin\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"pallets\": {\r",
											"              \"type\": \"integer\"\r",
											"            },\r",
											"            \"weight\": {\r",
											"              \"type\": \"number\"\r",
											"            },\r",
											"            \"cost\": {\r",
											"              \"type\": \"number\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"pallets\",\r",
											"            \"weight\",\r",
											"            \"cost\"\r",
											"          ]\r",
											"        },\r",
											"        \"palletTypes\": {\r",
											"          \"type\": \"array\",\r",
											"          \"items\": {}\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"        \"id\",\r",
											"        \"availableUntil\",\r",
											"        \"consolidationDate\",\r",
											"        \"departureDate\",\r",
											"        \"deliveryDate\",\r",
											"        \"shippingRegion\",\r",
											"        \"carrier\",\r",
											"        \"client\",\r",
											"        \"carType\",\r",
											"        \"productTypeBase\",\r",
											"        \"productTypes\",\r",
											"        \"loadingWarehouses\",\r",
											"        \"unloadingWarehouse\",\r",
											"        \"price\",\r",
											"        \"shippingType\",\r",
											"        \"services\",\r",
											"        \"temperature\",\r",
											"        \"poolingCount\",\r",
											"        \"units\",\r",
											"        \"unitsAvailable\",\r",
											"        \"unitsAvailableMin\",\r",
											"        \"palletTypes\"\r",
											"      ]\r",
											"    },\r",
											"    {\r",
											"      \"type\": \"object\",\r",
											"      \"properties\": {\r",
											"        \"id\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"availableUntil\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"consolidationDate\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"departureDate\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"deliveryDate\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"shippingRegion\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"code\": {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"id\",\r",
											"            \"code\"\r",
											"          ]\r",
											"        },\r",
											"        \"carrier\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"inn\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"foreignIds\": {\r",
											"              \"type\": \"array\",\r",
											"              \"items\": {}\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"inn\",\r",
											"            \"id\",\r",
											"            \"foreignIds\"\r",
											"          ]\r",
											"        },\r",
											"        \"client\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"inn\": {\r",
											"              \"type\": \"null\"\r",
											"            },\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"foreignIds\": {\r",
											"              \"type\": \"array\",\r",
											"              \"items\": {}\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"inn\",\r",
											"            \"id\",\r",
											"            \"foreignIds\"\r",
											"          ]\r",
											"        },\r",
											"        \"carType\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"productTypeBase\": {\r",
											"          \"type\": \"null\"\r",
											"        },\r",
											"        \"productTypes\": {\r",
											"          \"type\": \"array\",\r",
											"          \"items\": [\r",
											"            {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          ]\r",
											"        },\r",
											"        \"loadingWarehouses\": {\r",
											"          \"type\": \"array\",\r",
											"          \"items\": [\r",
											"            {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"gln\": {\r",
											"                  \"type\": \"null\"\r",
											"                },\r",
											"                \"id\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"foreignIds\": {\r",
											"                  \"type\": \"array\",\r",
											"                  \"items\": {}\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"gln\",\r",
											"                \"id\",\r",
											"                \"foreignIds\"\r",
											"              ]\r",
											"            },\r",
											"            {\r",
											"              \"type\": \"object\",\r",
											"              \"properties\": {\r",
											"                \"gln\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"id\": {\r",
											"                  \"type\": \"string\"\r",
											"                },\r",
											"                \"foreignIds\": {\r",
											"                  \"type\": \"array\",\r",
											"                  \"items\": {}\r",
											"                }\r",
											"              },\r",
											"              \"required\": [\r",
											"                \"gln\",\r",
											"                \"id\",\r",
											"                \"foreignIds\"\r",
											"              ]\r",
											"            }\r",
											"          ]\r",
											"        },\r",
											"        \"unloadingWarehouse\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"gln\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"id\": {\r",
											"              \"type\": \"string\"\r",
											"            },\r",
											"            \"foreignIds\": {\r",
											"              \"type\": \"array\",\r",
											"              \"items\": {}\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"gln\",\r",
											"            \"id\",\r",
											"            \"foreignIds\"\r",
											"          ]\r",
											"        },\r",
											"        \"price\": {\r",
											"          \"type\": \"number\"\r",
											"        },\r",
											"        \"shippingType\": {\r",
											"          \"type\": \"string\"\r",
											"        },\r",
											"        \"services\": {\r",
											"          \"type\": \"array\",\r",
											"          \"items\": [\r",
											"            {\r",
											"              \"type\": \"string\"\r",
											"            }\r",
											"          ]\r",
											"        },\r",
											"        \"temperature\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"from\": {\r",
											"              \"type\": \"null\"\r",
											"            },\r",
											"            \"to\": {\r",
											"              \"type\": \"null\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"from\",\r",
											"            \"to\"\r",
											"          ]\r",
											"        },\r",
											"        \"poolingCount\": {\r",
											"          \"type\": \"integer\"\r",
											"        },\r",
											"        \"units\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"pallets\": {\r",
											"              \"type\": \"integer\"\r",
											"            },\r",
											"            \"boxes\": {\r",
											"              \"type\": \"integer\"\r",
											"            },\r",
											"            \"weight\": {\r",
											"              \"type\": \"number\"\r",
											"            },\r",
											"            \"cost\": {\r",
											"              \"type\": \"number\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"pallets\",\r",
											"            \"boxes\",\r",
											"            \"weight\",\r",
											"            \"cost\"\r",
											"          ]\r",
											"        },\r",
											"        \"unitsAvailable\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"pallets\": {\r",
											"              \"type\": \"integer\"\r",
											"            },\r",
											"            \"boxes\": {\r",
											"              \"type\": \"integer\"\r",
											"            },\r",
											"            \"weight\": {\r",
											"              \"type\": \"number\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"pallets\",\r",
											"            \"boxes\",\r",
											"            \"weight\"\r",
											"          ]\r",
											"        },\r",
											"        \"unitsAvailableMin\": {\r",
											"          \"type\": \"object\",\r",
											"          \"properties\": {\r",
											"            \"pallets\": {\r",
											"              \"type\": \"integer\"\r",
											"            },\r",
											"            \"weight\": {\r",
											"              \"type\": \"number\"\r",
											"            },\r",
											"            \"cost\": {\r",
											"              \"type\": \"number\"\r",
											"            }\r",
											"          },\r",
											"          \"required\": [\r",
											"            \"pallets\",\r",
											"            \"weight\",\r",
											"            \"cost\"\r",
											"          ]\r",
											"        },\r",
											"        \"palletTypes\": {\r",
											"          \"type\": \"array\",\r",
											"          \"items\": {}\r",
											"        }\r",
											"      },\r",
											"      \"required\": [\r",
											"        \"id\",\r",
											"        \"availableUntil\",\r",
											"        \"consolidationDate\",\r",
											"        \"departureDate\",\r",
											"        \"deliveryDate\",\r",
											"        \"shippingRegion\",\r",
											"        \"carrier\",\r",
											"        \"client\",\r",
											"        \"carType\",\r",
											"        \"productTypeBase\",\r",
											"        \"productTypes\",\r",
											"        \"loadingWarehouses\",\r",
											"        \"unloadingWarehouse\",\r",
											"        \"price\",\r",
											"        \"shippingType\",\r",
											"        \"services\",\r",
											"        \"temperature\",\r",
											"        \"poolingCount\",\r",
											"        \"units\",\r",
											"        \"unitsAvailable\",\r",
											"        \"unitsAvailableMin\",\r",
											"        \"palletTypes\"\r",
											"      ]\r",
											"    }\r",
											"  ]\r",
											"};\r",
											"\r",
											"jsonData = pm.response.json();\r",
											"\r",
											"const idWarehouse = \"5b23dfcccd1a2640b4de30bc\";\r",
											"const currentDate = pm.variables.get(\"currentDate\");\r",
											"const currentDateWeek = pm.variables.get(\"currentDate + a week\");\r",
											"\r",
											"/*pm.test(\"Проверка схемы\", function () {\r",
											"  pm.expect(tv4.validate(pm.response.json(), schema, false, true)).to.be.true;\r",
											"}); */\r",
											"\r",
											"pm.test(\"Проверка, что в ответе слоты одного РЦ\", function () {\r",
											"     _.each(jsonData, (item) => {\r",
											"    pm.expect(item.unloadingWarehouse.id).to.eql(idWarehouse)});\r",
											"});\r",
											"\r",
											"pm.test(\"Проверка, что слоты типа LTL или Pooling\", function () { \r",
											"    _.each(jsonData, (item) => {\r",
											"    pm.expect(item.shippingType).to.contain.oneOf([\"LTL\", \"Pooling\"])});\r",
											"    \r",
											"});\r",
											"\r",
											"pm.test(\"Проверка, что дата консолидации попадает в период\", function () {\r",
											"    pm.expect(new Date(jsonData[0].consolidationDate)).to.be.within(new Date(currentDate), new Date(currentDateWeek));\r",
											"});\r",
											"\r",
											"pm.test(\"Проверка, что код ответа 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"pm.variables.set(\"currentDate\", moment().format(\"YYYY-MM-DD\"));\r",
											"pm.variables.set(\"currentDate + a week\", moment().add(1, 'week').format(\"YYYY-MM-DD\"));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{goPoolingOT}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/slots?consolidationDateFrom={{currentDate}}&consolidationDateTo={{currentDate + a week}}&onlyAvailable=true&shippingRegionId={{MoscowShippingRegion}}&carrierId={{FMCarrier}}&clientId={{TanderClient}}&unloadingWarehouseId={{DmitrovUnloadingWarehouse}}&carType=Tent&productType=Food&shippingTypes=Pooling&shippingTypes=LTL",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"slots"
									],
									"query": [
										{
											"key": "consolidationDateFrom",
											"value": "{{currentDate}}"
										},
										{
											"key": "consolidationDateTo",
											"value": "{{currentDate + a week}}"
										},
										{
											"key": "onlyAvailable",
											"value": "true"
										},
										{
											"key": "shippingRegionId",
											"value": "{{MoscowShippingRegion}}"
										},
										{
											"key": "carrierId",
											"value": "{{FMCarrier}}"
										},
										{
											"key": "clientId",
											"value": "{{TanderClient}}"
										},
										{
											"key": "unloadingWarehouseId",
											"value": "{{DmitrovUnloadingWarehouse}}"
										},
										{
											"key": "carType",
											"value": "Tent"
										},
										{
											"key": "productType",
											"value": "Food"
										},
										{
											"key": "shippingTypes",
											"value": "Pooling"
										},
										{
											"key": "shippingTypes",
											"value": "LTL"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение одного слота",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var moment = require('moment');\r",
											"pm.variables.set(\"currentDate\", moment().format(\"YYYY-MM-DD\"));\r",
											"pm.variables.set(\"currentDate + a week\", moment().add(1, 'week').format(\"YYYY-MM-DD\"));\r",
											"\r",
											"pm.sendRequest({\r",
											"    url: pm.environment.get(\"baseUrl\") + \"/api/v2/slots?consolidationDateFrom=\" + pm.variables.get(\"currentDate\") + \"&consolidationDateTo=\" + pm.variables.get(\"currentDate + a week\") + \"&shippingRegionId=\" + pm.globals.get(\"MoscowShippingRegion\") + \"&UnloadingWarehouseId=\" + pm.globals.get(\"DmitrovUnloadingWarehouse\"),\r",
											"    method: \"GET\",\r",
											"    header: {\r",
											"        \"Authorization\": \"Bearer \" + pm.globals.get(\"goPoolingOT\"),\r",
											"    },\r",
											"},\r",
											"    function (err, res) {\r",
											"        pm.variables.set(\"slotId\", res.json()[0].id);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"jsonData = pm.response.json();\r",
											"const idWarehouse = \"5b23dfcccd1a2640b4de30bc\";\r",
											"const currentDate = pm.variables.get(\"currentDate\");\r",
											"const currentDateWeek = pm.variables.get(\"currentDate + a week\");\r",
											"\r",
											"pm.test(\"Проверка, что в ответе слоты конкретного РЦ\", function () {\r",
											"    pm.expect(jsonData.unloadingWarehouse.id).to.eql(idWarehouse);\r",
											"});\r",
											"\r",
											"pm.test(\"Проверка, что слоты типа LTL или Pooling\", function () { \r",
											"    pm.expect(jsonData.shippingType).to.contain.oneOf([\"LTL\", \"Pooling\"]);\r",
											"});\r",
											"\r",
											"pm.test(\"Проверка, что дата консолидации попадает в период\", function () {\r",
											"    pm.expect(new Date(jsonData.consolidationDate)).to.be.within(new Date(currentDate), new Date(currentDateWeek));\r",
											"});\r",
											"\r",
											"pm.test(\"Проверка, что код ответа 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{goPoolingOT}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/slots/{{slotId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"slots",
										"{{slotId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "warehouses",
					"item": [
						{
							"name": "Получение списка складов + схема",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"jsonData = pm.response.json();",
											"",
											"var schema = {",
											"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
											"  \"type\": \"array\",",
											"  \"items\": [",
											"    {",
											"      \"type\": \"object\",",
											"      \"properties\": {",
											"        \"id\": {",
											"          \"type\": \"string\"",
											"        },",
											"        \"foreignIds\": {",
											"          \"type\": \"array\",",
											"          \"items\": {}",
											"        },",
											"        \"name\": {",
											"          \"type\": \"string\"",
											"        },",
											"        \"type\": {",
											"          \"type\": \"string\"",
											"        },",
											"        \"company\": {",
											"          \"type\": \"object\",",
											"          \"properties\": {",
											"            \"inn\": {",
											"              \"type\": \"string\"",
											"            },",
											"            \"id\": {",
											"              \"type\": \"string\"",
											"            },",
											"            \"foreignIds\": {",
											"              \"type\": \"array\",",
											"              \"items\": {}",
											"            }",
											"          },",
											"          \"required\": [",
											"            \"inn\",",
											"            \"id\",",
											"            \"foreignIds\"",
											"          ]",
											"        },",
											"        \"region\": {",
											"          \"type\": \"object\",",
											"          \"properties\": {",
											"            \"id\": {",
											"              \"type\": \"string\"",
											"            },",
											"            \"code\": {",
											"              \"type\": \"string\"",
											"            }",
											"          },",
											"          \"required\": [",
											"            \"id\",",
											"            \"code\"",
											"          ]",
											"        },",
											"        \"address\": {",
											"          \"type\": \"object\",",
											"          \"properties\": {",
											"            \"gln\": {",
											"              \"type\": \"string\"",
											"            },",
											"            \"city\": {",
											"              \"type\": \"string\"",
											"            }",
											"          },",
											"          \"required\": [",
											"            \"gln\",",
											"            \"city\"",
											"          ]",
											"        },",
											"        \"gln\": {",
											"          \"type\": \"null\"",
											"        }",
											"      },",
											"      \"required\": [",
											"        \"id\",",
											"        \"foreignIds\",",
											"        \"name\",",
											"        \"type\",",
											"        \"company\",",
											"        \"region\",",
											"        \"address\",",
											"        \"gln\"",
											"      ]",
											"    },",
											"    {",
											"      \"type\": \"object\",",
											"      \"properties\": {",
											"        \"id\": {",
											"          \"type\": \"string\"",
											"        },",
											"        \"foreignIds\": {",
											"          \"type\": \"array\",",
											"          \"items\": {}",
											"        },",
											"        \"name\": {",
											"          \"type\": \"string\"",
											"        },",
											"        \"type\": {",
											"          \"type\": \"string\"",
											"        },",
											"        \"company\": {",
											"          \"type\": \"object\",",
											"          \"properties\": {",
											"            \"inn\": {",
											"              \"type\": \"string\"",
											"            },",
											"            \"id\": {",
											"              \"type\": \"string\"",
											"            },",
											"            \"foreignIds\": {",
											"              \"type\": \"array\",",
											"              \"items\": {}",
											"            }",
											"          },",
											"          \"required\": [",
											"            \"inn\",",
											"            \"id\",",
											"            \"foreignIds\"",
											"          ]",
											"        },",
											"        \"region\": {",
											"          \"type\": \"object\",",
											"          \"properties\": {",
											"            \"id\": {",
											"              \"type\": \"string\"",
											"            },",
											"            \"code\": {",
											"              \"type\": \"string\"",
											"            }",
											"          },",
											"          \"required\": [",
											"            \"id\",",
											"            \"code\"",
											"          ]",
											"        },",
											"        \"address\": {",
											"          \"type\": \"object\",",
											"          \"properties\": {",
											"            \"gln\": {",
											"              \"type\": \"string\"",
											"            },",
											"            \"city\": {",
											"              \"type\": \"string\"",
											"            }",
											"          },",
											"          \"required\": [",
											"            \"gln\",",
											"            \"city\"",
											"          ]",
											"        },",
											"        \"gln\": {",
											"          \"type\": \"null\"",
											"        }",
											"      },",
											"      \"required\": [",
											"        \"id\",",
											"        \"foreignIds\",",
											"        \"name\",",
											"        \"type\",",
											"        \"company\",",
											"        \"region\",",
											"        \"address\",",
											"        \"gln\"",
											"      ]",
											"    },",
											"    {",
											"      \"type\": \"object\",",
											"      \"properties\": {",
											"        \"id\": {",
											"          \"type\": \"string\"",
											"        },",
											"        \"foreignIds\": {",
											"          \"type\": \"array\",",
											"          \"items\": {}",
											"        },",
											"        \"name\": {",
											"          \"type\": \"string\"",
											"        },",
											"        \"type\": {",
											"          \"type\": \"string\"",
											"        },",
											"        \"company\": {",
											"          \"type\": \"object\",",
											"          \"properties\": {",
											"            \"inn\": {",
											"              \"type\": \"string\"",
											"            },",
											"            \"id\": {",
											"              \"type\": \"string\"",
											"            },",
											"            \"foreignIds\": {",
											"              \"type\": \"array\",",
											"              \"items\": {}",
											"            }",
											"          },",
											"          \"required\": [",
											"            \"inn\",",
											"            \"id\",",
											"            \"foreignIds\"",
											"          ]",
											"        },",
											"        \"region\": {",
											"          \"type\": \"object\",",
											"          \"properties\": {",
											"            \"id\": {",
											"              \"type\": \"string\"",
											"            },",
											"            \"code\": {",
											"              \"type\": \"string\"",
											"            }",
											"          },",
											"          \"required\": [",
											"            \"id\",",
											"            \"code\"",
											"          ]",
											"        },",
											"        \"address\": {",
											"          \"type\": \"object\",",
											"          \"properties\": {",
											"            \"gln\": {",
											"              \"type\": \"string\"",
											"            },",
											"            \"city\": {",
											"              \"type\": \"string\"",
											"            }",
											"          },",
											"          \"required\": [",
											"            \"gln\",",
											"            \"city\"",
											"          ]",
											"        },",
											"        \"gln\": {",
											"          \"type\": \"null\"",
											"        }",
											"      },",
											"      \"required\": [",
											"        \"id\",",
											"        \"foreignIds\",",
											"        \"name\",",
											"        \"type\",",
											"        \"company\",",
											"        \"region\",",
											"        \"address\",",
											"        \"gln\"",
											"      ]",
											"    }",
											"  ]",
											"}",
											"",
											"let companyType = \"Client\";",
											"let companyType2 = \"Carrier\";",
											"let companyType3=   \"Consignor\"",
											"let companyNoForeignIds = \"Ozon - Ростов-на-Дону\";",
											"",
											"let warehouseName =   \"ДЖОНСОН & ДЖОНСОН ЧЕХОВ\";",
											"let warehouseName2 =   \"Коледино FM\"; ",
											"let warehouseName3 =   \"Электроугли\";",
											"let companyId = \"5b06c5b70c7e6f6764d50d13\";",
											"let companyId2 = \"5b06c5b70c7e6f6764d50d0f\";",
											"let companyId3 = \"5db965f345e507000137a399\";",
											"",
											"pm.test(\"Проверка что статус код 200\", function () {",
											"    pm.response.to.have.status(200);",
											"}); ",
											"",
											"pm.test(\"Проверка схемы\", function () {",
											"  pm.expect(tv4.validate(pm.response.json(), schema, false, true)).to.be.true;",
											"});",
											"",
											"pm.test(\"Проверка что в ответе все типы компаний \", function () {",
											"   _isContains = eval(pm.globals.get(\"_isContains\"));",
											"    pm.expect(_isContains(jsonData, \"type\", \"Client\")).to.have.true;",
											"    pm.expect(_isContains(jsonData, \"type\", \"Carrier\")).to.have.true;",
											"    pm.expect(_isContains(jsonData, \"type\", \"Consignor\")).to.have.true;",
											"});",
											"    ",
											"pm.test(\"Проверка на конкретные склады всех типов\", function () {",
											"    _isContains = eval(pm.globals.get(\"_isContains\"));",
											"    pm.expect(_isContains(jsonData, \"name\", warehouseName)).to.have.true;",
											"    pm.expect(_isContains(jsonData, \"name\", warehouseName2)).to.have.true;",
											"    pm.expect(_isContains(jsonData, \"name\", warehouseName3)).to.have.true;",
											"});",
											"  ",
											"",
											"pm.test(\"Проверка что  gln может быть пустой\", function () {",
											"    warehousesNode = jsonData.find(x => x.gln === null);",
											"    pm.expect(warehousesNode.gln).to.be.null;",
											"});",
											"    ",
											"pm.test(\"Проверка что ForeignID может быть пустой\", function () {",
											"    warehousesNode = jsonData.find(x => x.name === \"Ozon - Ростов-на-Дону\");",
											"    pm.expect(warehousesNode.company.foreignIds).to.be.an('array').that.is.empty;",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{goTestoviyOT}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/warehouses",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"warehouses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение списка складов + параметры",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"jsonData = pm.response.json();",
											"",
											"let warehouseName = \"Агроаспект - Солнечногорск (Пешковское)\";",
											"let warehouseId = \"5e99bf5d8399130001795708\";",
											"let regionId =  \"5bf87204dc28430b4422a7f9\";",
											"let regionCode =   \"RU-MOS\";",
											"let companyType = \"Client\";",
											"let companyForeignId = \"1612\";",
											"let companyId = \"5b7c27eed9fd553724033b20\";",
											"",
											"pm.test(\"Проверка что статус код 200\", function () {",
											"    pm.response.to.have.status(200);",
											"}); ",
											"",
											"pm.test(\"Проверка на конкретный склад\", function () {   ",
											"    _isContains = eval(pm.globals.get(\"_isContains\"));",
											"    pm.expect(_isContains(jsonData, \"name\", warehouseName)).to.have.true;",
											"",
											"    warehouseNode = jsonData.find(x => x.id === warehouseId);",
											"    pm.expect(warehouseNode.name).to.eql(warehouseName);",
											"});",
											"",
											"pm.test(\"Проверка на конкретные параметры из запроса \", function () {",
											"   _.each(jsonData, (item) => {",
											" pm.expect(item.company.foreignIds).to.include(companyForeignId);",
											" pm.expect(item.type).to.equal(companyType);",
											" pm.expect(item.company.id).to.equal(companyId);",
											" pm.expect(item.region.code).to.equal(regionCode);",
											" pm.expect(item.region.id).to.equal(regionId);",
											"  })});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{goTestoviyOT}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/warehouses?type=Client&companyId=5b7c27eed9fd553724033b20&companyForeignId=1612&regionId=5bf87204dc28430b4422a7f9&regionCode=RU-MOS",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"warehouses"
									],
									"query": [
										{
											"key": "type",
											"value": "Client"
										},
										{
											"key": "companyId",
											"value": "5b7c27eed9fd553724033b20"
										},
										{
											"key": "companyForeignId",
											"value": "1612"
										},
										{
											"key": "regionId",
											"value": "5bf87204dc28430b4422a7f9"
										},
										{
											"key": "regionCode",
											"value": "RU-MOS"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение ГО своего склада по id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"jsonData = pm.response.json();",
											"",
											"let WarehouseName= \"Москва\";",
											"let WarehouseId= \"5f50cfdb201b51bccef98421\";",
											"",
											"pm.test(\"Проверка на конкретный склад компании\", function () {",
											"    pm.expect(jsonData.name).to.eql(WarehouseName);",
											"});",
											"",
											"pm.test(\"Проверка на конкретный ID склада\", function () {",
											"    pm.expect(jsonData.id).to.include(WarehouseId);",
											"});",
											"",
											" pm.test(\"Проверка что ForeignID из запроса и gln пустой\", function () {",
											"    pm.expect(jsonData.foreignIds).to.be.empty;",
											"    pm.expect(jsonData.gln).to.be.null;",
											"});",
											"",
											"pm.test(\"Проверка что статус код 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{goPoolingOT}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/warehouses/5f50cfdb201b51bccef98421",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"warehouses",
										"5f50cfdb201b51bccef98421"
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение списка складов ТС от ГО",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"jsonData = pm.response.json();",
											"const companyTsId = \"5b06c5b70c7e6f6764d50d0e\";",
											"const companyTsId2 = \"5b7c27eed9fd553724033b20\";",
											"let companyType = \"Client\";",
											"",
											"pm.test(\"Проверка что статус код 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Проверка что в ответе компания типа ТС\", function () {",
											"     _.each(jsonData, (item) => {",
											"    pm.expect(item.type).to.eql(companyType)});",
											"});",
											"",
											"pm.test(\"Проверить что имя состоит из допустимых символов\", function () {",
											" _.each(jsonData, (item) => {",
											"    pm.expect(item.name).to.be.a('string').and.match(/[а-яА-Яa-zA-Z\"'&0-9.)']$/)",
											"    }) ",
											" })",
											"",
											"pm.test(\"Проверка на  конкретные компании в ответе\", function () {",
											"    warehouseNode = jsonData.find(x => x.company.id === companyTsId);//Тандер",
											"    pm.expect(warehouseNode.company.id).to.eql(companyTsId);",
											"   ",
											"    warehouseNode = jsonData.find(x => x.company.id === companyTsId2);//Х5",
											"    pm.expect(warehouseNode.company.id).to.eql(companyTsId2);",
											"  });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{goTestoviyOT}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/warehouses?type=Client",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"warehouses"
									],
									"query": [
										{
											"key": "type",
											"value": "Client"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение списка складов ТК от ГО",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"jsonData = pm.response.json();",
											"let companyType2= \"Carrier\";",
											"let companyId = \"5b06c5b70c7e6f6764d50d0f\";",
											"",
											"pm.test(\"Проверка что статус код 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Проверка что в ответе ТК компании\", function () {",
											"     _.each(jsonData, (item) => {",
											"    pm.expect(item.type).to.eql(companyType2)});",
											"});",
											" ",
											"pm.test(\"Проверить что имя состоит из допустимых символов\", function () {",
											" _.each(jsonData, (item) => {",
											"        pm.expect(item.name).to.be.a('string').and.match(/[а-яА-Яa-zA-Z\"'&0-9)']/)",
											"    })",
											" })",
											"",
											"pm.test(\"Проверить конкретные компании в ответе\", function () {",
											"    warehouseNode = jsonData.find(x => x.company.id === \"5b06c5b70c7e6f6764d50d0f\");//ФМ",
											"     pm.expect(warehouseNode.company.id).to.eql(companyId);",
											"     });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{goTestoviyOT}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/warehouses?type=Carrier",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"warehouses"
									],
									"query": [
										{
											"key": "type",
											"value": "Carrier"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение списка складов ГО от ГО",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"jsonData = pm.response.json();",
											"let companyType3= \"Consignor\";",
											"let companyId = \"5b06c5b70c7e6f6764d50d13\";",
											"",
											"pm.test(\"Проверка что статус код 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Проверка что имя состоит из допустимых символов\", function () {",
											" _.each(jsonData, (item) => {",
											"        pm.expect(item.name).to.be.a('string').and.match(/[а-яА-Яa-zA-Z\".'&0-9)']/)",
											"    })",
											" })",
											"",
											"pm.test(\"Проверка что в ответе ГО компании\", function () {",
											"     _.each(jsonData, (item) => {",
											"    pm.expect(item.type).to.eql(companyType3)});",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{goTestoviyOT}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/warehouses?type=Consignor",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"warehouses"
									],
									"query": [
										{
											"key": "type",
											"value": "Consignor"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение ТК своего склада по foreignId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"jsonData = pm.response.json();",
											"",
											"let WarehouseNameTK= \"Чехов\";",
											"let WarehouseId= \"5b06c5b70c7e6f6764d50d15\";",
											"",
											"pm.test(\"Проверка на конкретный склад компании\", function () {",
											"    pm.expect(jsonData.name).to.eql(WarehouseNameTK);",
											"});",
											"",
											"pm.test(\"Проверка на конкретный ID склада\", function () {",
											"    pm.expect(jsonData.id).to.eql(WarehouseId);",
											"});",
											" ",
											" pm.test(\"Проверка что имя состоит из допустимых символов\", function () {",
											"    pm.expect(jsonData.name).to.eql(WarehouseNameTK);",
											"    pm.expect(jsonData.name).to.be.a('string').and.match(/[а-яА-Я\"]/);",
											"});",
											" pm.test(\"Проверка что ForeignID и gln пустой\", function () {",
											"    pm.expect(jsonData.foreignIds).to.be.an('array').and.not.to.be.empty;",
											"    pm.expect(jsonData.gln).to.be.null;",
											"});",
											"",
											"pm.test(\"Проверка что статус код 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tkFmOT}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/warehouses/foreign-id/ФМЧЕХОВ",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"warehouses",
										"foreign-id",
										"ФМЧЕХОВ"
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение ТС склада по gln",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"jsonData = pm.response.json();",
											"",
											"let companyWarehouseName= \"Краснодар\";",
											"let companyWarehouseId= \"5b23dfcccd1a2640b4de30b4\";",
											"let companyWarehouseGln= \"4680328204951\"",
											"",
											"pm.test(\"Проверка на конкретный склад компании\", function () {",
											"    pm.expect(jsonData.name).to.eql(companyWarehouseName);",
											"});",
											"",
											"pm.test(\"Проверка на конкретный ID склада\", function () {",
											"    pm.expect(jsonData.id).to.eql(companyWarehouseId);",
											"});",
											" ",
											"pm.test(\"Проверка что имя состоит из допустимых символов\", function () {",
											"    pm.expect(jsonData.name).to.eql(companyWarehouseName);",
											"    pm.expect(jsonData.name).to.be.a('string').and.match(/[а-яА-Я\"]/);",
											"});",
											"",
											"pm.test(\"Проверка на конкретный gln\", function () {",
											"    pm.expect(jsonData.gln).to.include(companyWarehouseGln);",
											"});",
											"",
											"pm.test(\"Статус код 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{tsTanderOT}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/warehouses/gln/4680328204951",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"warehouses",
										"gln",
										"4680328204951"
									]
								}
							},
							"response": []
						},
						{
							"name": "Получение списка складов своей компании",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"jsonData = pm.response.json();",
											"let warehouseName = \"Reckitt Benckiser склад Клин\";",
											"let warehouseId = \"5b59acf34eede70ed041a36b\";",
											"",
											"pm.test(\"Проверить что имя состоит из допустимых символов\", function () {",
											"_isContains = eval(pm.globals.get(\"_isContains\"));",
											" _.each(jsonData, (item) => {",
											"        pm.expect(item.name).to.be.a('string').and.match(/[a-zA-Zа-яА-Я\"&']/)",
											"    })",
											" })",
											"",
											"pm.test(\"Проверка на конкретный склад\", function () {",
											"    _isContains = eval(pm.globals.get(\"_isContains\"));",
											"    pm.expect(_isContains(jsonData, \"name\", warehouseName)).to.have.true;",
											"  ",
											"    warehouseNode = jsonData.find(x => x.id === warehouseId);",
											"    pm.expect(warehouseNode.name).to.eql(warehouseName);",
											"});",
											"",
											" pm.test(\"Проверка что ForeignID и gln пустой\", function () {",
											"   pm.expect(jsonData[0].foreignIds).to.be.an('array').that.is.empty;",
											"   pm.expect(jsonData[0].gln).to.be.null;",
											"})",
											"",
											"pm.test(\"роверка что статус код 200\", function () {",
											"    pm.response.to.have.status(200);",
											"})",
											";"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{goAdminRekitOT}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/warehouses/my",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"warehouses",
										"my"
									]
								}
							},
							"response": []
						},
						{
							"name": "Запрос списка складов без авторизации",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Проверка что статус код 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"pm.test(\"Проверка что ответе нет тела\", function () {",
											"    pm.response.to.not.be.withBody;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/warehouses",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"warehouses"
									]
								}
							},
							"response": []
						},
						{
							"name": "Запрос списка складов с невалидным foreign-id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"jsonData = pm.response.json();",
											"",
											"let titleMistake = \"Not Found\";",
											"",
											"pm.test(\"Проверка что статус код 401\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"pm.test(\"Проверка на конкретную ошибку\", function () {",
											"    pm.expect(jsonData.title).to.include(titleMistake);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{goTestoviyOT}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/warehouses/foreign-id/40",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"warehouses",
										"foreign-id",
										"40"
									]
								}
							},
							"response": []
						},
						{
							"name": "Запрос получения склада по id без авторизации",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Проверка что статус код 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"pm.test(\"Проверка что в ответе нет тела\", function () {",
											"    pm.response.to.not.be.withBody;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/warehouses/?id=5c90e42feea25211d0eb68aa",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"warehouses",
										""
									],
									"query": [
										{
											"key": "id",
											"value": "5c90e42feea25211d0eb68aa"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Запрос склада по id c невалидным ключами, значениями Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"jsonData = pm.response.json();",
											"let titleError = \"Wrong id format at id, 24-digit hex string expected\";",
											"",
											"pm.test(\"Проверка что статус код 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Проверка на конкретную ошибку\", function () {",
											"    pm.expect(jsonData.error).to.include(titleError);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{goTestoviyOT}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v2/warehouses/id=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v2",
										"warehouses",
										"id=0"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "randomNum",
			"value": ""
		}
	]
}